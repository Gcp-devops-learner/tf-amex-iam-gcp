
org_id = "678233521001"
project_id = "prj-l-600001687-poc"

## permission for cloud security admin ##

cloud-security-admin-permissions = [
  "cloudsql.sslCerts.list",
  "cloudsql.users.list",
  "cloudsupport.accounts.getIamPolicy",
  "cloudsupport.accounts.list",
  "cloudsupport.techCases.list",
  "cloudtasks.locations.list",
  "cloudtasks.queues.getIamPolicy",
  "cloudtasks.queues.list",
  "cloudtasks.tasks.list",
  "cloudtoolresults.executions.list",
  "cloudtoolresults.histories.list",
  "cloudtoolresults.steps.list",
  "cloudtrace.insights.list",
  "cloudtrace.tasks.list",
  "cloudtrace.traces.list",
  "cloudtranslate.glossaries.list",
  "cloudtranslate.locations.list",
  "cloudtranslate.operations.list",
  "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
  "cloudvolumesgcp-api.netapp.com/ipRanges.list",
  "cloudvolumesgcp-api.netapp.com/jobs.list",
  "cloudvolumesgcp-api.netapp.com/regions.list",
  "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
  "cloudvolumesgcp-api.netapp.com/snapshots.list",
  "cloudvolumesgcp-api.netapp.com/volumes.list",
  "commerceprice.privateoffers.list",
  "composer.environments.list",
  "composer.imageversions.list",
  "composer.operations.list",
  "compute.acceleratorTypes.get",
  "compute.acceleratorTypes.list",
  "compute.addresses.get",
  "compute.addresses.list",
  "compute.autoscalers.get",
  "compute.autoscalers.list",
  "compute.backendBuckets.get",
  "compute.backendBuckets.list",
  "compute.backendServices.get",
  "compute.backendServices.getIamPolicy",
  "compute.backendServices.list",
  "compute.commitments.get",
  "compute.commitments.list",
  "compute.diskTypes.get",
  "compute.diskTypes.list",
  "compute.disks.get",
  "compute.disks.getIamPolicy",
  "compute.disks.list",
  "compute.externalVpnGateways.get",
  "compute.externalVpnGateways.list",
  "compute.firewallPolicies.get",
  "compute.firewallPolicies.getIamPolicy",
  "compute.firewallPolicies.list",
  "compute.firewalls.get",
  "compute.firewalls.list",
  "compute.forwardingRules.get",
  "compute.forwardingRules.list",
  "compute.globalAddresses.get",
  "compute.globalAddresses.list",
  "compute.globalForwardingRules.get",
  "compute.globalForwardingRules.list",
  "compute.globalForwardingRules.pscGet",
  "compute.globalNetworkEndpointGroups.get",
  "compute.globalNetworkEndpointGroups.list",
  "compute.globalOperations.get",
  "compute.globalOperations.getIamPolicy",
  "compute.globalOperations.list",
  "compute.globalPublicDelegatedPrefixes.get",
  "compute.globalPublicDelegatedPrefixes.list",
  "compute.healthChecks.get",
  "compute.healthChecks.list",
  "compute.httpHealthChecks.get",
  "compute.httpHealthChecks.list",
  "compute.httpsHealthChecks.get",
  "compute.httpsHealthChecks.list",
  "compute.images.get",
  "compute.images.getFromFamily",
  "compute.images.getIamPolicy",
  "compute.images.list",
  "compute.instanceGroupManagers.get",
  "compute.instanceGroupManagers.list",
  "compute.instanceGroups.get",
  "compute.instanceGroups.list",
  "compute.instanceTemplates.get",
  "compute.instanceTemplates.getIamPolicy",
  "compute.instanceTemplates.list",
  "compute.instances.get",
  "compute.instances.getEffectiveFirewalls",
  "compute.instances.getGuestAttributes",
  "compute.instances.getIamPolicy",
  "compute.instances.getScreenshot",
  "compute.instances.getSerialPortOutput",
  "compute.instances.getShieldedInstanceIdentity",
  "compute.instances.getShieldedVmIdentity",
  "compute.instances.list",
  "compute.instances.listReferrers",
  "compute.interconnectAttachments.get",
  "compute.interconnectAttachments.list",
  "compute.interconnectLocations.get",
  "compute.interconnectLocations.list",
  "compute.interconnects.get",
  "compute.interconnects.list",
  "compute.licenseCodes.get",
  "compute.licenseCodes.getIamPolicy",
  "compute.licenseCodes.list",
  "compute.licenses.get",
  "compute.licenses.getIamPolicy",
  "compute.licenses.list",
  "compute.machineImages.get",
  "compute.machineImages.getIamPolicy",
  "compute.machineImages.list",
  "compute.machineTypes.get",
  "compute.machineTypes.list",
  "compute.maintenancePolicies.get",
  "compute.maintenancePolicies.getIamPolicy",
  "compute.maintenancePolicies.list",
  "compute.networkEndpointGroups.get",
  "compute.networkEndpointGroups.getIamPolicy",
  "compute.networkEndpointGroups.list",
  "compute.networks.get",
  "compute.networks.getEffectiveFirewalls",
  "compute.networks.list",
  "compute.networks.listPeeringRoutes",
  "compute.nodeGroups.get",
  "compute.nodeGroups.getIamPolicy",
  "compute.nodeGroups.list",
  "compute.nodeTemplates.get",
  "compute.nodeTemplates.getIamPolicy",
  "compute.nodeTemplates.list",
  "compute.nodeTypes.get",
  "compute.nodeTypes.list",
  "compute.organizations.listAssociations",
  "compute.projects.get",
  "compute.publicAdvertisedPrefixes.get",
  "compute.publicAdvertisedPrefixes.list",
  "compute.publicDelegatedPrefixes.get",
  "compute.publicDelegatedPrefixes.list",
  "compute.regionBackendServices.get",
  "compute.regionBackendServices.getIamPolicy",
  "compute.regionBackendServices.list",
  "compute.regionHealthCheckServices.get",
  "compute.regionHealthCheckServices.list",
  "compute.regionHealthChecks.get",
  "compute.regionHealthChecks.list",
  "compute.regionNetworkEndpointGroups.get",
  "compute.regionNetworkEndpointGroups.list",
  "compute.regionNotificationEndpoints.get",
  "compute.regionNotificationEndpoints.list",
  "compute.regionOperations.get",
  "compute.regionOperations.getIamPolicy",
  "compute.regionOperations.list",
  "compute.regionSslCertificates.get",
  "compute.regionSslCertificates.list",
  "compute.regionTargetHttpProxies.get",
  "compute.regionTargetHttpProxies.list",
  "compute.regionTargetHttpsProxies.get",
  "compute.regionTargetHttpsProxies.list",
  "compute.regionUrlMaps.get",
  "compute.regionUrlMaps.list",
  "compute.regionUrlMaps.validate",
  "compute.regions.get",
  "compute.regions.list",
  "compute.reservations.get",
  "compute.reservations.list",
  "compute.resourcePolicies.get",
  "compute.resourcePolicies.list",
  "compute.routers.get",
  "compute.routers.list",
  "compute.routes.get",
  "compute.routes.list",
  "compute.securityPolicies.get",
  "compute.securityPolicies.getIamPolicy",
  "compute.securityPolicies.list",
  "compute.serviceAttachments.get",
  "compute.serviceAttachments.list",
  "compute.snapshots.get",
  "compute.snapshots.getIamPolicy",
  "compute.snapshots.list",
  "compute.sslCertificates.get",
  "compute.sslCertificates.list",
  "compute.sslPolicies.get",
  "compute.sslPolicies.list",
  "compute.sslPolicies.listAvailableFeatures",
  "compute.subnetworks.get",
  "compute.subnetworks.getIamPolicy",
  "compute.subnetworks.list",
  "compute.targetGrpcProxies.get",
  "compute.targetGrpcProxies.list",
  "compute.targetHttpProxies.get",
  "compute.targetHttpProxies.list",
  "compute.targetHttpsProxies.get",
  "compute.targetHttpsProxies.list",
  "compute.targetInstances.get",
  "compute.targetInstances.list",
  "compute.targetPools.get",
  "compute.targetPools.list",
  "compute.targetSslProxies.get",
  "compute.targetSslProxies.list",
  "compute.targetTcpProxies.get",
  "compute.targetTcpProxies.list",
  "compute.targetVpnGateways.get",
  "compute.targetVpnGateways.list",
  "compute.urlMaps.get",
  "compute.urlMaps.list",
  "compute.urlMaps.validate",
  "compute.vpnGateways.get",
  "compute.vpnGateways.list",
  "compute.vpnTunnels.get",
  "compute.vpnTunnels.list",
  "compute.zoneOperations.get",
  "compute.zoneOperations.getIamPolicy",
  "compute.zoneOperations.list",
  "compute.zones.get",
  "compute.zones.list",
  "connectors.connections.getIamPolicy",
  "connectors.connections.list",
  "connectors.connectors.list",
  "connectors.locations.list",
  "connectors.operations.list",
  "connectors.providers.list",
  "connectors.versions.list",
  "consumerprocurement.accounts.list",
  "consumerprocurement.entitlements.list",
  "consumerprocurement.freeTrials.list",
  "consumerprocurement.orders.list",
  "contactcenterinsights.analyses.list",
  "contactcenterinsights.conversations.list",
  "contactcenterinsights.issueModels.list",
  "contactcenterinsights.issues.list",
  "contactcenterinsights.operations.list",
  "contactcenterinsights.phraseMatchers.list",
  "container.apiServices.get",
  "container.apiServices.getStatus",
  "container.apiServices.list",
  "container.auditSinks.get",
  "container.auditSinks.list",
  "container.backendConfigs.get",
  "container.backendConfigs.list",
  "container.bindings.get",
  "container.bindings.list",
  "container.certificateSigningRequests.get",
  "container.certificateSigningRequests.getStatus",
  "container.certificateSigningRequests.list",
  "container.clusterRoleBindings.get",
  "container.clusterRoleBindings.list",
  "container.clusterRoles.get",
  "container.clusterRoles.list",
  "container.clusters.get",
  "container.clusters.list",
  "container.componentStatuses.get",
  "container.componentStatuses.list",
  "container.configMaps.get",
  "container.configMaps.list",
  "container.controllerRevisions.get",
  "container.controllerRevisions.list",
  "container.cronJobs.get",
  "container.cronJobs.getStatus",
  "container.cronJobs.list",
  "container.csiDrivers.get",
  "container.csiDrivers.list",
  "container.csiNodeInfos.get",
  "container.csiNodeInfos.list",
  "container.csiNodes.get",
  "container.csiNodes.list",
  "container.customResourceDefinitions.get",
  "container.customResourceDefinitions.getStatus",
  "container.customResourceDefinitions.list",
  "container.daemonSets.get",
  "container.daemonSets.getStatus",
  "container.daemonSets.list",
  "container.deployments.get",
  "container.deployments.getScale",
  "container.deployments.getStatus",
  "container.deployments.list",
  "container.endpointSlices.get",
  "container.endpointSlices.list",
  "container.endpoints.get",
  "container.endpoints.list",
  "container.events.get",
  "container.events.list",
  "container.frontendConfigs.get",
  "container.frontendConfigs.list",
  "container.horizontalPodAutoscalers.get",
  "container.horizontalPodAutoscalers.getStatus",
  "container.horizontalPodAutoscalers.list",
  "container.ingresses.get",
  "container.ingresses.getStatus",
  "container.ingresses.list",
  "container.initializerConfigurations.get",
  "container.initializerConfigurations.list",
  "container.jobs.get",
  "container.jobs.getStatus",
  "container.jobs.list",
  "container.leases.get",
  "container.leases.list",
  "container.limitRanges.get",
  "container.limitRanges.list",
  "container.localSubjectAccessReviews.list",
  "container.managedCertificates.get",
  "container.managedCertificates.list",
  "container.mutatingWebhookConfigurations.get",
  "container.mutatingWebhookConfigurations.list",
  "container.namespaces.get",
  "container.namespaces.getStatus",
  "container.namespaces.list",
  "container.networkPolicies.get",
  "container.networkPolicies.list",
  "container.nodes.get",
  "container.nodes.getStatus",
  "container.nodes.list",
  "container.operations.get",
  "container.operations.list",
  "container.persistentVolumeClaims.get",
  "container.persistentVolumeClaims.getStatus",
  "container.persistentVolumeClaims.list",
  "container.persistentVolumes.get",
  "container.persistentVolumes.getStatus",
  "container.persistentVolumes.list",
  "container.petSets.get",
  "container.petSets.list",
  "container.podDisruptionBudgets.get",
  "container.podDisruptionBudgets.getStatus",
  "container.podDisruptionBudgets.list",
  "container.podPresets.get",
  "container.podPresets.list",
  "container.podSecurityPolicies.get",
  "container.podSecurityPolicies.list",
  "container.podTemplates.get",
  "container.podTemplates.list",
  "container.pods.get",
  "container.pods.getStatus",
  "container.pods.list",
  "container.priorityClasses.get",
  "container.priorityClasses.list",
  "container.replicaSets.get",
  "container.replicaSets.getScale",
  "container.replicaSets.getStatus",
  "container.replicaSets.list",
  "container.replicationControllers.get",
  "container.replicationControllers.getScale",
  "container.replicationControllers.getStatus",
  "container.replicationControllers.list",
  "container.resourceQuotas.get",
  "container.resourceQuotas.getStatus",
  "container.resourceQuotas.list",
  "container.roleBindings.get",
  "container.roleBindings.list",
  "container.roles.get",
  "container.roles.list",
  "container.runtimeClasses.get",
  "container.runtimeClasses.list",
  "container.scheduledJobs.get",
  "container.scheduledJobs.list",
  "container.selfSubjectAccessReviews.list",
  "container.serviceAccounts.get",
  "container.serviceAccounts.list",
  "container.services.get",
  "container.services.getStatus",
  "container.services.list",
  "container.statefulSets.get",
  "container.statefulSets.getScale",
  "container.statefulSets.getStatus",
  "container.statefulSets.list",
  "container.storageClasses.get",
  "container.storageClasses.list",
  "container.storageStates.get",
  "container.storageStates.getStatus",
  "container.storageStates.list",
  "container.storageVersionMigrations.get",
  "container.storageVersionMigrations.getStatus",
  "container.storageVersionMigrations.list",
  "container.subjectAccessReviews.list",
  "container.thirdPartyObjects.get",
  "container.thirdPartyObjects.list",
  "container.thirdPartyResources.get",
  "container.thirdPartyResources.list",
  "container.tokenReviews.create",
  "container.updateInfos.get",
  "container.updateInfos.list",
  "container.validatingWebhookConfigurations.get",
  "container.validatingWebhookConfigurations.list",
  "container.volumeAttachments.get",
  "container.volumeAttachments.getStatus",
  "container.volumeAttachments.list",
  "container.volumeSnapshotClasses.get",
  "container.volumeSnapshotClasses.list",
  "container.volumeSnapshotContents.get",
  "container.volumeSnapshotContents.getStatus",
  "container.volumeSnapshotContents.list",
  "container.volumeSnapshots.get",
  "container.volumeSnapshots.list",
  "containeranalysis.notes.getIamPolicy",
  "containeranalysis.notes.list",
  "containeranalysis.occurrences.getIamPolicy",
  "containeranalysis.occurrences.list",
  "datacatalog.categories.getIamPolicy",
  "datacatalog.entries.getIamPolicy",
  "datacatalog.entries.list",
  "datacatalog.entryGroups.getIamPolicy",
  "datacatalog.entryGroups.list",
  "datacatalog.tagTemplates.getIamPolicy",
  "datacatalog.taxonomies.getIamPolicy",
  "datacatalog.taxonomies.list",
  "dataflow.jobs.list",
  "dataflow.messages.list",
  "dataflow.snapshots.list",
  "datafusion.instances.getIamPolicy",
  "datafusion.instances.list",
  "datafusion.locations.list",
  "datafusion.operations.list",
  "datalabeling.annotateddatasets.list",
  "datalabeling.annotationspecsets.list",
  "datalabeling.dataitems.list",
  "datalabeling.datasets.list",
  "datalabeling.examples.list",
  "datalabeling.instructions.list",
  "datalabeling.operations.list",
  "datamigration.connectionprofiles.getIamPolicy",
  "datamigration.connectionprofiles.list",
  "datamigration.locations.list",
  "datamigration.migrationjobs.getIamPolicy",
  "datamigration.migrationjobs.list",
  "datamigration.operations.list",
  "datapipelines.pipelines.list",
  "dataproc.agents.list",
  "dataproc.autoscalingPolicies.getIamPolicy",
  "dataproc.autoscalingPolicies.list",
  "dataproc.clusters.getIamPolicy",
  "dataproc.clusters.list",
  "dataproc.jobs.getIamPolicy",
  "dataproc.jobs.list",
  "dataproc.operations.getIamPolicy",
  "dataproc.operations.list",
  "dataproc.workflowTemplates.getIamPolicy",
  "dataproc.workflowTemplates.list",
  "dataprocessing.datasources.list",
  "dataprocessing.featurecontrols.list",
  "dataprocessing.groupcontrols.list",
  "datastore.entities.list",
  "datastore.indexes.list",
  "datastore.locations.list",
  "datastore.namespaces.list",
  "datastore.operations.list",
  "datastore.statistics.list",
  "datastream.connectionProfiles.getIamPolicy",
  "datastream.connectionProfiles.list",
  "datastream.locations.list",
  "datastream.operations.list",
  "datastream.privateConnections.getIamPolicy",
  "datastream.privateConnections.list",
  "datastream.routes.getIamPolicy",
  "datastream.routes.list",
  "datastream.streams.getIamPolicy",
  "datastream.streams.list",
  "deploymentmanager.compositeTypes.list",
  "deploymentmanager.deployments.getIamPolicy",
  "deploymentmanager.deployments.list",
  "deploymentmanager.manifests.list",
  "deploymentmanager.operations.list",
  "deploymentmanager.resources.list",
  "deploymentmanager.typeProviders.list",
  "deploymentmanager.types.list",
  "dialogflow.agents.list",
  "dialogflow.answerrecords.list",
  "dialogflow.callMatchers.list",
  "dialogflow.changelogs.list",
  "dialogflow.contexts.list",
  "dialogflow.conversationDatasets.list",
  "dialogflow.conversationModels.list",
  "dialogflow.conversationProfiles.list",
  "dialogflow.conversations.list",
  "dialogflow.documents.list",
  "dialogflow.entityTypes.list",
  "dialogflow.environments.list",
  "dialogflow.flows.list",
  "dialogflow.intents.list",
  "dialogflow.knowledgeBases.list",
  "dialogflow.messages.list",
  "dialogflow.modelEvaluations.list",
  "dialogflow.pages.list",
  "dialogflow.participants.list",
  "dialogflow.phoneNumberOrders.list",
  "dialogflow.phoneNumbers.list",
  "dialogflow.securitySettings.list",
  "dialogflow.sessionEntityTypes.list",
  "dialogflow.smartMessagingEntries.list",
  "dialogflow.transitionRouteGroups.list",
  "dialogflow.versions.list",
  "dialogflow.webhooks.list",
  "dlp.analyzeRiskTemplates.list",
  "dlp.columnDataProfiles.list",
  "dlp.deidentifyTemplates.list",
  "dlp.estimates.list",
  "dlp.inspectFindings.list",
  "dlp.inspectTemplates.list",
  "dlp.jobTriggers.list",
  "dlp.jobs.list",
  "dlp.projectDataProfiles.list",
  "dlp.storedInfoTypes.list",
  "dlp.tableDataProfiles.list",
  "dns.changes.list",
  "dns.dnsKeys.list",
  "dns.managedZoneOperations.list",
  "dns.managedZones.list",
  "dns.policies.getIamPolicy",
  "dns.policies.list",
  "dns.resourceRecordSets.list",
  "dns.responsePolicies.list",
  "dns.responsePolicyRules.list",
  "documentai.evaluations.list",
  "documentai.labelerPools.list",
  "documentai.locations.list",
  "documentai.processorTypes.list",
  "documentai.processorVersions.list",
  "documentai.processors.list",
  "domains.locations.list",
  "domains.operations.list",
  "earlyaccesscenter.campaigns.list",
  "earlyaccesscenter.customerAllowlists.list",
  "earthengine.assets.getIamPolicy",
  "earthengine.assets.list",
  "earthengine.operations.list",
  "errorreporting.applications.list",
  "errorreporting.errorEvents.list",
  "errorreporting.groups.list",
  "essentialcontacts.contacts.list",
  "eventarc.locations.list",
  "eventarc.operations.list",
  "eventarc.triggers.getIamPolicy",
  "eventarc.triggers.list",
  "fcmdata.deliverydata.list",
  "file.backups.list",
  "file.instances.list",
  "file.locations.list",
  "file.operations.list",
  "file.snapshots.list",
  "firebase.clients.list",
  "firebase.links.list",
  "firebase.playLinks.list",
  "firebaseabt.experiments.list",
  "firebaseappdistro.groups.list",
  "firebaseappdistro.releases.list",
  "firebaseappdistro.testers.list",
  "firebasecrashlytics.issues.list",
  "firebasedatabase.instances.list",
  "firebasedynamiclinks.destinations.list",
  "firebasedynamiclinks.domains.list",
  "firebasedynamiclinks.links.list",
  "firebaseextensions.configs.list",
  "firebasehosting.sites.list",
  "firebaseinappmessaging.campaigns.list",
  "firebaseml.compressionjobs.list",
  "firebaseml.models.list",
  "firebaseml.modelversions.list",
  "firebasenotifications.messages.list",
  "firebasepredictions.predictions.list",
  "firebaserules.releases.list",
  "firebaserules.rulesets.list",
  "firebasestorage.buckets.list",
  "fleetengine.vehicles.list",
  "gameservices.gameServerClusters.list",
  "gameservices.gameServerConfigs.list",
  "gameservices.gameServerDeployments.list",
  "gameservices.locations.list",
  "gameservices.operations.list",
  "gameservices.realms.list",
  "genomics.datasets.getIamPolicy",
  "genomics.datasets.list",
  "genomics.operations.list",
  "gkehub.gateway.getIamPolicy",
  "gkehub.locations.list",
  "gkehub.memberships.getIamPolicy",
  "gkehub.memberships.list",
  "gkehub.operations.list",
  "gkemulticloud.awsClusters.list",
  "gkemulticloud.awsNodePools.list",
  "gkemulticloud.azureClients.list",
  "gkemulticloud.azureClusters.list",
  "gkemulticloud.azureNodePools.list",
  "gkemulticloud.operations.list",
  "gsuiteaddons.deployments.list",
  "healthcare.annotationStores.getIamPolicy",
  "healthcare.annotationStores.list",
  "healthcare.annotations.list",
  "healthcare.attributeDefinitions.list",
  "healthcare.consentArtifacts.list",
  "healthcare.consentStores.getIamPolicy",
  "healthcare.consentStores.list",
  "healthcare.consents.list",
  "healthcare.datasets.getIamPolicy",
  "healthcare.datasets.list",
  "healthcare.dicomStores.getIamPolicy",
  "healthcare.dicomStores.list",
  "healthcare.fhirStores.getIamPolicy",
  "healthcare.fhirStores.list",
  "healthcare.hl7V2Messages.list",
  "healthcare.hl7V2Stores.getIamPolicy",
  "healthcare.hl7V2Stores.list",
  "healthcare.locations.list",
  "healthcare.operations.list",
  "healthcare.userDataMappings.list",
  "iam.googleapis.com/workloadIdentityPoolProviders.list",
  "iam.googleapis.com/workloadIdentityPools.list",
  "iam.roles.get",
  "iam.roles.list",
  "iam.serviceAccountKeys.list",
  "iam.serviceAccounts.get",
  "iam.serviceAccounts.getIamPolicy",
  "iam.serviceAccounts.list",
  "iap.tunnel.getIamPolicy",
  "iap.tunnelInstances.getIamPolicy",
  "iap.tunnelZones.getIamPolicy",
  "iap.web.getIamPolicy",
  "iap.webServiceVersions.getIamPolicy",
  "iap.webServices.getIamPolicy",
  "iap.webTypes.getIamPolicy",
  "integrations.apigeeAuthConfigs.list",
  "integrations.apigeeCertificates.list",
  "integrations.apigeeExecutions.list",
  "integrations.apigeeIntegrationVers.list",
  "integrations.apigeeIntegrations.list",
  "integrations.apigeeSfdcChannels.list",
  "integrations.apigeeSfdcInstances.list",
  "integrations.apigeeSuspensions.list",
  "integrations.securityAuthConfigs.list",
  "integrations.securityExecutions.list",
  "integrations.securityIntegTempVers.list",
  "integrations.securityIntegrationVers.list",
  "integrations.securityIntegrations.list",
  "lifesciences.operations.list",
  "livestream.channels.list",
  "livestream.events.list",
  "livestream.inputs.list",
  "livestream.locations.list",
  "livestream.operations.list",
  "logging.buckets.create",
  "logging.buckets.delete",
  "logging.buckets.get",
  "logging.buckets.list",
  "logging.buckets.undelete",
  "logging.buckets.update",
  "logging.cmekSettings.get",
  "logging.cmekSettings.update",
  "logging.exclusions.create",
  "logging.exclusions.delete",
  "logging.exclusions.get",
  "logging.exclusions.list",
  "logging.exclusions.update",
  "logging.locations.get",
  "logging.locations.list",
  "logging.logEntries.list",
  "logging.logMetrics.create",
  "logging.logMetrics.delete",
  "logging.logMetrics.get",
  "logging.logMetrics.list",
  "logging.logMetrics.update",
  "logging.logServiceIndexes.list",
  "logging.logServices.list",
  "logging.logs.list",
  "logging.notificationRules.create",
  "logging.notificationRules.delete",
  "logging.notificationRules.get",
  "logging.notificationRules.list",
  "logging.notificationRules.update",
  "logging.operations.cancel",
  "logging.operations.get",
  "logging.operations.list",
  "logging.privateLogEntries.list",
  "logging.queries.create",
  "logging.queries.delete",
  "logging.queries.get",
  "logging.queries.list",
  "logging.queries.listShared",
  "logging.queries.update",
  "logging.sinks.create",
  "logging.sinks.delete",
  "logging.sinks.get",
  "logging.sinks.list",
  "logging.sinks.update",
  "logging.usage.get",
  "logging.views.access",
  "logging.views.create",
  "logging.views.delete",
  "logging.views.get",
  "logging.views.list",
  "logging.views.update",
  "managedidentities.domains.getIamPolicy",
  "managedidentities.domains.list",
  "managedidentities.locations.list",
  "managedidentities.operations.list",
  "managedidentities.peerings.getIamPolicy",
  "managedidentities.peerings.list",
  "managedidentities.sqlintegrations.list",
  "memcache.instances.list",
  "memcache.locations.list",
  "memcache.operations.list",
  "metastore.backups.list",
  "metastore.imports.list",
  "metastore.locations.list",
  "metastore.operations.list",
  "metastore.services.getIamPolicy",
  "metastore.services.list",
  "ml.jobs.getIamPolicy",
  "ml.jobs.list",
  "ml.locations.list",
  "ml.models.getIamPolicy",
  "ml.models.list",
  "ml.operations.list",
  "ml.studies.getIamPolicy",
  "ml.studies.list",
  "ml.trials.list",
  "ml.versions.list",
  "monitoring.alertPolicies.list",
  "monitoring.dashboards.list",
  "monitoring.groups.list",
  "monitoring.metricDescriptors.list",
  "monitoring.monitoredResourceDescriptors.list",
  "monitoring.notificationChannelDescriptors.list",
  "monitoring.notificationChannels.list",
  "monitoring.publicWidgets.list",
  "monitoring.services.list",
  "monitoring.slos.list",
  "monitoring.timeSeries.list",
  "monitoring.uptimeCheckConfigs.list",
  "networkconnectivity.hubs.getIamPolicy",
  "networkconnectivity.hubs.list",
  "networkconnectivity.locations.list",
  "networkconnectivity.operations.list",
  "networkconnectivity.spokes.getIamPolicy",
  "networkconnectivity.spokes.list",
  "networkmanagement.connectivitytests.getIamPolicy",
  "networkmanagement.connectivitytests.list",
  "networkmanagement.locations.list",
  "networkmanagement.operations.list",
  "networksecurity.authorizationPolicies.getIamPolicy",
  "networksecurity.authorizationPolicies.list",
  "networksecurity.clientTlsPolicies.getIamPolicy",
  "networksecurity.clientTlsPolicies.list",
  "networksecurity.locations.list",
  "networksecurity.operations.list",
  "networksecurity.serverTlsPolicies.getIamPolicy",
  "networksecurity.serverTlsPolicies.list",
  "networkservices.endpointConfigSelectors.getIamPolicy",
  "networkservices.endpointConfigSelectors.list",
  "networkservices.endpointPolicies.getIamPolicy",
  "networkservices.endpointPolicies.list",
  "networkservices.httpFilters.getIamPolicy",
  "networkservices.httpFilters.list",
  "networkservices.httpfilters.getIamPolicy",
  "networkservices.httpfilters.list",
  "networkservices.locations.list",
  "networkservices.operations.list",
  "notebooks.environments.getIamPolicy",
  "notebooks.environments.list",
  "notebooks.executions.getIamPolicy",
  "notebooks.executions.list",
  "notebooks.instances.getIamPolicy",
  "notebooks.instances.list",
  "notebooks.locations.list",
  "notebooks.operations.list",
  "notebooks.runtimes.getIamPolicy",
  "notebooks.runtimes.list",
  "notebooks.schedules.getIamPolicy",
  "notebooks.schedules.list",
  "ondemandscanning.operations.list",
  "opsconfigmonitoring.resourceMetadata.list",
  "orgpolicy.constraints.list",
  "orgpolicy.policies.list",
  "orgpolicy.policy.get",
  "osconfig.guestPolicies.list",
  "osconfig.instanceOSPoliciesCompliances.list",
  "osconfig.inventories.list",
  "osconfig.osPolicyAssignmentReports.list",
  "osconfig.osPolicyAssignments.list",
  "osconfig.patchDeployments.list",
  "osconfig.patchJobs.list",
  "osconfig.vulnerabilityReports.list",
  "paymentsresellersubscription.products.list",
  "paymentsresellersubscription.promotions.list",
  "policysimulator.replayResults.list",
  "policysimulator.replays.list",
  "privateca.caPools.getIamPolicy",
  "privateca.caPools.list",
  "privateca.certificateAuthorities.getIamPolicy",
  "privateca.certificateAuthorities.list",
  "privateca.certificateRevocationLists.getIamPolicy",
  "privateca.certificateRevocationLists.list",
  "privateca.certificateTemplates.getIamPolicy",
  "privateca.certificateTemplates.list",
  "privateca.certificates.getIamPolicy",
  "privateca.certificates.list",
  "privateca.locations.list",
  "privateca.operations.list",
  "privateca.reusableConfigs.getIamPolicy",
  "privateca.reusableConfigs.list",
  "proximitybeacon.attachments.list",
  "proximitybeacon.beacons.getIamPolicy",
  "proximitybeacon.beacons.list",
  "proximitybeacon.namespaces.getIamPolicy",
  "proximitybeacon.namespaces.list",
  "pubsub.schemas.getIamPolicy",
  "pubsub.schemas.list",
  "pubsub.snapshots.getIamPolicy",
  "pubsub.snapshots.list",
  "pubsub.subscriptions.getIamPolicy",
  "pubsub.subscriptions.list",
  "pubsub.topics.getIamPolicy",
  "pubsub.topics.list",
  "pubsublite.operations.list",
  "pubsublite.reservations.list",
  "pubsublite.subscriptions.list",
  "pubsublite.topics.list",
  "recaptchaenterprise.keys.list",
  "recaptchaenterprise.relatedaccountgroupmemberships.list",
  "recaptchaenterprise.relatedaccountgroups.list",
  "recommender.bigqueryCapacityCommitmentsInsights.list",
  "recommender.bigqueryCapacityCommitmentsRecommendations.list",
  "recommender.cloudAssetInsights.list",
  "recommender.cloudsqlIdleInstanceRecommendations.list",
  "recommender.cloudsqlInstanceActivityInsights.list",
  "recommender.cloudsqlInstanceCpuUsageInsights.list",
  "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
  "recommender.cloudsqlInstanceMemoryUsageInsights.list",
  "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
  "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
  "recommender.commitmentUtilizationInsights.list",
  "recommender.computeAddressIdleResourceInsights.list",
  "recommender.computeAddressIdleResourceRecommendations.list",
  "recommender.computeDiskIdleResourceInsights.list",
  "recommender.computeDiskIdleResourceRecommendations.list",
  "recommender.computeFirewallInsights.list",
  "recommender.computeImageIdleResourceInsights.list",
  "recommender.computeImageIdleResourceRecommendations.list",
  "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
  "recommender.computeInstanceIdleResourceRecommendations.list",
  "recommender.computeInstanceMachineTypeRecommendations.list",
  "recommender.iamPolicyInsights.list",
  "recommender.iamPolicyLateralMovementInsights.list",
  "recommender.iamPolicyRecommendations.list",
  "recommender.iamServiceAccountInsights.list",
  "recommender.locations.list",
  "recommender.loggingProductSuggestionContainerInsights.list",
  "recommender.loggingProductSuggestionContainerRecommendations.list",
  "recommender.monitoringProductSuggestionComputeInsights.list",
  "recommender.monitoringProductSuggestionComputeRecommendations.list",
  "recommender.resourcemanagerProjectUtilizationInsights.list",
  "recommender.resourcemanagerProjectUtilizationRecommendations.list",
  "recommender.usageCommitmentRecommendations.list",
  "redis.instances.list",
  "redis.locations.list",
  "redis.operations.list",
  "remotebuildexecution.instances.list",
  "remotebuildexecution.workerpools.list",
  "resourcemanager.folders.get",
  "resourcemanager.folders.getIamPolicy",
  "resourcemanager.folders.list",
  "resourcemanager.hierarchyNodes.listTagBindings",
  "resourcemanager.organizations.get",
  "resourcemanager.organizations.getIamPolicy",
  "resourcemanager.projects.get",
  "resourcemanager.projects.getIamPolicy",
  "resourcemanager.projects.list",
  "resourcemanager.tagKeys.getIamPolicy",
  "resourcemanager.tagKeys.list",
  "resourcemanager.tagValues.getIamPolicy",
  "resourcemanager.tagValues.list",
  "resourcesettings.settings.list",
  "retail.catalogs.list",
  "retail.operations.list",
  "retail.products.list",
  "riskmanager.operations.list",
  "riskmanager.policies.list",
  "riskmanager.reports.list",
  "run.configurations.list",
  "run.locations.list",
  "run.revisions.list",
  "run.routes.list",
  "run.services.getIamPolicy",
  "run.services.list",
  "runtimeconfig.configs.getIamPolicy",
  "runtimeconfig.configs.list",
  "runtimeconfig.operations.list",
  "runtimeconfig.variables.getIamPolicy",
  "runtimeconfig.variables.list",
  "runtimeconfig.waiters.getIamPolicy",
  "runtimeconfig.waiters.list",
  "secretmanager.locations.list",
  "secretmanager.secrets.getIamPolicy",
  "secretmanager.secrets.list",
  "secretmanager.versions.list",
  "securitycenter.assets.group",
  "securitycenter.assets.list",
  "securitycenter.assets.listAssetPropertyNames",
  "securitycenter.assets.runDiscovery",
  "securitycenter.assetsecuritymarks.update",
  "securitycenter.containerthreatdetectionsettings.calculate",
  "securitycenter.containerthreatdetectionsettings.get",
  "securitycenter.containerthreatdetectionsettings.update",
  "securitycenter.eventthreatdetectionsettings.calculate",
  "securitycenter.eventthreatdetectionsettings.get",
  "securitycenter.eventthreatdetectionsettings.update",
  "securitycenter.findings.group",
  "securitycenter.findings.list",
  "securitycenter.findings.listFindingPropertyNames",
  "securitycenter.findings.setState",
  "securitycenter.findings.setWorkflowState",
  "securitycenter.findings.update",
  "securitycenter.findingsecuritymarks.update",
  "securitycenter.notificationconfig.create",
  "securitycenter.notificationconfig.delete",
  "securitycenter.notificationconfig.get",
  "securitycenter.notificationconfig.list",
  "securitycenter.notificationconfig.update",
  "securitycenter.organizationsettings.get",
  "securitycenter.organizationsettings.update",
  "securitycenter.securitycentersettings.get",
  "securitycenter.securitycentersettings.update",
  "securitycenter.securityhealthanalyticssettings.calculate",
  "securitycenter.securityhealthanalyticssettings.get",
  "securitycenter.securityhealthanalyticssettings.update",
  "securitycenter.sources.get",
  "securitycenter.sources.getIamPolicy",
  "securitycenter.sources.list",
  "securitycenter.sources.setIamPolicy",
  "securitycenter.sources.update",
  "securitycenter.subscription.get",
  "securitycenter.userinterfacemetadata.get",
  "securitycenter.websecurityscannersettings.calculate",
  "securitycenter.websecurityscannersettings.get",
  "securitycenter.websecurityscannersettings.update",
  "servicebroker.bindingoperations.list",
  "servicebroker.bindings.getIamPolicy",
  "servicebroker.bindings.list",
  "servicebroker.catalogs.getIamPolicy",
  "servicebroker.catalogs.list",
  "servicebroker.instanceoperations.list",
  "servicebroker.instances.getIamPolicy",
  "servicebroker.instances.list",
  "serviceconsumermanagement.tenancyu.list",
  "servicedirectory.endpoints.getIamPolicy",
  "servicedirectory.endpoints.list",
  "servicedirectory.locations.list",
  "servicedirectory.namespaces.getIamPolicy",
  "servicedirectory.namespaces.list",
  "servicedirectory.services.getIamPolicy",
  "servicedirectory.services.list",
  "servicemanagement.services.getIamPolicy",
  "servicemanagement.services.list",
  "servicenetworking.operations.list",
  "serviceusage.operations.list",
  "serviceusage.quotas.get",
  "serviceusage.services.get",
  "serviceusage.services.list",
  "source.repos.getIamPolicy",
  "source.repos.list",
  "spanner.backupOperations.list",
  "spanner.backups.getIamPolicy",
  "spanner.backups.list",
  "spanner.databaseOperations.list",
  "spanner.databases.getIamPolicy",
  "spanner.databases.list",
  "spanner.instanceConfigs.list",
  "spanner.instanceOperations.list",
  "spanner.instances.getIamPolicy",
  "spanner.instances.list",
  "spanner.sessions.list",
  "speech.customClasses.list",
  "speech.phraseSets.list",
  "storage.buckets.getIamPolicy",
  "storage.buckets.list",
  "storage.hmacKeys.list",
  "storage.multipartUploads.list",
  "storage.objects.getIamPolicy",
  "storage.objects.list",
  "storagetransfer.agentpools.list",
  "storagetransfer.jobs.list",
  "storagetransfer.operations.list",
  "tpu.acceleratortypes.list",
  "tpu.locations.list",
  "tpu.nodes.list",
  "tpu.operations.list",
  "tpu.tensorflowversions.list",
  "transcoder.jobTemplates.list",
  "transcoder.jobs.list",
  "translationhub.portals.list",
  "visualinspection.annotationSets.list",
  "visualinspection.annotationSpecs.list",
  "visualinspection.annotations.list",
  "visualinspection.datasets.list",
  "visualinspection.images.list",
  "visualinspection.locations.list",
  "visualinspection.modelEvaluations.list",
  "visualinspection.models.list",
  "visualinspection.modules.list",
  "visualinspection.operations.list",
  "visualinspection.solutionArtifacts.list",
  "visualinspection.solutions.list",
  "vmmigration.cloneJobs.list",
  "vmmigration.cutoverJobs.list",
  "vmmigration.datacenterConnectors.list",
  "vmmigration.deployments.list",
  "vmmigration.groups.list",
  "vmmigration.locations.list",
  "vmmigration.migratingVms.list",
  "vmmigration.operations.list",
  "vmmigration.sources.list",
  "vmmigration.targets.list",
  "vmmigration.utilizationReports.list",
  "vpcaccess.connectors.list",
  "vpcaccess.locations.list",
  "vpcaccess.operations.list",
  "workflows.executions.list",
  "workflows.locations.list",
  "workflows.operations.list",
  "workflows.workflows.getIamPolicy",
  "workflows.workflows.list",
]

## permission for Iam admin ##

iam-admin-permissions = [
  "automl.operations.list",
  "automl.tableSpecs.list",
  "automlrecommendations.apiKeys.list",
  "automlrecommendations.catalogItems.list",
  "automlrecommendations.catalogs.list",
  "automlrecommendations.events.list",
  "automlrecommendations.placements.list",
  "automlrecommendations.recommendations.list",
  "autoscaling.sites.getIamPolicy",
  "autoscaling.sites.setIamPolicy",
  "baremetalsolution.instances.list",
  "bigquery.capacityCommitments.list",
  "bigquery.connections.getIamPolicy",
  "bigquery.connections.list",
  "bigquery.connections.setIamPolicy",
  "bigquery.datasets.getIamPolicy",
  "bigquery.datasets.setIamPolicy",
  "bigquery.jobs.list",
  "bigquery.models.list",
  "bigquery.reservationAssignments.list",
  "bigquery.reservations.list",
  "bigquery.routines.list",
  "bigquery.rowAccessPolicies.getIamPolicy",
  "bigquery.rowAccessPolicies.list",
  "bigquery.rowAccessPolicies.setIamPolicy",
  "bigquery.savedqueries.list",
  "bigquery.tables.getIamPolicy",
  "bigquery.tables.list",
  "bigquery.tables.setIamPolicy",
  "bigtable.appProfiles.list",
  "bigtable.backups.getIamPolicy",
  "bigtable.backups.list",
  "bigtable.backups.setIamPolicy",
  "bigtable.clusters.list",
  "bigtable.instances.getIamPolicy",
  "bigtable.instances.list",
  "bigtable.instances.setIamPolicy",
  "bigtable.keyvisualizer.list",
  "bigtable.locations.list",
  "bigtable.tables.getIamPolicy",
  "bigtable.tables.list",
  "bigtable.tables.setIamPolicy",
  "billing.accounts.getIamPolicy",
  "billing.accounts.list",
  "billing.accounts.setIamPolicy",
  "billing.budgets.list",
  "billing.credits.list",
  "billing.resourceAssociations.list",
  "billing.subscriptions.list",
  "binaryauthorization.attestors.getIamPolicy",
  "binaryauthorization.attestors.list",
  "binaryauthorization.attestors.setIamPolicy",
  "binaryauthorization.continuousValidationConfig.getIamPolicy",
  "binaryauthorization.continuousValidationConfig.setIamPolicy",
  "binaryauthorization.policy.getIamPolicy",
  "binaryauthorization.policy.setIamPolicy",
  "clientauthconfig.brands.list",
  "clientauthconfig.clients.list",
  "cloudasset.assets.searchAllResources",
  "cloudasset.feeds.list",
  "cloudbuild.builds.list",
  "cloudbuild.workerpools.list",
  "clouddebugger.breakpoints.list",
  "clouddebugger.debuggees.list",
  "clouddeploy.deliveryPipelines.getIamPolicy",
  "clouddeploy.deliveryPipelines.list",
  "clouddeploy.deliveryPipelines.setIamPolicy",
  "clouddeploy.locations.list",
  "clouddeploy.operations.list",
  "clouddeploy.releases.list",
  "clouddeploy.rollouts.list",
  "clouddeploy.targets.getIamPolicy",
  "clouddeploy.targets.list",
  "clouddeploy.targets.setIamPolicy",
  "cloudfunctions.functions.getIamPolicy",
  "cloudfunctions.functions.list",
  "cloudfunctions.functions.setIamPolicy",
  "cloudfunctions.locations.list",
  "cloudfunctions.operations.list",
  "cloudiot.devices.list",
  "cloudiot.registries.getIamPolicy",
  "cloudiot.registries.list",
  "cloudiot.registries.setIamPolicy",
  "cloudjobdiscovery.companies.list",
  "cloudkms.cryptoKeyVersions.list",
  "cloudkms.cryptoKeys.getIamPolicy",
  "cloudkms.cryptoKeys.list",
  "cloudkms.cryptoKeys.setIamPolicy",
  "cloudkms.importJobs.getIamPolicy",
  "cloudkms.importJobs.list",
  "cloudkms.importJobs.setIamPolicy",
  "cloudkms.keyRings.getIamPolicy",
  "cloudkms.keyRings.list",
  "cloudkms.keyRings.setIamPolicy",
  "cloudkms.locations.list",
  "cloudnotifications.activities.list",
  "cloudprivatecatalogproducer.associations.list",
  "cloudprivatecatalogproducer.catalogAssociations.list",
  "cloudprivatecatalogproducer.catalogs.getIamPolicy",
  "cloudprivatecatalogproducer.catalogs.list",
  "cloudprivatecatalogproducer.catalogs.setIamPolicy",
  "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
  "cloudprivatecatalogproducer.producerCatalogs.list",
  "cloudprivatecatalogproducer.producerCatalogs.setIamPolicy",
  "cloudprivatecatalogproducer.products.getIamPolicy",
  "cloudprivatecatalogproducer.products.list",
  "cloudprivatecatalogproducer.products.setIamPolicy",
  "cloudprofiler.profiles.list",
  "cloudscheduler.jobs.list",
  "cloudscheduler.locations.list",
  "cloudsecurityscanner.crawledurls.list",
  "cloudsecurityscanner.results.list",
  "cloudsecurityscanner.scanruns.list",
  "cloudsecurityscanner.scans.list",
  "cloudsql.backupRuns.list",
  "cloudsql.databases.list",
  "cloudsql.instances.list",
  "cloudsql.sslCerts.list",
  "cloudsql.users.list",
  "cloudsupport.accounts.getIamPolicy",
  "cloudsupport.accounts.list",
  "cloudsupport.accounts.setIamPolicy",
  "cloudsupport.techCases.list",
  "cloudtasks.locations.list",
  "cloudtasks.queues.getIamPolicy",
  "cloudtasks.queues.list",
  "cloudtasks.queues.setIamPolicy",
  "cloudtasks.tasks.list",
  "cloudtoolresults.executions.list",
  "cloudtoolresults.histories.list",
  "cloudtoolresults.steps.list",
  "cloudtrace.insights.list",
  "cloudtrace.tasks.list",
  "cloudtrace.traces.list",
  "cloudtranslate.glossaries.list",
  "cloudtranslate.locations.list",
  "cloudtranslate.operations.list",
  "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
  "cloudvolumesgcp-api.netapp.com/ipRanges.list",
  "cloudvolumesgcp-api.netapp.com/jobs.list",
  "cloudvolumesgcp-api.netapp.com/regions.list",
  "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
  "cloudvolumesgcp-api.netapp.com/snapshots.list",
  "cloudvolumesgcp-api.netapp.com/volumes.list",
  "commerceprice.privateoffers.list",
  "composer.environments.list",
  "composer.imageversions.list",
  "composer.operations.list",
  "compute.acceleratorTypes.list",
  "compute.addresses.list",
  "compute.autoscalers.list",
  "compute.backendBuckets.list",
  "compute.backendServices.getIamPolicy",
  "compute.backendServices.list",
  "compute.backendServices.setIamPolicy",
  "compute.commitments.list",
  "compute.diskTypes.list",
  "compute.disks.getIamPolicy",
  "compute.disks.list",
  "compute.disks.setIamPolicy",
  "compute.externalVpnGateways.list",
  "compute.firewallPolicies.getIamPolicy",
  "compute.firewallPolicies.list",
  "compute.firewallPolicies.setIamPolicy",
  "compute.firewalls.list",
  "compute.forwardingRules.list",
  "compute.globalAddresses.list",
  "compute.globalForwardingRules.list",
  "compute.globalNetworkEndpointGroups.list",
  "compute.globalOperations.getIamPolicy",
  "compute.globalOperations.list",
  "compute.globalOperations.setIamPolicy",
  "compute.globalPublicDelegatedPrefixes.list",
  "compute.healthChecks.list",
  "compute.httpHealthChecks.list",
  "compute.httpsHealthChecks.list",
  "compute.images.getIamPolicy",
  "compute.images.list",
  "compute.images.setIamPolicy",
  "compute.instanceGroupManagers.list",
  "compute.instanceGroups.list",
  "compute.instanceTemplates.getIamPolicy",
  "compute.instanceTemplates.list",
  "compute.instanceTemplates.setIamPolicy",
  "compute.instances.getIamPolicy",
  "compute.instances.list",
  "compute.instances.setIamPolicy",
  "compute.interconnectAttachments.list",
  "compute.interconnectLocations.list",
  "compute.interconnects.list",
  "compute.licenseCodes.getIamPolicy",
  "compute.licenseCodes.list",
  "compute.licenseCodes.setIamPolicy",
  "compute.licenses.getIamPolicy",
  "compute.licenses.list",
  "compute.licenses.setIamPolicy",
  "compute.machineImages.getIamPolicy",
  "compute.machineImages.list",
  "compute.machineImages.setIamPolicy",
  "compute.machineTypes.list",
  "compute.maintenancePolicies.getIamPolicy",
  "compute.maintenancePolicies.list",
  "compute.maintenancePolicies.setIamPolicy",
  "compute.networkEndpointGroups.getIamPolicy",
  "compute.networkEndpointGroups.list",
  "compute.networkEndpointGroups.setIamPolicy",
  "compute.networks.list",
  "compute.nodeGroups.getIamPolicy",
  "compute.nodeGroups.list",
  "compute.nodeGroups.setIamPolicy",
  "compute.nodeTemplates.getIamPolicy",
  "compute.nodeTemplates.list",
  "compute.nodeTemplates.setIamPolicy",
  "compute.nodeTypes.list",
  "compute.publicAdvertisedPrefixes.list",
  "compute.publicDelegatedPrefixes.list",
  "compute.regionBackendServices.getIamPolicy",
  "compute.regionBackendServices.list",
  "compute.regionBackendServices.setIamPolicy",
  "compute.regionHealthCheckServices.list",
  "compute.regionHealthChecks.list",
  "compute.regionNetworkEndpointGroups.list",
  "compute.regionNotificationEndpoints.list",
  "compute.regionOperations.getIamPolicy",
  "compute.regionOperations.list",
  "compute.regionOperations.setIamPolicy",
  "compute.regionSslCertificates.list",
  "compute.regionTargetHttpProxies.list",
  "compute.regionTargetHttpsProxies.list",
  "compute.regionUrlMaps.list",
  "compute.regions.list",
  "compute.reservations.list",
  "compute.resourcePolicies.list",
  "compute.routers.list",
  "compute.routes.list",
  "compute.securityPolicies.getIamPolicy",
  "compute.securityPolicies.list",
  "compute.securityPolicies.setIamPolicy",
  "compute.serviceAttachments.list",
  "compute.snapshots.getIamPolicy",
  "compute.snapshots.list",
  "compute.snapshots.setIamPolicy",
  "compute.sslCertificates.list",
  "compute.sslPolicies.list",
  "compute.subnetworks.getIamPolicy",
  "compute.subnetworks.list",
  "compute.subnetworks.setIamPolicy",
  "compute.targetGrpcProxies.list",
  "compute.targetHttpProxies.list",
  "compute.targetHttpsProxies.list",
  "compute.targetInstances.list",
  "compute.targetPools.list",
  "compute.targetSslProxies.list",
  "compute.targetTcpProxies.list",
  "compute.targetVpnGateways.list",
  "compute.urlMaps.list",
  "compute.vpnGateways.list",
  "compute.vpnTunnels.list",
  "compute.zoneOperations.getIamPolicy",
  "compute.zoneOperations.list",
  "compute.zoneOperations.setIamPolicy",
  "compute.zones.list",
  "connectors.connections.getIamPolicy",
  "connectors.connections.list",
  "connectors.connections.setIamPolicy",
  "connectors.connectors.list",
  "connectors.locations.list",
  "connectors.operations.list",
  "connectors.providers.list",
  "connectors.versions.list",
  "consumerprocurement.accounts.list",
  "consumerprocurement.entitlements.list",
  "consumerprocurement.freeTrials.list",
  "consumerprocurement.orders.list",
  "contactcenterinsights.analyses.list",
  "contactcenterinsights.conversations.list",
  "contactcenterinsights.issueModels.list",
  "contactcenterinsights.issues.list",
  "contactcenterinsights.operations.list",
  "contactcenterinsights.phraseMatchers.list",
  "container.apiServices.list",
  "container.auditSinks.list",
  "container.backendConfigs.list",
  "container.bindings.list",
  "container.certificateSigningRequests.list",
  "container.clusterRoleBindings.list",
  "container.clusterRoles.list",
  "container.clusters.list",
  "container.componentStatuses.list",
  "container.configMaps.list",
  "container.controllerRevisions.list",
  "container.cronJobs.list",
  "container.csiDrivers.list",
  "container.csiNodeInfos.list",
  "container.csiNodes.list",
  "container.customResourceDefinitions.list",
  "container.daemonSets.list",
  "container.deployments.list",
  "container.endpointSlices.list",
  "container.endpoints.list",
  "container.events.list",
  "container.frontendConfigs.list",
  "container.horizontalPodAutoscalers.list",
  "container.ingresses.list",
  "container.initializerConfigurations.list",
  "container.jobs.list",
  "container.leases.list",
  "container.limitRanges.list",
  "container.localSubjectAccessReviews.list",
  "container.managedCertificates.list",
  "container.mutatingWebhookConfigurations.list",
  "container.namespaces.list",
  "container.networkPolicies.list",
  "container.nodes.list",
  "container.operations.list",
  "container.persistentVolumeClaims.list",
  "container.persistentVolumes.list",
  "container.petSets.list",
  "container.podDisruptionBudgets.list",
  "container.podPresets.list",
  "container.podSecurityPolicies.list",
  "container.podTemplates.list",
  "container.pods.list",
  "container.priorityClasses.list",
  "container.replicaSets.list",
  "container.replicationControllers.list",
  "container.resourceQuotas.list",
  "container.roleBindings.list",
  "container.roles.list",
  "container.runtimeClasses.list",
  "container.scheduledJobs.list",
  "container.selfSubjectAccessReviews.list",
  "container.serviceAccounts.list",
  "container.services.list",
  "container.statefulSets.list",
  "container.storageClasses.list",
  "container.storageStates.list",
  "container.storageVersionMigrations.list",
  "container.subjectAccessReviews.list",
  "container.thirdPartyObjects.list",
  "container.thirdPartyResources.list",
  "container.updateInfos.list",
  "container.validatingWebhookConfigurations.list",
  "container.volumeAttachments.list",
  "container.volumeSnapshotClasses.list",
  "container.volumeSnapshotContents.list",
  "container.volumeSnapshots.list",
  "containeranalysis.notes.getIamPolicy",
  "containeranalysis.notes.list",
  "containeranalysis.notes.setIamPolicy",
  "containeranalysis.occurrences.getIamPolicy",
  "containeranalysis.occurrences.list",
  "containeranalysis.occurrences.setIamPolicy",
  "datacatalog.categories.getIamPolicy",
  "datacatalog.categories.setIamPolicy",
  "datacatalog.entries.getIamPolicy",
  "datacatalog.entries.list",
  "datacatalog.entries.setIamPolicy",
  "datacatalog.entryGroups.getIamPolicy",
  "datacatalog.entryGroups.list",
  "datacatalog.entryGroups.setIamPolicy",
  "datacatalog.tagTemplates.getIamPolicy",
  "datacatalog.tagTemplates.setIamPolicy",
  "datacatalog.taxonomies.getIamPolicy",
  "datacatalog.taxonomies.list",
  "datacatalog.taxonomies.setIamPolicy",
  "dataflow.jobs.list",
  "dataflow.messages.list",
  "dataflow.snapshots.list",
  "datafusion.instances.getIamPolicy",
  "datafusion.instances.list",
  "datafusion.instances.setIamPolicy",
  "datafusion.locations.list",
  "datafusion.operations.list",
  "datalabeling.annotateddatasets.list",
  "datalabeling.annotationspecsets.list",
  "datalabeling.dataitems.list",
  "datalabeling.datasets.list",
  "datalabeling.examples.list",
  "datalabeling.instructions.list",
  "datalabeling.operations.list",
  "datamigration.connectionprofiles.getIamPolicy",
  "datamigration.connectionprofiles.list",
  "datamigration.connectionprofiles.setIamPolicy",
  "datamigration.locations.list",
  "datamigration.migrationjobs.getIamPolicy",
  "datamigration.migrationjobs.list",
  "datamigration.migrationjobs.setIamPolicy",
  "datamigration.operations.list",
  "datapipelines.pipelines.list",
  "dataproc.agents.list",
  "dataproc.autoscalingPolicies.getIamPolicy",
  "dataproc.autoscalingPolicies.list",
  "dataproc.autoscalingPolicies.setIamPolicy",
  "dataproc.clusters.getIamPolicy",
  "dataproc.clusters.list",
  "dataproc.clusters.setIamPolicy",
  "dataproc.jobs.getIamPolicy",
  "dataproc.jobs.list",
  "dataproc.jobs.setIamPolicy",
  "dataproc.operations.getIamPolicy",
  "dataproc.operations.list",
  "dataproc.operations.setIamPolicy",
  "dataproc.workflowTemplates.getIamPolicy",
  "dataproc.workflowTemplates.list",
  "dataproc.workflowTemplates.setIamPolicy",
  "dataprocessing.datasources.list",
  "dataprocessing.featurecontrols.list",
  "dataprocessing.groupcontrols.list",
  "datastore.entities.list",
  "datastore.indexes.list",
  "datastore.locations.list",
  "datastore.namespaces.list",
  "datastore.operations.list",
  "datastore.statistics.list",
  "datastream.connectionProfiles.getIamPolicy",
  "datastream.connectionProfiles.list",
  "datastream.connectionProfiles.setIamPolicy",
  "datastream.locations.list",
  "datastream.operations.list",
  "datastream.privateConnections.getIamPolicy",
  "datastream.privateConnections.list",
  "datastream.privateConnections.setIamPolicy",
  "datastream.routes.getIamPolicy",
  "datastream.routes.list",
  "datastream.routes.setIamPolicy",
  "datastream.streams.getIamPolicy",
  "datastream.streams.list",
  "datastream.streams.setIamPolicy",
  "deploymentmanager.compositeTypes.list",
  "deploymentmanager.deployments.getIamPolicy",
  "deploymentmanager.deployments.list",
  "deploymentmanager.deployments.setIamPolicy",
  "deploymentmanager.manifests.list",
  "deploymentmanager.operations.list",
  "deploymentmanager.resources.list",
  "deploymentmanager.typeProviders.list",
  "deploymentmanager.types.list",
  "dialogflow.agents.list",
  "dialogflow.answerrecords.list",
  "dialogflow.callMatchers.list",
  "dialogflow.changelogs.list",
  "dialogflow.contexts.list",
  "dialogflow.conversationDatasets.list",
  "dialogflow.conversationModels.list",
  "dialogflow.conversationProfiles.list",
  "dialogflow.conversations.list",
  "dialogflow.documents.list",
  "dialogflow.entityTypes.list",
  "dialogflow.environments.list",
  "dialogflow.flows.list",
  "dialogflow.intents.list",
  "dialogflow.knowledgeBases.list",
  "dialogflow.messages.list",
  "dialogflow.modelEvaluations.list",
  "dialogflow.pages.list",
  "dialogflow.participants.list",
  "dialogflow.phoneNumberOrders.list",
  "dialogflow.phoneNumbers.list",
  "dialogflow.securitySettings.list",
  "dialogflow.sessionEntityTypes.list",
  "dialogflow.smartMessagingEntries.list",
  "dialogflow.transitionRouteGroups.list",
  "dialogflow.versions.list",
  "dialogflow.webhooks.list",
  "dlp.analyzeRiskTemplates.list",
  "dlp.columnDataProfiles.list",
  "dlp.deidentifyTemplates.list",
  "dlp.estimates.list",
  "dlp.inspectFindings.list",
  "dlp.inspectTemplates.list",
  "dlp.jobTriggers.list",
  "dlp.jobs.list",
  "dlp.projectDataProfiles.list",
  "dlp.storedInfoTypes.list",
  "dlp.tableDataProfiles.list",
  "dns.changes.list",
  "dns.dnsKeys.list",
  "dns.managedZoneOperations.list",
  "dns.managedZones.list",
  "dns.policies.getIamPolicy",
  "dns.policies.list",
  "dns.policies.setIamPolicy",
  "dns.resourceRecordSets.list",
  "dns.responsePolicies.list",
  "dns.responsePolicyRules.list",
  "documentai.evaluations.list",
  "documentai.labelerPools.list",
  "documentai.locations.list",
  "documentai.processorTypes.list",
  "documentai.processorVersions.list",
  "documentai.processors.list",
  "domains.locations.list",
  "domains.operations.list",
  "earlyaccesscenter.campaigns.list",
  "earlyaccesscenter.customerAllowlists.list",
  "earthengine.assets.getIamPolicy",
  "earthengine.assets.list",
  "earthengine.assets.setIamPolicy",
  "earthengine.operations.list",
  "errorreporting.applications.list",
  "errorreporting.errorEvents.list",
  "errorreporting.groups.list",
  "essentialcontacts.contacts.list",
  "eventarc.locations.list",
  "eventarc.operations.list",
  "eventarc.triggers.getIamPolicy",
  "eventarc.triggers.list",
  "eventarc.triggers.setIamPolicy",
  "fcmdata.deliverydata.list",
  "file.backups.list",
  "file.instances.list",
  "file.locations.list",
  "file.operations.list",
  "file.snapshots.list",
  "firebase.clients.list",
  "firebase.links.list",
  "firebase.playLinks.list",
  "firebaseabt.experiments.list",
  "firebaseappdistro.groups.list",
  "firebaseappdistro.releases.list",
  "firebaseappdistro.testers.list",
  "firebasecrashlytics.issues.list",
  "firebasedatabase.instances.list",
  "firebasedynamiclinks.destinations.list",
  "firebasedynamiclinks.domains.list",
  "firebasedynamiclinks.links.list",
  "firebaseextensions.configs.list",
  "firebasehosting.sites.list",
  "firebaseinappmessaging.campaigns.list",
  "firebaseml.compressionjobs.list",
  "firebaseml.models.list",
  "firebaseml.modelversions.list",
  "firebasenotifications.messages.list",
  "firebasepredictions.predictions.list",
  "firebaserules.releases.list",
  "firebaserules.rulesets.list",
  "firebasestorage.buckets.list",
  "fleetengine.vehicles.list",
  "gameservices.gameServerClusters.list",
  "gameservices.gameServerConfigs.list",
  "gameservices.gameServerDeployments.list",
  "gameservices.locations.list",
  "gameservices.operations.list",
  "gameservices.realms.list",
  "genomics.datasets.getIamPolicy",
  "genomics.datasets.list",
  "genomics.datasets.setIamPolicy",
  "genomics.operations.list",
  "gkehub.gateway.getIamPolicy",
  "gkehub.gateway.setIamPolicy",
  "gkehub.locations.list",
  "gkehub.memberships.getIamPolicy",
  "gkehub.memberships.list",
  "gkehub.memberships.setIamPolicy",
  "gkehub.operations.list",
  "gkemulticloud.awsClusters.list",
  "gkemulticloud.awsNodePools.list",
  "gkemulticloud.azureClients.list",
  "gkemulticloud.azureClusters.list",
  "gkemulticloud.azureNodePools.list",
  "gkemulticloud.operations.list",
  "gsuiteaddons.deployments.list",
  "healthcare.annotationStores.getIamPolicy",
  "healthcare.annotationStores.list",
  "healthcare.annotationStores.setIamPolicy",
  "healthcare.annotations.list",
  "healthcare.attributeDefinitions.list",
  "healthcare.consentArtifacts.list",
  "healthcare.consentStores.getIamPolicy",
  "healthcare.consentStores.list",
  "healthcare.consentStores.setIamPolicy",
  "healthcare.consents.list",
  "healthcare.datasets.getIamPolicy",
  "healthcare.datasets.list",
  "healthcare.datasets.setIamPolicy",
  "healthcare.dicomStores.getIamPolicy",
  "healthcare.dicomStores.list",
  "healthcare.dicomStores.setIamPolicy",
  "healthcare.fhirStores.getIamPolicy",
  "healthcare.fhirStores.list",
  "healthcare.fhirStores.setIamPolicy",
  "healthcare.hl7V2Messages.list",
  "healthcare.hl7V2Stores.getIamPolicy",
  "healthcare.hl7V2Stores.list",
  "healthcare.hl7V2Stores.setIamPolicy",
  "healthcare.locations.list",
  "healthcare.operations.list",
  "healthcare.userDataMappings.list",
  "iam.googleapis.com/workloadIdentityPoolProviders.create",
  "iam.googleapis.com/workloadIdentityPoolProviders.delete",
  "iam.googleapis.com/workloadIdentityPoolProviders.get",
  "iam.googleapis.com/workloadIdentityPoolProviders.list",
  "iam.googleapis.com/workloadIdentityPoolProviders.undelete",
  "iam.googleapis.com/workloadIdentityPoolProviders.update",
  "iam.googleapis.com/workloadIdentityPools.create",
  "iam.googleapis.com/workloadIdentityPools.delete",
  "iam.googleapis.com/workloadIdentityPools.get",
  "iam.googleapis.com/workloadIdentityPools.list",
  "iam.googleapis.com/workloadIdentityPools.undelete",
  "iam.googleapis.com/workloadIdentityPools.update",
  "iam.roles.create",
  "iam.roles.delete",
  "iam.roles.get",
  "iam.roles.list",
  "iam.roles.undelete",
  "iam.roles.update",
  "iam.serviceAccountKeys.list",
  "iam.serviceAccounts.get",
  "iam.serviceAccounts.getIamPolicy",
  "iam.serviceAccounts.list",
  "iam.serviceAccounts.setIamPolicy",
  "iap.tunnel.getIamPolicy",
  "iap.tunnel.setIamPolicy",
  "iap.tunnelInstances.getIamPolicy",
  "iap.tunnelInstances.setIamPolicy",
  "iap.tunnelZones.getIamPolicy",
  "iap.tunnelZones.setIamPolicy",
  "iap.web.getIamPolicy",
  "iap.web.setIamPolicy",
  "iap.webServiceVersions.getIamPolicy",
  "iap.webServiceVersions.setIamPolicy",
  "iap.webServices.getIamPolicy",
  "iap.webServices.setIamPolicy",
  "iap.webTypes.getIamPolicy",
  "iap.webTypes.setIamPolicy",
  "integrations.apigeeAuthConfigs.list",
  "integrations.apigeeCertificates.list",
  "integrations.apigeeExecutions.list",
  "integrations.apigeeIntegrationVers.list",
  "integrations.apigeeIntegrations.list",
  "integrations.apigeeSfdcChannels.list",
  "integrations.apigeeSfdcInstances.list",
  "integrations.apigeeSuspensions.list",
  "integrations.securityAuthConfigs.list",
  "integrations.securityExecutions.list",
  "integrations.securityIntegTempVers.list",
  "integrations.securityIntegrationVers.list",
  "integrations.securityIntegrations.list",
  "lifesciences.operations.list",
  "livestream.channels.list",
  "livestream.events.list",
  "livestream.inputs.list",
  "livestream.locations.list",
  "livestream.operations.list",
  "logging.buckets.list",
  "logging.exclusions.list",
  "logging.locations.list",
  "logging.logEntries.list",
  "logging.logMetrics.list",
  "logging.logServiceIndexes.list",
  "logging.logServices.list",
  "logging.logs.list",
  "logging.notificationRules.list",
  "logging.operations.list",
  "logging.privateLogEntries.list",
  "logging.queries.list",
  "logging.sinks.list",
  "logging.views.list",
  "managedidentities.domains.getIamPolicy",
  "managedidentities.domains.list",
  "managedidentities.domains.setIamPolicy",
  "managedidentities.locations.list",
  "managedidentities.operations.list",
  "managedidentities.peerings.getIamPolicy",
  "managedidentities.peerings.list",
  "managedidentities.peerings.setIamPolicy",
  "managedidentities.sqlintegrations.list",
  "memcache.instances.list",
  "memcache.locations.list",
  "memcache.operations.list",
  "metastore.backups.list",
  "metastore.imports.list",
  "metastore.locations.list",
  "metastore.operations.list",
  "metastore.services.getIamPolicy",
  "metastore.services.list",
  "metastore.services.setIamPolicy",
  "ml.jobs.getIamPolicy",
  "ml.jobs.list",
  "ml.jobs.setIamPolicy",
  "ml.locations.list",
  "ml.models.getIamPolicy",
  "ml.models.list",
  "ml.models.setIamPolicy",
  "ml.operations.list",
  "ml.studies.getIamPolicy",
  "ml.studies.list",
  "ml.studies.setIamPolicy",
  "ml.trials.list",
  "ml.versions.list",
  "monitoring.alertPolicies.list",
  "monitoring.dashboards.list",
  "monitoring.groups.list",
  "monitoring.metricDescriptors.list",
  "monitoring.monitoredResourceDescriptors.list",
  "monitoring.notificationChannelDescriptors.list",
  "monitoring.notificationChannels.list",
  "monitoring.publicWidgets.list",
  "monitoring.services.list",
  "monitoring.slos.list",
  "monitoring.timeSeries.list",
  "monitoring.uptimeCheckConfigs.list",
  "networkconnectivity.hubs.getIamPolicy",
  "networkconnectivity.hubs.list",
  "networkconnectivity.hubs.setIamPolicy",
  "networkconnectivity.locations.list",
  "networkconnectivity.operations.list",
  "networkconnectivity.spokes.getIamPolicy",
  "networkconnectivity.spokes.list",
  "networkconnectivity.spokes.setIamPolicy",
  "networkmanagement.connectivitytests.getIamPolicy",
  "networkmanagement.connectivitytests.list",
  "networkmanagement.connectivitytests.setIamPolicy",
  "networkmanagement.locations.list",
  "networkmanagement.operations.list",
  "networksecurity.authorizationPolicies.getIamPolicy",
  "networksecurity.authorizationPolicies.list",
  "networksecurity.authorizationPolicies.setIamPolicy",
  "networksecurity.clientTlsPolicies.getIamPolicy",
  "networksecurity.clientTlsPolicies.list",
  "networksecurity.clientTlsPolicies.setIamPolicy",
  "networksecurity.locations.list",
  "networksecurity.operations.list",
  "networksecurity.serverTlsPolicies.getIamPolicy",
  "networksecurity.serverTlsPolicies.list",
  "networksecurity.serverTlsPolicies.setIamPolicy",
  "networkservices.endpointConfigSelectors.getIamPolicy",
  "networkservices.endpointConfigSelectors.list",
  "networkservices.endpointConfigSelectors.setIamPolicy",
  "networkservices.endpointPolicies.getIamPolicy",
  "networkservices.endpointPolicies.list",
  "networkservices.endpointPolicies.setIamPolicy",
  "networkservices.httpFilters.getIamPolicy",
  "networkservices.httpFilters.list",
  "networkservices.httpFilters.setIamPolicy",
  "networkservices.httpfilters.getIamPolicy",
  "networkservices.httpfilters.list",
  "networkservices.httpfilters.setIamPolicy",
  "networkservices.locations.list",
  "networkservices.operations.list",
  "notebooks.environments.getIamPolicy",
  "notebooks.environments.list",
  "notebooks.environments.setIamPolicy",
  "notebooks.executions.getIamPolicy",
  "notebooks.executions.list",
  "notebooks.executions.setIamPolicy",
  "notebooks.instances.getIamPolicy",
  "notebooks.instances.list",
  "notebooks.instances.setIamPolicy",
  "notebooks.locations.list",
  "notebooks.operations.list",
  "notebooks.runtimes.getIamPolicy",
  "notebooks.runtimes.list",
  "notebooks.runtimes.setIamPolicy",
  "notebooks.schedules.getIamPolicy",
  "notebooks.schedules.list",
  "notebooks.schedules.setIamPolicy",
  "ondemandscanning.operations.list",
  "opsconfigmonitoring.resourceMetadata.list",
  "orgpolicy.constraints.list",
  "orgpolicy.policies.list",
  "osconfig.guestPolicies.list",
  "osconfig.instanceOSPoliciesCompliances.list",
  "osconfig.inventories.list",
  "osconfig.osPolicyAssignmentReports.list",
  "osconfig.osPolicyAssignments.list",
  "osconfig.patchDeployments.list",
  "osconfig.patchJobs.list",
  "osconfig.vulnerabilityReports.list",
  "paymentsresellersubscription.products.list",
  "paymentsresellersubscription.promotions.list",
  "policysimulator.replayResults.list",
  "policysimulator.replays.create",
  "policysimulator.replays.get",
  "policysimulator.replays.list",
  "policysimulator.replays.run",
  "privateca.caPools.getIamPolicy",
  "privateca.caPools.list",
  "privateca.caPools.setIamPolicy",
  "privateca.certificateAuthorities.getIamPolicy",
  "privateca.certificateAuthorities.list",
  "privateca.certificateAuthorities.setIamPolicy",
  "privateca.certificateRevocationLists.getIamPolicy",
  "privateca.certificateRevocationLists.list",
  "privateca.certificateRevocationLists.setIamPolicy",
  "privateca.certificateTemplates.getIamPolicy",
  "privateca.certificateTemplates.list",
  "privateca.certificateTemplates.setIamPolicy",
  "privateca.certificates.getIamPolicy",
  "privateca.certificates.list",
  "privateca.certificates.setIamPolicy",
  "privateca.locations.list",
  "privateca.operations.list",
  "privateca.reusableConfigs.getIamPolicy",
  "privateca.reusableConfigs.list",
  "privateca.reusableConfigs.setIamPolicy",
  "proximitybeacon.attachments.list",
  "proximitybeacon.beacons.getIamPolicy",
  "proximitybeacon.beacons.list",
  "proximitybeacon.beacons.setIamPolicy",
  "proximitybeacon.namespaces.getIamPolicy",
  "proximitybeacon.namespaces.list",
  "proximitybeacon.namespaces.setIamPolicy",
  "pubsub.schemas.getIamPolicy",
  "pubsub.schemas.list",
  "pubsub.schemas.setIamPolicy",
  "pubsub.snapshots.getIamPolicy",
  "pubsub.snapshots.list",
  "pubsub.snapshots.setIamPolicy",
  "pubsub.subscriptions.getIamPolicy",
  "pubsub.subscriptions.list",
  "pubsub.subscriptions.setIamPolicy",
  "pubsub.topics.getIamPolicy",
  "pubsub.topics.list",
  "pubsub.topics.setIamPolicy",
  "pubsublite.operations.list",
  "pubsublite.reservations.list",
  "pubsublite.subscriptions.list",
  "pubsublite.topics.list",
  "recaptchaenterprise.keys.list",
  "recaptchaenterprise.relatedaccountgroupmemberships.list",
  "recaptchaenterprise.relatedaccountgroups.list",
  "recommender.bigqueryCapacityCommitmentsInsights.list",
  "recommender.bigqueryCapacityCommitmentsRecommendations.list",
  "recommender.cloudAssetInsights.list",
  "recommender.cloudsqlIdleInstanceRecommendations.list",
  "recommender.cloudsqlInstanceActivityInsights.list",
  "recommender.cloudsqlInstanceCpuUsageInsights.list",
  "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
  "recommender.cloudsqlInstanceMemoryUsageInsights.list",
  "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
  "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
  "recommender.commitmentUtilizationInsights.list",
  "recommender.computeAddressIdleResourceInsights.list",
  "recommender.computeAddressIdleResourceRecommendations.list",
  "recommender.computeDiskIdleResourceInsights.list",
  "recommender.computeDiskIdleResourceRecommendations.list",
  "recommender.computeFirewallInsights.list",
  "recommender.computeImageIdleResourceInsights.list",
  "recommender.computeImageIdleResourceRecommendations.list",
  "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
  "recommender.computeInstanceIdleResourceRecommendations.list",
  "recommender.computeInstanceMachineTypeRecommendations.list",
  "recommender.iamPolicyInsights.list",
  "recommender.iamPolicyLateralMovementInsights.list",
  "recommender.iamPolicyRecommendations.list",
  "recommender.iamServiceAccountInsights.list",
  "recommender.locations.list",
  "recommender.loggingProductSuggestionContainerInsights.list",
  "recommender.loggingProductSuggestionContainerRecommendations.list",
  "recommender.monitoringProductSuggestionComputeInsights.list",
  "recommender.monitoringProductSuggestionComputeRecommendations.list",
  "recommender.resourcemanagerProjectUtilizationInsights.list",
  "recommender.resourcemanagerProjectUtilizationRecommendations.list",
  "recommender.usageCommitmentRecommendations.list",
  "redis.instances.list",
  "redis.locations.list",
  "redis.operations.list",
  "remotebuildexecution.instances.list",
  "remotebuildexecution.workerpools.list",
  "resourcemanager.folders.get",
  "resourcemanager.folders.getIamPolicy",
  "resourcemanager.folders.list",
  "resourcemanager.folders.setIamPolicy",
  "resourcemanager.hierarchyNodes.listTagBindings",
  "resourcemanager.organizations.get",
  "resourcemanager.organizations.getIamPolicy",
  "resourcemanager.organizations.setIamPolicy",
  "resourcemanager.projects.get",
  "resourcemanager.projects.getIamPolicy",
  "resourcemanager.projects.list",
  "resourcemanager.projects.setIamPolicy",
  "resourcemanager.tagKeys.getIamPolicy",
  "resourcemanager.tagKeys.list",
  "resourcemanager.tagKeys.setIamPolicy",
  "resourcemanager.tagValues.getIamPolicy",
  "resourcemanager.tagValues.list",
  "resourcemanager.tagValues.setIamPolicy",
  "resourcesettings.settings.list",
  "retail.catalogs.list",
  "retail.operations.list",
  "retail.products.list",
  "riskmanager.operations.list",
  "riskmanager.policies.list",
  "riskmanager.reports.list",
  "run.configurations.list",
  "run.locations.list",
  "run.revisions.list",
  "run.routes.list",
  "run.services.getIamPolicy",
  "run.services.list",
  "run.services.setIamPolicy",
  "runtimeconfig.configs.getIamPolicy",
  "runtimeconfig.configs.list",
  "runtimeconfig.configs.setIamPolicy",
  "runtimeconfig.operations.list",
  "runtimeconfig.variables.getIamPolicy",
  "runtimeconfig.variables.list",
  "runtimeconfig.variables.setIamPolicy",
  "runtimeconfig.waiters.getIamPolicy",
  "runtimeconfig.waiters.list",
  "runtimeconfig.waiters.setIamPolicy",
  "secretmanager.locations.list",
  "secretmanager.secrets.getIamPolicy",
  "secretmanager.secrets.list",
  "secretmanager.secrets.setIamPolicy",
  "secretmanager.versions.list",
  "securitycenter.assets.list",
  "securitycenter.findings.list",
  "securitycenter.notificationconfig.list",
  "securitycenter.sources.getIamPolicy",
  "securitycenter.sources.list",
  "securitycenter.sources.setIamPolicy",
  "servicebroker.bindingoperations.list",
  "servicebroker.bindings.getIamPolicy",
  "servicebroker.bindings.list",
  "servicebroker.bindings.setIamPolicy",
  "servicebroker.catalogs.getIamPolicy",
  "servicebroker.catalogs.list",
  "servicebroker.catalogs.setIamPolicy",
  "servicebroker.instanceoperations.list",
  "servicebroker.instances.getIamPolicy",
  "servicebroker.instances.list",
  "servicebroker.instances.setIamPolicy",
  "serviceconsumermanagement.tenancyu.list",
  "servicedirectory.endpoints.getIamPolicy",
  "servicedirectory.endpoints.list",
  "servicedirectory.endpoints.setIamPolicy",
  "servicedirectory.locations.list",
  "servicedirectory.namespaces.getIamPolicy",
  "servicedirectory.namespaces.list",
  "servicedirectory.namespaces.setIamPolicy",
  "servicedirectory.services.getIamPolicy",
  "servicedirectory.services.list",
  "servicedirectory.services.setIamPolicy",
  "servicemanagement.services.getIamPolicy",
  "servicemanagement.services.list",
  "servicemanagement.services.setIamPolicy",
  "servicenetworking.operations.list",
  "serviceusage.operations.list",
  "serviceusage.services.list",
  "source.repos.getIamPolicy",
  "source.repos.list",
  "source.repos.setIamPolicy",
  "spanner.backupOperations.list",
  "spanner.backups.getIamPolicy",
  "spanner.backups.list",
  "spanner.backups.setIamPolicy",
  "spanner.databaseOperations.list",
  "spanner.databases.getIamPolicy",
  "spanner.databases.list",
  "spanner.databases.setIamPolicy",
  "spanner.instanceConfigs.list",
  "spanner.instanceOperations.list",
  "spanner.instances.getIamPolicy",
  "spanner.instances.list",
  "spanner.instances.setIamPolicy",
  "spanner.sessions.list",
  "speech.customClasses.list",
  "speech.phraseSets.list",
  "storage.buckets.getIamPolicy",
  "storage.buckets.list",
  "storage.buckets.setIamPolicy",
  "storage.hmacKeys.list",
  "storage.multipartUploads.list",
  "storage.objects.getIamPolicy",
  "storage.objects.list",
  "storage.objects.setIamPolicy",
  "storagetransfer.agentpools.list",
  "storagetransfer.jobs.list",
  "storagetransfer.operations.list",
  "tpu.acceleratortypes.list",
  "tpu.locations.list",
  "tpu.nodes.list",
  "tpu.operations.list",
  "tpu.tensorflowversions.list",
  "transcoder.jobTemplates.list",
  "transcoder.jobs.list",
  "translationhub.portals.list",
  "visualinspection.annotationSets.list",
  "visualinspection.annotationSpecs.list",
  "visualinspection.annotations.list",
  "visualinspection.datasets.list",
  "visualinspection.images.list",
  "visualinspection.locations.list",
  "visualinspection.modelEvaluations.list",
  "visualinspection.models.list",
  "visualinspection.modules.list",
  "visualinspection.operations.list",
  "visualinspection.solutionArtifacts.list",
  "visualinspection.solutions.list",
  "vmmigration.cloneJobs.list",
  "vmmigration.cutoverJobs.list",
  "vmmigration.datacenterConnectors.list",
  "vmmigration.deployments.list",
  "vmmigration.groups.list",
  "vmmigration.locations.list",
  "vmmigration.migratingVms.list",
  "vmmigration.operations.list",
  "vmmigration.sources.list",
  "vmmigration.targets.list",
  "vmmigration.utilizationReports.list",
  "vpcaccess.connectors.list",
  "vpcaccess.locations.list",
  "vpcaccess.operations.list",
  "workflows.executions.list",
  "workflows.locations.list",
  "workflows.operations.list",
  "workflows.workflows.getIamPolicy",
  "workflows.workflows.list",
  "workflows.workflows.setIamPolicy",
]
## permission for network security eng admin ##

network-security-eng-admin-permissions = [
  "accesscontextmanager.accessLevels.create",
  "accesscontextmanager.accessLevels.delete",
  "accesscontextmanager.accessLevels.get",
  "accesscontextmanager.accessLevels.list",
  "accesscontextmanager.accessLevels.replaceAll",
  "accesscontextmanager.accessLevels.update",
  "accesscontextmanager.accessPolicies.create",
  "accesscontextmanager.accessPolicies.delete",
  "accesscontextmanager.accessPolicies.get",
  "accesscontextmanager.accessPolicies.getIamPolicy",
  "accesscontextmanager.accessPolicies.list",
  "accesscontextmanager.accessPolicies.setIamPolicy",
  "accesscontextmanager.accessPolicies.update",
  "accesscontextmanager.accessZones.create",
  "accesscontextmanager.accessZones.delete",
  "accesscontextmanager.accessZones.get",
  "accesscontextmanager.accessZones.list",
  "accesscontextmanager.accessZones.update",
  "accesscontextmanager.policies.create",
  "accesscontextmanager.policies.delete",
  "accesscontextmanager.policies.get",
  "accesscontextmanager.policies.getIamPolicy",
  "accesscontextmanager.policies.list",
  "accesscontextmanager.policies.setIamPolicy",
  "accesscontextmanager.policies.update",
  "accesscontextmanager.servicePerimeters.commit",
  "accesscontextmanager.servicePerimeters.create",
  "accesscontextmanager.servicePerimeters.delete",
  "accesscontextmanager.servicePerimeters.get",
  "accesscontextmanager.servicePerimeters.list",
  "accesscontextmanager.servicePerimeters.replaceAll",
  "accesscontextmanager.servicePerimeters.update",
  "cloudasset.assets.searchAllResources",
  "compute.firewallPolicies.addAssociation",
  "compute.firewallPolicies.cloneRules",
  "compute.firewallPolicies.copyRules",
  "compute.firewallPolicies.create",
  "compute.firewallPolicies.delete",
  "compute.firewallPolicies.get",
  "compute.firewallPolicies.getIamPolicy",
  "compute.firewallPolicies.list",
  "compute.firewallPolicies.move",
  "compute.firewallPolicies.removeAssociation",
  "compute.firewallPolicies.setIamPolicy",
  "compute.firewallPolicies.update",
  "compute.firewallPolicies.use",
  "compute.firewalls.create",
  "compute.firewalls.delete",
  "compute.firewalls.get",
  "compute.firewalls.list",
  "compute.firewalls.update",
  "compute.globalOperations.get",
  "compute.globalOperations.list",
  "compute.instances.getEffectiveFirewalls",
  "compute.instances.setShieldedInstanceIntegrityPolicy",
  "compute.instances.setShieldedVmIntegrityPolicy",
  "compute.instances.updateSecurity",
  "compute.instances.updateShieldedInstanceConfig",
  "compute.instances.updateShieldedVmConfig",
  "compute.networks.get",
  "compute.networks.getEffectiveFirewalls",
  "compute.networks.list",
  "compute.networks.updatePolicy",
  "compute.packetMirrorings.update",
  "compute.projects.get",
  "compute.regionOperations.get",
  "compute.regionOperations.list",
  "compute.regionSslCertificates.create",
  "compute.regionSslCertificates.delete",
  "compute.regionSslCertificates.get",
  "compute.regionSslCertificates.list",
  "compute.regions.get",
  "compute.regions.list",
  "compute.routes.get",
  "compute.routes.list",
  "compute.securityPolicies.addAssociation",
  "compute.securityPolicies.copyRules",
  "compute.securityPolicies.create",
  "compute.securityPolicies.delete",
  "compute.securityPolicies.get",
  "compute.securityPolicies.getIamPolicy",
  "compute.securityPolicies.list",
  "compute.securityPolicies.move",
  "compute.securityPolicies.removeAssociation",
  "compute.securityPolicies.setIamPolicy",
  "compute.securityPolicies.update",
  "compute.securityPolicies.use",
  "compute.sslCertificates.create",
  "compute.sslCertificates.delete",
  "compute.sslCertificates.get",
  "compute.sslCertificates.list",
  "compute.sslPolicies.create",
  "compute.sslPolicies.delete",
  "compute.sslPolicies.get",
  "compute.sslPolicies.list",
  "compute.sslPolicies.listAvailableFeatures",
  "compute.sslPolicies.update",
  "compute.sslPolicies.use",
  "compute.subnetworks.get",
  "compute.subnetworks.list",
  "compute.zoneOperations.get",
  "compute.zoneOperations.list",
  "compute.zones.get",
  "compute.zones.list",
  "resourcemanager.organizations.get",
  "resourcemanager.projects.get",
  "resourcemanager.projects.list",
  "serviceusage.quotas.get",
  "serviceusage.services.get",
  "serviceusage.services.list",
]

## permission for siem admin ## 

siem-admin-permissions = [
  "cloudnotifications.activities.list",
  "logging.buckets.get",
  "logging.buckets.list",
  "logging.exclusions.get",
  "logging.exclusions.list",
  "logging.locations.get",
  "logging.locations.list",
  "logging.logEntries.list",
  "logging.logMetrics.get",
  "logging.logMetrics.list",
  "logging.logServiceIndexes.list",
  "logging.logServices.list",
  "logging.logs.list",
  "logging.operations.get",
  "logging.operations.list",
  "logging.queries.create",
  "logging.queries.delete",
  "logging.queries.get",
  "logging.queries.list",
  "logging.queries.listShared",
  "logging.queries.update",
  "logging.sinks.get",
  "logging.sinks.list",
  "logging.usage.get",
  "logging.views.get",
  "logging.views.list",
  "monitoring.alertPolicies.get",
  "monitoring.alertPolicies.list",
  "monitoring.dashboards.get",
  "monitoring.dashboards.list",
  "monitoring.groups.get",
  "monitoring.groups.list",
  "monitoring.metricDescriptors.get",
  "monitoring.metricDescriptors.list",
  "monitoring.monitoredResourceDescriptors.get",
  "monitoring.monitoredResourceDescriptors.list",
  "monitoring.notificationChannelDescriptors.get",
  "monitoring.notificationChannelDescriptors.list",
  "monitoring.notificationChannels.get",
  "monitoring.notificationChannels.list",
  "monitoring.publicWidgets.get",
  "monitoring.publicWidgets.list",
  "monitoring.services.get",
  "monitoring.services.list",
  "monitoring.slos.get",
  "monitoring.slos.list",
  "monitoring.timeSeries.list",
  "monitoring.uptimeCheckConfigs.get",
  "monitoring.uptimeCheckConfigs.list",
  "opsconfigmonitoring.resourceMetadata.list",
  "resourcemanager.projects.get",
  "resourcemanager.projects.list",
  "stackdriver.projects.get",
]


## permission for ir admin ##

ir-admin-permissions = [
  "cloudsecurityscanner.crawledurls.list",
  "cloudsecurityscanner.results.get",
  "cloudsecurityscanner.results.list",
  "cloudsecurityscanner.scanruns.get",
  "cloudsecurityscanner.scanruns.getSummary",
  "cloudsecurityscanner.scanruns.list",
  "cloudsecurityscanner.scans.get",
  "cloudsecurityscanner.scans.list",
  "resourcemanager.folders.get",
  "resourcemanager.organizations.get",
  "resourcemanager.projects.get",
  "securitycenter.assets.group",
  "securitycenter.assets.list",
  "securitycenter.assets.listAssetPropertyNames",
  "securitycenter.containerthreatdetectionsettings.calculate",
  "securitycenter.containerthreatdetectionsettings.get",
  "securitycenter.eventthreatdetectionsettings.calculate",
  "securitycenter.eventthreatdetectionsettings.get",
  "securitycenter.findings.group",
  "securitycenter.findings.list",
  "securitycenter.findings.listFindingPropertyNames",
  "securitycenter.notificationconfig.get",
  "securitycenter.notificationconfig.list",
  "securitycenter.organizationsettings.get",
  "securitycenter.securitycentersettings.get",
  "securitycenter.securityhealthanalyticssettings.calculate",
  "securitycenter.securityhealthanalyticssettings.get",
  "securitycenter.sources.get",
  "securitycenter.sources.list",
  "securitycenter.subscription.get",
  "securitycenter.userinterfacemetadata.get",
  "securitycenter.websecurityscannersettings.calculate",
  "securitycenter.websecurityscannersettings.get",
  "serviceusage.quotas.get",
  "serviceusage.services.get",
  "serviceusage.services.list",
]

## permission for crypto admin ## 

crypto-admin-permissions = [
  "cloudkms.cryptoKeyVersions.create",
  "cloudkms.cryptoKeyVersions.destroy",
  "cloudkms.cryptoKeyVersions.get",
  "cloudkms.cryptoKeyVersions.list",
  "cloudkms.cryptoKeyVersions.restore",
  "cloudkms.cryptoKeyVersions.update",
  "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation",
  "cloudkms.cryptoKeyVersions.useToEncryptViaDelegation",
  "cloudkms.cryptoKeys.create",
  "cloudkms.cryptoKeys.get",
  "cloudkms.cryptoKeys.getIamPolicy",
  "cloudkms.cryptoKeys.list",
  "cloudkms.cryptoKeys.setIamPolicy",
  "cloudkms.cryptoKeys.update",
  "cloudkms.importJobs.create",
  "cloudkms.importJobs.get",
  "cloudkms.importJobs.getIamPolicy",
  "cloudkms.importJobs.list",
  "cloudkms.importJobs.setIamPolicy",
  "cloudkms.importJobs.useToImport",
  "cloudkms.keyRings.create",
  "cloudkms.keyRings.createTagBinding",
  "cloudkms.keyRings.deleteTagBinding",
  "cloudkms.keyRings.get",
  "cloudkms.keyRings.getIamPolicy",
  "cloudkms.keyRings.list",
  "cloudkms.keyRings.listTagBindings",
  "cloudkms.keyRings.setIamPolicy",
  "cloudkms.locations.get",
  "cloudkms.locations.list",
  "resourcemanager.projects.get",
]


## permission for DDI Admin 

ddi-admin-permissions = [
  "compute.networks.get",
  "compute.networks.list",
  "dns.changes.create",
  "dns.changes.get",
  "dns.changes.list",
  "dns.dnsKeys.get",
  "dns.dnsKeys.list",
  "dns.managedZoneOperations.get",
  "dns.managedZoneOperations.list",
  "dns.managedZones.create",
  "dns.managedZones.delete",
  "dns.managedZones.get",
  "dns.managedZones.list",
  "dns.managedZones.update",
  "dns.networks.bindDNSResponsePolicy",
  "dns.networks.bindPrivateDNSPolicy",
  "dns.networks.bindPrivateDNSZone",
  "dns.networks.targetWithPeeringZone",
  "dns.policies.create",
  "dns.policies.delete",
  "dns.policies.get",
  "dns.policies.list",
  "dns.policies.update",
  "dns.projects.get",
  "dns.resourceRecordSets.create",
  "dns.resourceRecordSets.delete",
  "dns.resourceRecordSets.get",
  "dns.resourceRecordSets.list",
  "dns.resourceRecordSets.update",
  "dns.responsePolicies.create",
  "dns.responsePolicies.delete",
  "dns.responsePolicies.get",
  "dns.responsePolicies.list",
  "dns.responsePolicies.update",
  "dns.responsePolicyRules.create",
  "dns.responsePolicyRules.delete",
  "dns.responsePolicyRules.get",
  "dns.responsePolicyRules.list",
  "dns.responsePolicyRules.update",
  "resourcemanager.projects.get",
  "resourcemanager.projects.list",
]


## permission for billing admin ##

billing-admin-permissions = [
  "billing.accounts.close",
  "billing.accounts.create",
  "billing.accounts.get",
  "billing.accounts.getIamPolicy",
  "billing.accounts.getPaymentInfo",
  "billing.accounts.getPricing",
  "billing.accounts.getSpendingInformation",
  "billing.accounts.getUsageExportSpec",
  "billing.accounts.list",
  "billing.accounts.move",
  "billing.accounts.redeemPromotion",
  "billing.accounts.removeFromOrganization",
  "billing.accounts.reopen",
  "billing.accounts.setIamPolicy",
  "billing.accounts.update",
  "billing.accounts.updatePaymentInfo",
  "billing.accounts.updateUsageExportSpec",
  "billing.budgets.create",
  "billing.budgets.delete",
  "billing.budgets.get",
  "billing.budgets.list",
  "billing.budgets.update",
  "billing.credits.list",
  "billing.resourceAssociations.create",
  "billing.resourceAssociations.delete",
  "billing.resourceAssociations.list",
  "billing.subscriptions.create",
  "billing.subscriptions.get",
  "billing.subscriptions.list",
  "billing.subscriptions.update",
  "cloudnotifications.activities.list",
  "commerceoffercatalog.offers.get",
  "consumerprocurement.accounts.create",
  "consumerprocurement.accounts.delete",
  "consumerprocurement.accounts.get",
  "consumerprocurement.accounts.list",
  "consumerprocurement.orders.cancel",
  "consumerprocurement.orders.get",
  "consumerprocurement.orders.list",
  "consumerprocurement.orders.modify",
  "consumerprocurement.orders.place",
  "dataprocessing.datasources.get",
  "dataprocessing.datasources.list",
  "dataprocessing.groupcontrols.get",
  "dataprocessing.groupcontrols.list",
  "logging.logEntries.list",
  "logging.logServiceIndexes.list",
  "logging.logServices.list",
  "logging.logs.list",
  "logging.privateLogEntries.list",
  "recommender.commitmentUtilizationInsights.get",
  "recommender.commitmentUtilizationInsights.list",
  "recommender.commitmentUtilizationInsights.update",
  "recommender.usageCommitmentRecommendations.get",
  "recommender.usageCommitmentRecommendations.list",
  "recommender.usageCommitmentRecommendations.update",
  "resourcemanager.organizations.get",
  "resourcemanager.projects.createBillingAssignment",
  "resourcemanager.projects.deleteBillingAssignment",
]

## permission for network-admin ##

network-admin-permissions = [
  "compute.acceleratorTypes.get",
  "compute.acceleratorTypes.list",
  "compute.addresses.create",
  "compute.addresses.createInternal",
  "compute.addresses.delete",
  "compute.addresses.deleteInternal",
  "compute.addresses.get",
  "compute.addresses.list",
  "compute.addresses.setLabels",
  "compute.addresses.use",
  "compute.addresses.useInternal",
  "compute.autoscalers.get",
  "compute.autoscalers.list",
  "compute.backendBuckets.create",
  "compute.backendBuckets.delete",
  "compute.backendBuckets.get",
  "compute.backendBuckets.list",
  "compute.backendBuckets.update",
  "compute.backendBuckets.use",
  "compute.backendServices.create",
  "compute.backendServices.delete",
  "compute.backendServices.get",
  "compute.backendServices.getIamPolicy",
  "compute.backendServices.list",
  "compute.backendServices.setIamPolicy",
  "compute.backendServices.setSecurityPolicy",
  "compute.backendServices.update",
  "compute.backendServices.use",
  "compute.externalVpnGateways.create",
  "compute.externalVpnGateways.delete",
  "compute.externalVpnGateways.get",
  "compute.externalVpnGateways.list",
  "compute.externalVpnGateways.setLabels",
  "compute.externalVpnGateways.use",
  "compute.firewallPolicies.get",
  "compute.firewallPolicies.list",
  "compute.firewallPolicies.use",
  "compute.firewalls.get",
  "compute.firewalls.list",
  "compute.forwardingRules.create",
  "compute.forwardingRules.delete",
  "compute.forwardingRules.get",
  "compute.forwardingRules.list",
  "compute.forwardingRules.pscCreate",
  "compute.forwardingRules.pscDelete",
  "compute.forwardingRules.pscSetLabels",
  "compute.forwardingRules.pscSetTarget",
  "compute.forwardingRules.pscUpdate",
  "compute.forwardingRules.setLabels",
  "compute.forwardingRules.setTarget",
  "compute.forwardingRules.update",
  "compute.forwardingRules.use",
  "compute.globalAddresses.create",
  "compute.globalAddresses.createInternal",
  "compute.globalAddresses.delete",
  "compute.globalAddresses.deleteInternal",
  "compute.globalAddresses.get",
  "compute.globalAddresses.list",
  "compute.globalAddresses.setLabels",
  "compute.globalAddresses.use",
  "compute.globalForwardingRules.create",
  "compute.globalForwardingRules.delete",
  "compute.globalForwardingRules.get",
  "compute.globalForwardingRules.list",
  "compute.globalForwardingRules.pscCreate",
  "compute.globalForwardingRules.pscDelete",
  "compute.globalForwardingRules.pscGet",
  "compute.globalForwardingRules.pscSetLabels",
  "compute.globalForwardingRules.pscSetTarget",
  "compute.globalForwardingRules.pscUpdate",
  "compute.globalForwardingRules.setLabels",
  "compute.globalForwardingRules.setTarget",
  "compute.globalForwardingRules.update",
  "compute.globalNetworkEndpointGroups.get",
  "compute.globalNetworkEndpointGroups.list",
  "compute.globalNetworkEndpointGroups.use",
  "compute.globalOperations.get",
  "compute.globalOperations.list",
  "compute.globalPublicDelegatedPrefixes.delete",
  "compute.globalPublicDelegatedPrefixes.get",
  "compute.globalPublicDelegatedPrefixes.list",
  "compute.globalPublicDelegatedPrefixes.update",
  "compute.globalPublicDelegatedPrefixes.updatePolicy",
  "compute.healthChecks.create",
  "compute.healthChecks.delete",
  "compute.healthChecks.get",
  "compute.healthChecks.list",
  "compute.healthChecks.update",
  "compute.healthChecks.use",
  "compute.healthChecks.useReadOnly",
  "compute.httpHealthChecks.create",
  "compute.httpHealthChecks.delete",
  "compute.httpHealthChecks.get",
  "compute.httpHealthChecks.list",
  "compute.httpHealthChecks.update",
  "compute.httpHealthChecks.use",
  "compute.httpHealthChecks.useReadOnly",
  "compute.httpsHealthChecks.create",
  "compute.httpsHealthChecks.delete",
  "compute.httpsHealthChecks.get",
  "compute.httpsHealthChecks.list",
  "compute.httpsHealthChecks.update",
  "compute.httpsHealthChecks.use",
  "compute.httpsHealthChecks.useReadOnly",
  "compute.instanceGroupManagers.get",
  "compute.instanceGroupManagers.list",
  "compute.instanceGroupManagers.update",
  "compute.instanceGroupManagers.use",
  "compute.instanceGroups.get",
  "compute.instanceGroups.list",
  "compute.instanceGroups.update",
  "compute.instanceGroups.use",
  "compute.instances.get",
  "compute.instances.getGuestAttributes",
  "compute.instances.getScreenshot",
  "compute.instances.getSerialPortOutput",
  "compute.instances.list",
  "compute.instances.listReferrers",
  "compute.instances.updateSecurity",
  "compute.instances.use",
  "compute.instances.useReadOnly",
  "compute.interconnectAttachments.create",
  "compute.interconnectAttachments.delete",
  "compute.interconnectAttachments.get",
  "compute.interconnectAttachments.list",
  "compute.interconnectAttachments.setLabels",
  "compute.interconnectAttachments.update",
  "compute.interconnectAttachments.use",
  "compute.interconnectLocations.get",
  "compute.interconnectLocations.list",
  "compute.interconnects.create",
  "compute.interconnects.delete",
  "compute.interconnects.get",
  "compute.interconnects.list",
  "compute.interconnects.setLabels",
  "compute.interconnects.update",
  "compute.interconnects.use",
  "compute.machineTypes.get",
  "compute.machineTypes.list",
  "compute.networkEndpointGroups.get",
  "compute.networkEndpointGroups.list",
  "compute.networkEndpointGroups.use",
  "compute.networks.access",
  "compute.networks.addPeering",
  "compute.networks.create",
  "compute.networks.delete",
  "compute.networks.get",
  "compute.networks.getEffectiveFirewalls",
  "compute.networks.list",
  "compute.networks.listPeeringRoutes",
  "compute.networks.mirror",
  "compute.networks.removePeering",
  "compute.networks.switchToCustomMode",
  "compute.networks.update",
  "compute.networks.updatePeering",
  "compute.networks.updatePolicy",
  "compute.networks.use",
  "compute.networks.useExternalIp",
  "compute.organizations.disableXpnHost",
  "compute.organizations.disableXpnResource",
  "compute.organizations.enableXpnHost",
  "compute.organizations.enableXpnResource",
  "compute.projects.get",
  "compute.publicDelegatedPrefixes.delete",
  "compute.publicDelegatedPrefixes.get",
  "compute.publicDelegatedPrefixes.list",
  "compute.publicDelegatedPrefixes.update",
  "compute.publicDelegatedPrefixes.updatePolicy",
  "compute.regionBackendServices.create",
  "compute.regionBackendServices.delete",
  "compute.regionBackendServices.get",
  "compute.regionBackendServices.getIamPolicy",
  "compute.regionBackendServices.list",
  "compute.regionBackendServices.setIamPolicy",
  "compute.regionBackendServices.setSecurityPolicy",
  "compute.regionBackendServices.update",
  "compute.regionBackendServices.use",
  "compute.regionHealthCheckServices.create",
  "compute.regionHealthCheckServices.delete",
  "compute.regionHealthCheckServices.get",
  "compute.regionHealthCheckServices.list",
  "compute.regionHealthCheckServices.update",
  "compute.regionHealthCheckServices.use",
  "compute.regionHealthChecks.create",
  "compute.regionHealthChecks.delete",
  "compute.regionHealthChecks.get",
  "compute.regionHealthChecks.list",
  "compute.regionHealthChecks.update",
  "compute.regionHealthChecks.use",
  "compute.regionHealthChecks.useReadOnly",
  "compute.regionNetworkEndpointGroups.get",
  "compute.regionNetworkEndpointGroups.list",
  "compute.regionNetworkEndpointGroups.use",
  "compute.regionNotificationEndpoints.create",
  "compute.regionNotificationEndpoints.delete",
  "compute.regionNotificationEndpoints.get",
  "compute.regionNotificationEndpoints.list",
  "compute.regionNotificationEndpoints.update",
  "compute.regionNotificationEndpoints.use",
  "compute.regionOperations.get",
  "compute.regionOperations.list",
  "compute.regionSslCertificates.get",
  "compute.regionSslCertificates.list",
  "compute.regionTargetHttpProxies.create",
  "compute.regionTargetHttpProxies.delete",
  "compute.regionTargetHttpProxies.get",
  "compute.regionTargetHttpProxies.list",
  "compute.regionTargetHttpProxies.setUrlMap",
  "compute.regionTargetHttpProxies.use",
  "compute.regionTargetHttpsProxies.create",
  "compute.regionTargetHttpsProxies.delete",
  "compute.regionTargetHttpsProxies.get",
  "compute.regionTargetHttpsProxies.list",
  "compute.regionTargetHttpsProxies.setSslCertificates",
  "compute.regionTargetHttpsProxies.setUrlMap",
  "compute.regionTargetHttpsProxies.use",
  "compute.regionUrlMaps.create",
  "compute.regionUrlMaps.delete",
  "compute.regionUrlMaps.get",
  "compute.regionUrlMaps.invalidateCache",
  "compute.regionUrlMaps.list",
  "compute.regionUrlMaps.update",
  "compute.regionUrlMaps.use",
  "compute.regionUrlMaps.validate",
  "compute.regions.get",
  "compute.regions.list",
  "compute.routers.create",
  "compute.routers.delete",
  "compute.routers.get",
  "compute.routers.list",
  "compute.routers.update",
  "compute.routers.use",
  "compute.routes.create",
  "compute.routes.delete",
  "compute.routes.get",
  "compute.routes.list",
  "compute.securityPolicies.get",
  "compute.securityPolicies.list",
  "compute.securityPolicies.use",
  "compute.serviceAttachments.create",
  "compute.serviceAttachments.delete",
  "compute.serviceAttachments.get",
  "compute.serviceAttachments.list",
  "compute.serviceAttachments.update",
  "compute.sslCertificates.get",
  "compute.sslCertificates.list",
  "compute.sslPolicies.create",
  "compute.sslPolicies.delete",
  "compute.sslPolicies.get",
  "compute.sslPolicies.list",
  "compute.sslPolicies.listAvailableFeatures",
  "compute.sslPolicies.update",
  "compute.sslPolicies.use",
  "compute.subnetworks.create",
  "compute.subnetworks.delete",
  "compute.subnetworks.expandIpCidrRange",
  "compute.subnetworks.get",
  "compute.subnetworks.getIamPolicy",
  "compute.subnetworks.list",
  "compute.subnetworks.mirror",
  "compute.subnetworks.setIamPolicy",
  "compute.subnetworks.setPrivateIpGoogleAccess",
  "compute.subnetworks.update",
  "compute.subnetworks.use",
  "compute.subnetworks.useExternalIp",
  "compute.targetGrpcProxies.create",
  "compute.targetGrpcProxies.delete",
  "compute.targetGrpcProxies.get",
  "compute.targetGrpcProxies.list",
  "compute.targetGrpcProxies.update",
  "compute.targetGrpcProxies.use",
  "compute.targetHttpProxies.create",
  "compute.targetHttpProxies.delete",
  "compute.targetHttpProxies.get",
  "compute.targetHttpProxies.list",
  "compute.targetHttpProxies.setUrlMap",
  "compute.targetHttpProxies.use",
  "compute.targetHttpsProxies.create",
  "compute.targetHttpsProxies.delete",
  "compute.targetHttpsProxies.get",
  "compute.targetHttpsProxies.list",
  "compute.targetHttpsProxies.setSslCertificates",
  "compute.targetHttpsProxies.setSslPolicy",
  "compute.targetHttpsProxies.setUrlMap",
  "compute.targetHttpsProxies.use",
  "compute.targetInstances.create",
  "compute.targetInstances.delete",
  "compute.targetInstances.get",
  "compute.targetInstances.list",
  "compute.targetInstances.use",
  "compute.targetPools.addHealthCheck",
  "compute.targetPools.addInstance",
  "compute.targetPools.create",
  "compute.targetPools.delete",
  "compute.targetPools.get",
  "compute.targetPools.list",
  "compute.targetPools.removeHealthCheck",
  "compute.targetPools.removeInstance",
  "compute.targetPools.update",
  "compute.targetPools.use",
  "compute.targetSslProxies.create",
  "compute.targetSslProxies.delete",
  "compute.targetSslProxies.get",
  "compute.targetSslProxies.list",
  "compute.targetSslProxies.setBackendService",
  "compute.targetSslProxies.setProxyHeader",
  "compute.targetSslProxies.setSslCertificates",
  "compute.targetSslProxies.use",
  "compute.targetTcpProxies.create",
  "compute.targetTcpProxies.delete",
  "compute.targetTcpProxies.get",
  "compute.targetTcpProxies.list",
  "compute.targetTcpProxies.update",
  "compute.targetTcpProxies.use",
  "compute.targetVpnGateways.create",
  "compute.targetVpnGateways.delete",
  "compute.targetVpnGateways.get",
  "compute.targetVpnGateways.list",
  "compute.targetVpnGateways.setLabels",
  "compute.targetVpnGateways.use",
  "compute.urlMaps.create",
  "compute.urlMaps.delete",
  "compute.urlMaps.get",
  "compute.urlMaps.invalidateCache",
  "compute.urlMaps.list",
  "compute.urlMaps.update",
  "compute.urlMaps.use",
  "compute.urlMaps.validate",
  "compute.vpnGateways.create",
  "compute.vpnGateways.delete",
  "compute.vpnGateways.get",
  "compute.vpnGateways.list",
  "compute.vpnGateways.setLabels",
  "compute.vpnGateways.use",
  "compute.vpnTunnels.create",
  "compute.vpnTunnels.delete",
  "compute.vpnTunnels.get",
  "compute.vpnTunnels.list",
  "compute.vpnTunnels.setLabels",
  "compute.zoneOperations.get",
  "compute.zoneOperations.list",
  "compute.zones.get",
  "compute.zones.list",
  "networkconnectivity.locations.get",
  "networkconnectivity.locations.list",
  "networkconnectivity.operations.cancel",
  "networkconnectivity.operations.delete",
  "networkconnectivity.operations.get",
  "networkconnectivity.operations.list",
  "networksecurity.authorizationPolicies.create",
  "networksecurity.authorizationPolicies.delete",
  "networksecurity.authorizationPolicies.get",
  "networksecurity.authorizationPolicies.getIamPolicy",
  "networksecurity.authorizationPolicies.list",
  "networksecurity.authorizationPolicies.setIamPolicy",
  "networksecurity.authorizationPolicies.update",
  "networksecurity.authorizationPolicies.use",
  "networksecurity.clientTlsPolicies.create",
  "networksecurity.clientTlsPolicies.delete",
  "networksecurity.clientTlsPolicies.get",
  "networksecurity.clientTlsPolicies.getIamPolicy",
  "networksecurity.clientTlsPolicies.list",
  "networksecurity.clientTlsPolicies.setIamPolicy",
  "networksecurity.clientTlsPolicies.update",
  "networksecurity.clientTlsPolicies.use",
  "networksecurity.locations.get",
  "networksecurity.locations.list",
  "networksecurity.operations.cancel",
  "networksecurity.operations.delete",
  "networksecurity.operations.get",
  "networksecurity.operations.list",
  "networksecurity.serverTlsPolicies.create",
  "networksecurity.serverTlsPolicies.delete",
  "networksecurity.serverTlsPolicies.get",
  "networksecurity.serverTlsPolicies.getIamPolicy",
  "networksecurity.serverTlsPolicies.list",
  "networksecurity.serverTlsPolicies.setIamPolicy",
  "networksecurity.serverTlsPolicies.update",
  "networksecurity.serverTlsPolicies.use",
  "networkservices.endpointConfigSelectors.create",
  "networkservices.endpointConfigSelectors.delete",
  "networkservices.endpointConfigSelectors.get",
  "networkservices.endpointConfigSelectors.getIamPolicy",
  "networkservices.endpointConfigSelectors.list",
  "networkservices.endpointConfigSelectors.setIamPolicy",
  "networkservices.endpointConfigSelectors.update",
  "networkservices.endpointConfigSelectors.use",
  "networkservices.endpointPolicies.create",
  "networkservices.endpointPolicies.delete",
  "networkservices.endpointPolicies.get",
  "networkservices.endpointPolicies.getIamPolicy",
  "networkservices.endpointPolicies.list",
  "networkservices.endpointPolicies.setIamPolicy",
  "networkservices.endpointPolicies.update",
  "networkservices.endpointPolicies.use",
  "networkservices.httpFilters.create",
  "networkservices.httpFilters.delete",
  "networkservices.httpFilters.get",
  "networkservices.httpFilters.getIamPolicy",
  "networkservices.httpFilters.list",
  "networkservices.httpFilters.setIamPolicy",
  "networkservices.httpFilters.update",
  "networkservices.httpFilters.use",
  "networkservices.httpfilters.create",
  "networkservices.httpfilters.delete",
  "networkservices.httpfilters.get",
  "networkservices.httpfilters.getIamPolicy",
  "networkservices.httpfilters.list",
  "networkservices.httpfilters.setIamPolicy",
  "networkservices.httpfilters.update",
  "networkservices.httpfilters.use",
  "networkservices.locations.get",
  "networkservices.locations.list",
  "networkservices.operations.cancel",
  "networkservices.operations.delete",
  "networkservices.operations.get",
  "networkservices.operations.list",
  "orgpolicy.constraints.list",
  "orgpolicy.policies.list",
  "orgpolicy.policy.get",
  "resourcemanager.folders.get",
  "resourcemanager.folders.list",
  "resourcemanager.organizations.get",
  "resourcemanager.projects.get",
  "resourcemanager.projects.getIamPolicy",
  "resourcemanager.projects.list",
  "servicedirectory.namespaces.create",
  "servicedirectory.namespaces.delete",
  "servicedirectory.services.create",
  "servicedirectory.services.delete",
  "servicenetworking.operations.get",
  "servicenetworking.services.addPeering",
  "servicenetworking.services.get",
  "serviceusage.quotas.get",
  "serviceusage.services.get",
  "serviceusage.services.list",
  "trafficdirector.networks.getConfigs",
  "trafficdirector.networks.reportMetrics",
]


## permission for cloudsolutions poweruser ##

cloudsolutions-poweruser-permissions = [
  "bigquery.bireservations.get",
  "bigquery.capacityCommitments.get",
  "bigquery.capacityCommitments.list",
  "bigquery.config.get",
  "bigquery.datasets.create",
  "bigquery.datasets.delete",
  "bigquery.datasets.get",
  "bigquery.datasets.getIamPolicy",
  "bigquery.datasets.setIamPolicy",
  "bigquery.datasets.update",
  "bigquery.datasets.updateTag",
  "bigquery.jobs.create",
  "bigquery.jobs.list",
  "bigquery.models.create",
  "bigquery.models.delete",
  "bigquery.models.export",
  "bigquery.models.getData",
  "bigquery.models.getMetadata",
  "bigquery.models.list",
  "bigquery.models.updateData",
  "bigquery.models.updateMetadata",
  "bigquery.models.updateTag",
  "bigquery.readsessions.create",
  "bigquery.readsessions.getData",
  "bigquery.readsessions.update",
  "bigquery.reservationAssignments.list",
  "bigquery.reservationAssignments.search",
  "bigquery.reservations.get",
  "bigquery.reservations.list",
  "bigquery.routines.create",
  "bigquery.routines.delete",
  "bigquery.routines.get",
  "bigquery.routines.list",
  "bigquery.routines.update",
  "bigquery.routines.updateTag",
  "bigquery.rowAccessPolicies.create",
  "bigquery.rowAccessPolicies.delete",
  "bigquery.rowAccessPolicies.getIamPolicy",
  "bigquery.rowAccessPolicies.list",
  "bigquery.rowAccessPolicies.setIamPolicy",
  "bigquery.rowAccessPolicies.update",
  "bigquery.savedqueries.get",
  "bigquery.savedqueries.list",
  "bigquery.tables.create",
  "bigquery.tables.createSnapshot",
  "bigquery.tables.delete",
  "bigquery.tables.deleteSnapshot",
  "bigquery.tables.export",
  "bigquery.tables.get",
  "bigquery.tables.getData",
  "bigquery.tables.getIamPolicy",
  "bigquery.tables.list",
  "bigquery.tables.restoreSnapshot",
  "bigquery.tables.setCategory",
  "bigquery.tables.setIamPolicy",
  "bigquery.tables.update",
  "bigquery.tables.updateData",
  "bigquery.tables.updateTag",
  "bigquery.transfers.get",
  "compute.addresses.createInternal",
  "compute.addresses.deleteInternal",
  "compute.addresses.get",
  "compute.addresses.list",
  "compute.addresses.useInternal",
  "compute.externalVpnGateways.get",
  "compute.externalVpnGateways.list",
  "compute.externalVpnGateways.use",
  "compute.firewalls.get",
  "compute.firewalls.list",
  "compute.interconnectAttachments.get",
  "compute.interconnectAttachments.list",
  "compute.interconnectLocations.get",
  "compute.interconnectLocations.list",
  "compute.interconnects.get",
  "compute.interconnects.list",
  "compute.interconnects.use",
  "compute.machineTypes.get",
  "compute.machineTypes.list",
  "compute.networks.access",
  "compute.networks.get",
  "compute.networks.getEffectiveFirewalls",
  "compute.networks.list",
  "compute.networks.listPeeringRoutes",
  "compute.networks.use",
  "compute.networks.useExternalIp",
  "compute.projects.get",
  "compute.regions.get",
  "compute.regions.list",
  "compute.routers.get",
  "compute.routers.list",
  "compute.routes.get",
  "compute.routes.list",
  "compute.serviceAttachments.get",
  "compute.serviceAttachments.list",
  "compute.subnetworks.get",
  "compute.subnetworks.list",
  "compute.subnetworks.use",
  "compute.subnetworks.useExternalIp",
  "compute.targetVpnGateways.get",
  "compute.targetVpnGateways.list",
  "compute.vpnGateways.get",
  "compute.vpnGateways.list",
  "compute.vpnGateways.use",
  "compute.vpnTunnels.get",
  "compute.vpnTunnels.list",
  "compute.zones.get",
  "compute.zones.list",
  "dataproc.autoscalingPolicies.create",
  "dataproc.autoscalingPolicies.delete",
  "dataproc.autoscalingPolicies.get",
  "dataproc.autoscalingPolicies.getIamPolicy",
  "dataproc.autoscalingPolicies.list",
  "dataproc.autoscalingPolicies.setIamPolicy",
  "dataproc.autoscalingPolicies.update",
  "dataproc.autoscalingPolicies.use",
  "dataproc.clusters.create",
  "dataproc.clusters.delete",
  "dataproc.clusters.get",
  "dataproc.clusters.getIamPolicy",
  "dataproc.clusters.list",
  "dataproc.clusters.setIamPolicy",
  "dataproc.clusters.start",
  "dataproc.clusters.stop",
  "dataproc.clusters.update",
  "dataproc.clusters.use",
  "dataproc.jobs.cancel",
  "dataproc.jobs.create",
  "dataproc.jobs.delete",
  "dataproc.jobs.get",
  "dataproc.jobs.getIamPolicy",
  "dataproc.jobs.list",
  "dataproc.jobs.setIamPolicy",
  "dataproc.jobs.update",
  "dataproc.operations.cancel",
  "dataproc.operations.delete",
  "dataproc.operations.get",
  "dataproc.operations.getIamPolicy",
  "dataproc.operations.list",
  "dataproc.operations.setIamPolicy",
  "dataproc.workflowTemplates.create",
  "dataproc.workflowTemplates.delete",
  "dataproc.workflowTemplates.get",
  "dataproc.workflowTemplates.getIamPolicy",
  "dataproc.workflowTemplates.instantiate",
  "dataproc.workflowTemplates.instantiateInline",
  "dataproc.workflowTemplates.list",
  "dataproc.workflowTemplates.setIamPolicy",
  "dataproc.workflowTemplates.update",
  "firebase.projects.get",
  "logging.buckets.get",
  "logging.buckets.list",
  "logging.exclusions.get",
  "logging.exclusions.list",
  "logging.locations.get",
  "logging.locations.list",
  "logging.logEntries.create",
  "logging.logEntries.list",
  "logging.logMetrics.get",
  "logging.logMetrics.list",
  "logging.logServiceIndexes.list",
  "logging.logServices.list",
  "logging.logs.list",
  "logging.privateLogEntries.list",
  "logging.queries.create",
  "logging.queries.delete",
  "logging.queries.get",
  "logging.queries.list",
  "logging.queries.listShared",
  "logging.queries.update",
  "logging.sinks.get",
  "logging.sinks.list",
  "logging.usage.get",
  "logging.views.access",
  "logging.views.get",
  "logging.views.list",
  "networkconnectivity.locations.get",
  "networkconnectivity.locations.list",
  "networkconnectivity.operations.get",
  "networkconnectivity.operations.list",
  "networksecurity.authorizationPolicies.get",
  "networksecurity.authorizationPolicies.list",
  "networksecurity.authorizationPolicies.use",
  "networksecurity.clientTlsPolicies.get",
  "networksecurity.clientTlsPolicies.list",
  "networksecurity.clientTlsPolicies.use",
  "networksecurity.locations.get",
  "networksecurity.locations.list",
  "networksecurity.operations.get",
  "networksecurity.operations.list",
  "networksecurity.serverTlsPolicies.get",
  "networksecurity.serverTlsPolicies.list",
  "networksecurity.serverTlsPolicies.use",
  "networkservices.endpointConfigSelectors.get",
  "networkservices.endpointConfigSelectors.list",
  "networkservices.endpointConfigSelectors.use",
  "networkservices.endpointPolicies.get",
  "networkservices.endpointPolicies.list",
  "networkservices.endpointPolicies.use",
  "networkservices.httpFilters.get",
  "networkservices.httpFilters.list",
  "networkservices.httpFilters.use",
  "networkservices.httpfilters.get",
  "networkservices.httpfilters.list",
  "networkservices.httpfilters.use",
  "networkservices.locations.get",
  "networkservices.locations.list",
  "networkservices.operations.get",
  "networkservices.operations.list",
  "resourcemanager.organizations.get",
  "resourcemanager.projects.create",
  "resourcemanager.projects.get",
  "resourcemanager.projects.list",
  "servicenetworking.services.get",
  "serviceusage.quotas.get",
  "serviceusage.services.get",
  "serviceusage.services.list",
  "storage.buckets.create",
  "storage.buckets.createTagBinding",
  "storage.buckets.delete",
  "storage.buckets.deleteTagBinding",
  "storage.buckets.get",
  "storage.buckets.getIamPolicy",
  "storage.buckets.list",
  "storage.buckets.listTagBindings",
  "storage.buckets.setIamPolicy",
  "storage.buckets.update",
  "storage.multipartUploads.abort",
  "storage.multipartUploads.create",
  "storage.multipartUploads.list",
  "storage.multipartUploads.listParts",
  "storage.objects.create",
  "storage.objects.delete",
  "storage.objects.get",
  "storage.objects.getIamPolicy",
  "storage.objects.list",
  "storage.objects.setIamPolicy",
  "storage.objects.update",
]

## permission for CloudQE Poweruser ##

cloudqe-poweruser-permissions = [
  "bigquery.bireservations.get",
  "bigquery.capacityCommitments.get",
  "bigquery.capacityCommitments.list",
  "bigquery.config.get",
  "bigquery.datasets.create",
  "bigquery.datasets.delete",
  "bigquery.datasets.get",
  "bigquery.datasets.getIamPolicy",
  "bigquery.datasets.setIamPolicy",
  "bigquery.datasets.update",
  "bigquery.datasets.updateTag",
  "bigquery.jobs.create",
  "bigquery.jobs.list",
  "bigquery.models.create",
  "bigquery.models.delete",
  "bigquery.models.export",
  "bigquery.models.getData",
  "bigquery.models.getMetadata",
  "bigquery.models.list",
  "bigquery.models.updateData",
  "bigquery.models.updateMetadata",
  "bigquery.models.updateTag",
  "bigquery.readsessions.create",
  "bigquery.readsessions.getData",
  "bigquery.readsessions.update",
  "bigquery.reservationAssignments.list",
  "bigquery.reservationAssignments.search",
  "bigquery.reservations.get",
  "bigquery.reservations.list",
  "bigquery.routines.create",
  "bigquery.routines.delete",
  "bigquery.routines.get",
  "bigquery.routines.list",
  "bigquery.routines.update",
  "bigquery.routines.updateTag",
  "bigquery.rowAccessPolicies.create",
  "bigquery.rowAccessPolicies.delete",
  "bigquery.rowAccessPolicies.getIamPolicy",
  "bigquery.rowAccessPolicies.list",
  "bigquery.rowAccessPolicies.setIamPolicy",
  "bigquery.rowAccessPolicies.update",
  "bigquery.savedqueries.get",
  "bigquery.savedqueries.list",
  "bigquery.tables.create",
  "bigquery.tables.createSnapshot",
  "bigquery.tables.delete",
  "bigquery.tables.deleteSnapshot",
  "bigquery.tables.export",
  "bigquery.tables.get",
  "bigquery.tables.getData",
  "bigquery.tables.getIamPolicy",
  "bigquery.tables.list",
  "bigquery.tables.restoreSnapshot",
  "bigquery.tables.setCategory",
  "bigquery.tables.setIamPolicy",
  "bigquery.tables.update",
  "bigquery.tables.updateData",
  "bigquery.tables.updateTag",
  "bigquery.transfers.get",
  "compute.addresses.createInternal",
  "compute.addresses.deleteInternal",
  "compute.addresses.get",
  "compute.addresses.list",
  "compute.addresses.useInternal",
  "compute.externalVpnGateways.get",
  "compute.externalVpnGateways.list",
  "compute.externalVpnGateways.use",
  "compute.firewalls.get",
  "compute.firewalls.list",
  "compute.interconnectAttachments.get",
  "compute.interconnectAttachments.list",
  "compute.interconnectLocations.get",
  "compute.interconnectLocations.list",
  "compute.interconnects.get",
  "compute.interconnects.list",
  "compute.interconnects.use",
  "compute.machineTypes.get",
  "compute.machineTypes.list",
  "compute.networks.access",
  "compute.networks.get",
  "compute.networks.getEffectiveFirewalls",
  "compute.networks.list",
  "compute.networks.listPeeringRoutes",
  "compute.networks.use",
  "compute.networks.useExternalIp",
  "compute.projects.get",
  "compute.regions.get",
  "compute.regions.list",
  "compute.routers.get",
  "compute.routers.list",
  "compute.routes.get",
  "compute.routes.list",
  "compute.serviceAttachments.get",
  "compute.serviceAttachments.list",
  "compute.subnetworks.get",
  "compute.subnetworks.list",
  "compute.subnetworks.use",
  "compute.subnetworks.useExternalIp",
  "compute.targetVpnGateways.get",
  "compute.targetVpnGateways.list",
  "compute.vpnGateways.get",
  "compute.vpnGateways.list",
  "compute.vpnGateways.use",
  "compute.vpnTunnels.get",
  "compute.vpnTunnels.list",
  "compute.zones.get",
  "compute.zones.list",
  "dataproc.autoscalingPolicies.create",
  "dataproc.autoscalingPolicies.delete",
  "dataproc.autoscalingPolicies.get",
  "dataproc.autoscalingPolicies.getIamPolicy",
  "dataproc.autoscalingPolicies.list",
  "dataproc.autoscalingPolicies.setIamPolicy",
  "dataproc.autoscalingPolicies.update",
  "dataproc.autoscalingPolicies.use",
  "dataproc.clusters.create",
  "dataproc.clusters.delete",
  "dataproc.clusters.get",
  "dataproc.clusters.getIamPolicy",
  "dataproc.clusters.list",
  "dataproc.clusters.setIamPolicy",
  "dataproc.clusters.start",
  "dataproc.clusters.stop",
  "dataproc.clusters.update",
  "dataproc.clusters.use",
  "dataproc.jobs.cancel",
  "dataproc.jobs.create",
  "dataproc.jobs.delete",
  "dataproc.jobs.get",
  "dataproc.jobs.getIamPolicy",
  "dataproc.jobs.list",
  "dataproc.jobs.setIamPolicy",
  "dataproc.jobs.update",
  "dataproc.operations.cancel",
  "dataproc.operations.delete",
  "dataproc.operations.get",
  "dataproc.operations.getIamPolicy",
  "dataproc.operations.list",
  "dataproc.operations.setIamPolicy",
  "dataproc.workflowTemplates.create",
  "dataproc.workflowTemplates.delete",
  "dataproc.workflowTemplates.get",
  "dataproc.workflowTemplates.getIamPolicy",
  "dataproc.workflowTemplates.instantiate",
  "dataproc.workflowTemplates.instantiateInline",
  "dataproc.workflowTemplates.list",
  "dataproc.workflowTemplates.setIamPolicy",
  "dataproc.workflowTemplates.update",
  "firebase.projects.get",
  "logging.buckets.get",
  "logging.buckets.list",
  "logging.exclusions.get",
  "logging.exclusions.list",
  "logging.locations.get",
  "logging.locations.list",
  "logging.logEntries.create",
  "logging.logEntries.list",
  "logging.logMetrics.get",
  "logging.logMetrics.list",
  "logging.logServiceIndexes.list",
  "logging.logServices.list",
  "logging.logs.list",
  "logging.privateLogEntries.list",
  "logging.queries.create",
  "logging.queries.delete",
  "logging.queries.get",
  "logging.queries.list",
  "logging.queries.listShared",
  "logging.queries.update",
  "logging.sinks.get",
  "logging.sinks.list",
  "logging.usage.get",
  "logging.views.access",
  "logging.views.get",
  "logging.views.list",
  "networkconnectivity.locations.get",
  "networkconnectivity.locations.list",
  "networkconnectivity.operations.get",
  "networkconnectivity.operations.list",
  "networksecurity.authorizationPolicies.get",
  "networksecurity.authorizationPolicies.list",
  "networksecurity.authorizationPolicies.use",
  "networksecurity.clientTlsPolicies.get",
  "networksecurity.clientTlsPolicies.list",
  "networksecurity.clientTlsPolicies.use",
  "networksecurity.locations.get",
  "networksecurity.locations.list",
  "networksecurity.operations.get",
  "networksecurity.operations.list",
  "networksecurity.serverTlsPolicies.get",
  "networksecurity.serverTlsPolicies.list",
  "networksecurity.serverTlsPolicies.use",
  "networkservices.endpointConfigSelectors.get",
  "networkservices.endpointConfigSelectors.list",
  "networkservices.endpointConfigSelectors.use",
  "networkservices.endpointPolicies.get",
  "networkservices.endpointPolicies.list",
  "networkservices.endpointPolicies.use",
  "networkservices.httpFilters.get",
  "networkservices.httpFilters.list",
  "networkservices.httpFilters.use",
  "networkservices.httpfilters.get",
  "networkservices.httpfilters.list",
  "networkservices.httpfilters.use",
  "networkservices.locations.get",
  "networkservices.locations.list",
  "networkservices.operations.get",
  "networkservices.operations.list",
  "resourcemanager.organizations.get",
  "resourcemanager.projects.create",
  "resourcemanager.projects.get",
  "resourcemanager.projects.list",
  "servicenetworking.services.get",
  "serviceusage.quotas.get",
  "serviceusage.services.get",
  "serviceusage.services.list",
  "storage.buckets.create",
  "storage.buckets.createTagBinding",
  "storage.buckets.delete",
  "storage.buckets.deleteTagBinding",
  "storage.buckets.get",
  "storage.buckets.getIamPolicy",
  "storage.buckets.list",
  "storage.buckets.listTagBindings",
  "storage.buckets.setIamPolicy",
  "storage.buckets.update",
  "storage.multipartUploads.abort",
  "storage.multipartUploads.create",
  "storage.multipartUploads.list",
  "storage.multipartUploads.listParts",
  "storage.objects.create",
  "storage.objects.delete",
  "storage.objects.get",
  "storage.objects.getIamPolicy",
  "storage.objects.list",
  "storage.objects.setIamPolicy",
  "storage.objects.update",
]






