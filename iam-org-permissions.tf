/*####################################
  Custom Role Cloud Security Poweruser
*/####################################

/* permissions for cloud security poweruser 

permissions = [
          + "appengine.applications.get",
          + "bigquery.datasets.get",
          + "bigquery.datasets.getIamPolicy",
          + "bigquery.models.export",
          + "bigquery.models.getData",
          + "bigquery.models.getMetadata",
          + "bigquery.models.list",
          + "bigquery.routines.get",
          + "bigquery.routines.list",
          + "bigquery.tables.createSnapshot",
          + "bigquery.tables.export",
          + "bigquery.tables.get",
          + "bigquery.tables.getData",
          + "bigquery.tables.getIamPolicy",
          + "bigquery.tables.list",
          + "cloudsecurityscanner.crawledurls.list",
          + "cloudsecurityscanner.results.get",
          + "cloudsecurityscanner.results.list",
          + "cloudsecurityscanner.scanruns.get",
          + "cloudsecurityscanner.scanruns.getSummary",
          + "cloudsecurityscanner.scanruns.list",
          + "cloudsecurityscanner.scanruns.stop",
          + "cloudsecurityscanner.scans.create",
          + "cloudsecurityscanner.scans.delete",
          + "cloudsecurityscanner.scans.get",
          + "cloudsecurityscanner.scans.list",
          + "cloudsecurityscanner.scans.run",
          + "cloudsecurityscanner.scans.update",
          + "compute.acceleratorTypes.get",
          + "compute.acceleratorTypes.list",
          + "compute.addresses.get",
          + "compute.addresses.list",
          + "compute.autoscalers.get",
          + "compute.autoscalers.list",
          + "compute.backendBuckets.get",
          + "compute.backendBuckets.list",
          + "compute.backendServices.get",
          + "compute.backendServices.getIamPolicy",
          + "compute.backendServices.list",
          + "compute.commitments.get",
          + "compute.commitments.list",
          + "compute.diskTypes.get",
          + "compute.diskTypes.list",
          + "compute.disks.get",
          + "compute.disks.getIamPolicy",
          + "compute.disks.list",
          + "compute.externalVpnGateways.get",
          + "compute.externalVpnGateways.list",
          + "compute.firewallPolicies.get",
          + "compute.firewallPolicies.getIamPolicy",
          + "compute.firewallPolicies.list",
          + "compute.firewalls.get",
          + "compute.firewalls.list",
          + "compute.forwardingRules.get",
          + "compute.forwardingRules.list",
          + "compute.globalAddresses.get",
          + "compute.globalAddresses.list",
          + "compute.globalForwardingRules.get",
          + "compute.globalForwardingRules.list",
          + "compute.globalForwardingRules.pscGet",
          + "compute.globalNetworkEndpointGroups.get",
          + "compute.globalNetworkEndpointGroups.list",
          + "compute.globalOperations.get",
          + "compute.globalOperations.getIamPolicy",
          + "compute.globalOperations.list",
          + "compute.globalPublicDelegatedPrefixes.get",
          + "compute.globalPublicDelegatedPrefixes.list",
          + "compute.healthChecks.get",
          + "compute.healthChecks.list",
          + "compute.httpHealthChecks.get",
          + "compute.httpHealthChecks.list",
          + "compute.httpsHealthChecks.get",
          + "compute.httpsHealthChecks.list",
          + "compute.images.get",
          + "compute.images.getFromFamily",
          + "compute.images.getIamPolicy",
          + "compute.images.list",
          + "compute.instanceGroupManagers.get",
          + "compute.instanceGroupManagers.list",
          + "compute.instanceGroups.get",
          + "compute.instanceGroups.list",
          + "compute.instanceTemplates.get",
          + "compute.instanceTemplates.getIamPolicy",
          + "compute.instanceTemplates.list",
          + "compute.instances.get",
          + "compute.instances.getEffectiveFirewalls",
          + "compute.instances.getGuestAttributes",
          + "compute.instances.getIamPolicy",
          + "compute.instances.getScreenshot",
          + "compute.instances.getSerialPortOutput",
          + "compute.instances.getShieldedInstanceIdentity",
          + "compute.instances.getShieldedVmIdentity",
          + "compute.instances.list",
          + "compute.instances.listReferrers",
          + "compute.interconnectAttachments.get",
          + "compute.interconnectAttachments.list",
          + "compute.interconnectLocations.get",
          + "compute.interconnectLocations.list",
          + "compute.interconnects.get",
          + "compute.interconnects.list",
          + "compute.licenseCodes.get",
          + "compute.licenseCodes.getIamPolicy",
          + "compute.licenseCodes.list",
          + "compute.licenses.get",
          + "compute.licenses.getIamPolicy",
          + "compute.licenses.list",
          + "compute.machineImages.get",
          + "compute.machineImages.getIamPolicy",
          + "compute.machineImages.list",
          + "compute.machineTypes.get",
          + "compute.machineTypes.list",
          + "compute.maintenancePolicies.get",
          + "compute.maintenancePolicies.getIamPolicy",
          + "compute.maintenancePolicies.list",
          + "compute.networkEndpointGroups.get",
          + "compute.networkEndpointGroups.getIamPolicy",
          + "compute.networkEndpointGroups.list",
          + "compute.networks.get",
          + "compute.networks.getEffectiveFirewalls",
          + "compute.networks.list",
          + "compute.networks.listPeeringRoutes",
          + "compute.nodeGroups.get",
          + "compute.nodeGroups.getIamPolicy",
          + "compute.nodeGroups.list",
          + "compute.nodeTemplates.get",
          + "compute.nodeTemplates.getIamPolicy",
          + "compute.nodeTemplates.list",
          + "compute.nodeTypes.get",
          + "compute.nodeTypes.list",
          + "compute.organizations.listAssociations",
          + "compute.projects.get",
          + "compute.publicAdvertisedPrefixes.get",
          + "compute.publicAdvertisedPrefixes.list",
          + "compute.publicDelegatedPrefixes.get",
          + "compute.publicDelegatedPrefixes.list",
          + "compute.regionBackendServices.get",
          + "compute.regionBackendServices.getIamPolicy",
          + "compute.regionBackendServices.list",
          + "compute.regionHealthCheckServices.get",
          + "compute.regionHealthCheckServices.list",
          + "compute.regionHealthChecks.get",
          + "compute.regionHealthChecks.list",
          + "compute.regionNetworkEndpointGroups.get",
          + "compute.regionNetworkEndpointGroups.list",
          + "compute.regionNotificationEndpoints.get",
          + "compute.regionNotificationEndpoints.list",
          + "compute.regionOperations.get",
          + "compute.regionOperations.getIamPolicy",
          + "compute.regionOperations.list",
          + "compute.regionSslCertificates.get",
          + "compute.regionSslCertificates.list",
          + "compute.regionTargetHttpProxies.get",
          + "compute.regionTargetHttpProxies.list",
          + "compute.regionTargetHttpsProxies.get",
          + "compute.regionTargetHttpsProxies.list",
          + "compute.regionUrlMaps.get",
          + "compute.regionUrlMaps.list",
          + "compute.regionUrlMaps.validate",
          + "compute.regions.get",
          + "compute.regions.list",
          + "compute.reservations.get",
          + "compute.reservations.list",
          + "compute.resourcePolicies.get",
          + "compute.resourcePolicies.list",
          + "compute.routers.get",
          + "compute.routers.list",
          + "compute.routes.get",
          + "compute.routes.list",
          + "compute.securityPolicies.get",
          + "compute.securityPolicies.getIamPolicy",
          + "compute.securityPolicies.list",
          + "compute.serviceAttachments.get",
          + "compute.serviceAttachments.list",
          + "compute.snapshots.get",
          + "compute.snapshots.getIamPolicy",
          + "compute.snapshots.list",
          + "compute.sslCertificates.get",
          + "compute.sslCertificates.list",
          + "compute.sslPolicies.get",
          + "compute.sslPolicies.list",
          + "compute.sslPolicies.listAvailableFeatures",
          + "compute.subnetworks.get",
          + "compute.subnetworks.getIamPolicy",
          + "compute.subnetworks.list",
          + "compute.targetGrpcProxies.get",
          + "compute.targetGrpcProxies.list",
          + "compute.targetHttpProxies.get",
          + "compute.targetHttpProxies.list",
          + "compute.targetHttpsProxies.get",
          + "compute.targetHttpsProxies.list",
          + "compute.targetInstances.get",
          + "compute.targetInstances.list",
          + "compute.targetPools.get",
          + "compute.targetPools.list",
          + "compute.targetSslProxies.get",
          + "compute.targetSslProxies.list",
          + "compute.targetTcpProxies.get",
          + "compute.targetTcpProxies.list",
          + "compute.targetVpnGateways.get",
          + "compute.targetVpnGateways.list",
          + "compute.urlMaps.get",
          + "compute.urlMaps.list",
          + "compute.urlMaps.validate",
          + "compute.vpnGateways.get",
          + "compute.vpnGateways.list",
          + "compute.vpnTunnels.get",
          + "compute.vpnTunnels.list",
          + "compute.zoneOperations.get",
          + "compute.zoneOperations.getIamPolicy",
          + "compute.zoneOperations.list",
          + "compute.zones.get",
          + "compute.zones.list",
          + "container.apiServices.get",
          + "container.apiServices.getStatus",
          + "container.apiServices.list",
          + "container.auditSinks.get",
          + "container.auditSinks.list",
          + "container.backendConfigs.get",
          + "container.backendConfigs.list",
          + "container.bindings.get",
          + "container.bindings.list",
          + "container.certificateSigningRequests.get",
          + "container.certificateSigningRequests.getStatus",
          + "container.certificateSigningRequests.list",
          + "container.clusterRoleBindings.get",
          + "container.clusterRoleBindings.list",
          + "container.clusterRoles.get",
          + "container.clusterRoles.list",
          + "container.clusters.get",
          + "container.clusters.list",
          + "container.componentStatuses.get",
          + "container.componentStatuses.list",
          + "container.configMaps.get",
          + "container.configMaps.list",
          + "container.controllerRevisions.get",
          + "container.controllerRevisions.list",
          + "container.cronJobs.get",
          + "container.cronJobs.getStatus",
          + "container.cronJobs.list",
          + "container.csiDrivers.get",
          + "container.csiDrivers.list",
          + "container.csiNodeInfos.get",
          + "container.csiNodeInfos.list",
          + "container.csiNodes.get",
          + "container.csiNodes.list",
          + "container.customResourceDefinitions.get",
          + "container.customResourceDefinitions.getStatus",
          + "container.customResourceDefinitions.list",
          + "container.daemonSets.get",
          + "container.daemonSets.getStatus",
          + "container.daemonSets.list",
          + "container.deployments.get",
          + "container.deployments.getScale",
          + "container.deployments.getStatus",
          + "container.deployments.list",
          + "container.endpointSlices.get",
          + "container.endpointSlices.list",
          + "container.endpoints.get",
          + "container.endpoints.list",
          + "container.events.get",
          + "container.events.list",
          + "container.frontendConfigs.get",
          + "container.frontendConfigs.list",
          + "container.horizontalPodAutoscalers.get",
          + "container.horizontalPodAutoscalers.getStatus",
          + "container.horizontalPodAutoscalers.list",
          + "container.ingresses.get",
          + "container.ingresses.getStatus",
          + "container.ingresses.list",
          + "container.initializerConfigurations.get",
          + "container.initializerConfigurations.list",
          + "container.jobs.get",
          + "container.jobs.getStatus",
          + "container.jobs.list",
          + "container.leases.get",
          + "container.leases.list",
          + "container.limitRanges.get",
          + "container.limitRanges.list",
          + "container.managedCertificates.get",
          + "container.managedCertificates.list",
          + "container.mutatingWebhookConfigurations.get",
          + "container.mutatingWebhookConfigurations.list",
          + "container.namespaces.get",
          + "container.namespaces.getStatus",
          + "container.namespaces.list",
          + "container.networkPolicies.get",
          + "container.networkPolicies.list",
          + "container.nodes.get",
          + "container.nodes.getStatus",
          + "container.nodes.list",
          + "container.operations.get",
          + "container.operations.list",
          + "container.persistentVolumeClaims.get",
          + "container.persistentVolumeClaims.getStatus",
          + "container.persistentVolumeClaims.list",
          + "container.persistentVolumes.get",
          + "container.persistentVolumes.getStatus",
          + "container.persistentVolumes.list",
          + "container.petSets.get",
          + "container.petSets.list",
          + "container.podDisruptionBudgets.get",
          + "container.podDisruptionBudgets.getStatus",
          + "container.podDisruptionBudgets.list",
          + "container.podPresets.get",
          + "container.podPresets.list",
          + "container.podSecurityPolicies.get",
          + "container.podSecurityPolicies.list",
          + "container.podTemplates.get",
          + "container.podTemplates.list",
          + "container.pods.get",
          + "container.pods.getStatus",
          + "container.pods.list",
          + "container.priorityClasses.get",
          + "container.priorityClasses.list",
          + "container.replicaSets.get",
          + "container.replicaSets.getScale",
          + "container.replicaSets.getStatus",
          + "container.replicaSets.list",
          + "container.replicationControllers.get",
          + "container.replicationControllers.getScale",
          + "container.replicationControllers.getStatus",
          + "container.replicationControllers.list",
          + "container.resourceQuotas.get",
          + "container.resourceQuotas.getStatus",
          + "container.resourceQuotas.list",
          + "container.roleBindings.get",
          + "container.roleBindings.list",
          + "container.roles.get",
          + "container.roles.list",
          + "container.runtimeClasses.get",
          + "container.runtimeClasses.list",
          + "container.scheduledJobs.get",
          + "container.scheduledJobs.list",
          + "container.serviceAccounts.get",
          + "container.serviceAccounts.list",
          + "container.services.get",
          + "container.services.getStatus",
          + "container.services.list",
          + "container.statefulSets.get",
          + "container.statefulSets.getScale",
          + "container.statefulSets.getStatus",
          + "container.statefulSets.list",
          + "container.storageClasses.get",
          + "container.storageClasses.list",
          + "container.storageStates.get",
          + "container.storageStates.getStatus",
          + "container.storageStates.list",
          + "container.storageVersionMigrations.get",
          + "container.storageVersionMigrations.getStatus",
          + "container.storageVersionMigrations.list",
          + "container.thirdPartyObjects.get",
          + "container.thirdPartyObjects.list",
          + "container.thirdPartyResources.get",
          + "container.thirdPartyResources.list",
          + "container.tokenReviews.create",
          + "container.updateInfos.get",
          + "container.updateInfos.list",
          + "container.validatingWebhookConfigurations.get",
          + "container.validatingWebhookConfigurations.list",
          + "container.volumeAttachments.get",
          + "container.volumeAttachments.getStatus",
          + "container.volumeAttachments.list",
          + "container.volumeSnapshotClasses.get",
          + "container.volumeSnapshotClasses.list",
          + "container.volumeSnapshotContents.get",
          + "container.volumeSnapshotContents.getStatus",
          + "container.volumeSnapshotContents.list",
          + "container.volumeSnapshots.get",
          + "container.volumeSnapshots.list",
          + "logging.buckets.get",
          + "logging.buckets.list",
          + "logging.exclusions.get",
          + "logging.exclusions.list",
          + "logging.locations.get",
          + "logging.locations.list",
          + "logging.logEntries.list",
          + "logging.logMetrics.get",
          + "logging.logMetrics.list",
          + "logging.logServiceIndexes.list",
          + "logging.logServices.list",
          + "logging.logs.list",
          + "logging.privateLogEntries.list",
          + "logging.queries.create",
          + "logging.queries.delete",
          + "logging.queries.get",
          + "logging.queries.list",
          + "logging.queries.listShared",
          + "logging.queries.update",
          + "logging.sinks.get",
          + "logging.sinks.list",
          + "logging.usage.get",
          + "logging.views.access",
          + "logging.views.get",
          + "logging.views.list",
          + "orgpolicy.constraints.list",
          + "orgpolicy.policies.list",
          + "orgpolicy.policy.get",
          + "resourcemanager.folders.get",
          + "resourcemanager.organizations.get",
          + "resourcemanager.projects.get",
          + "resourcemanager.projects.list",
          + "securitycenter.assets.group",
          + "securitycenter.assets.list",
          + "securitycenter.assets.listAssetPropertyNames",
          + "securitycenter.assets.runDiscovery",
          + "securitycenter.assetsecuritymarks.update",
          + "securitycenter.containerthreatdetectionsettings.calculate",
          + "securitycenter.containerthreatdetectionsettings.get",
          + "securitycenter.containerthreatdetectionsettings.update",
          + "securitycenter.eventthreatdetectionsettings.calculate",
          + "securitycenter.eventthreatdetectionsettings.get",
          + "securitycenter.eventthreatdetectionsettings.update",
          + "securitycenter.findings.group",
          + "securitycenter.findings.list",
          + "securitycenter.findings.listFindingPropertyNames",
          + "securitycenter.findings.setState",
          + "securitycenter.findings.setWorkflowState",
          + "securitycenter.findings.update",
          + "securitycenter.findingsecuritymarks.update",
          + "securitycenter.notificationconfig.create",
          + "securitycenter.notificationconfig.delete",
          + "securitycenter.notificationconfig.get",
          + "securitycenter.notificationconfig.list",
          + "securitycenter.notificationconfig.update",
          + "securitycenter.organizationsettings.get",
          + "securitycenter.organizationsettings.update",
          + "securitycenter.securitycentersettings.get",
          + "securitycenter.securitycentersettings.update",
          + "securitycenter.securityhealthanalyticssettings.calculate",
          + "securitycenter.securityhealthanalyticssettings.get",
          + "securitycenter.securityhealthanalyticssettings.update",
          + "securitycenter.sources.get",
          + "securitycenter.sources.getIamPolicy",
          + "securitycenter.sources.list",
          + "securitycenter.sources.setIamPolicy",
          + "securitycenter.sources.update",
          + "securitycenter.subscription.get",
          + "securitycenter.userinterfacemetadata.get",
          + "securitycenter.websecurityscannersettings.calculate",
          + "securitycenter.websecurityscannersettings.get",
          + "securitycenter.websecurityscannersettings.update",
          + "serviceusage.quotas.get",
          + "serviceusage.services.get",
          + "serviceusage.services.list",
        ]

*/


/*##################################
  Custom Role Infosec Audit
*/##################################

/* permission for infosec audit 

 permissions = [
          + "accessapproval.requests.list",
          + "accesscontextmanager.accessLevels.list",
          + "accesscontextmanager.accessPolicies.getIamPolicy",
          + "accesscontextmanager.accessPolicies.list",
          + "accesscontextmanager.accessZones.list",
          + "accesscontextmanager.gcpUserAccessBindings.list",
          + "accesscontextmanager.policies.getIamPolicy",
          + "accesscontextmanager.policies.list",
          + "accesscontextmanager.servicePerimeters.list",
          + "actions.agentVersions.list",
          + "aiplatform.annotationSpecs.list",
          + "aiplatform.annotations.list",
          + "aiplatform.artifacts.list",
          + "aiplatform.batchPredictionJobs.list",
          + "aiplatform.contexts.list",
          + "aiplatform.customJobs.list",
          + "aiplatform.dataItems.list",
          + "aiplatform.dataLabelingJobs.list",
          + "aiplatform.datasets.list",
          + "aiplatform.edgeDeploymentJobs.list",
          + "aiplatform.edgeDevices.list",
          + "aiplatform.endpoints.list",
          + "aiplatform.entityTypes.list",
          + "aiplatform.executions.list",
          + "aiplatform.features.list",
          + "aiplatform.featurestores.list",
          + "aiplatform.humanInTheLoops.list",
          + "aiplatform.hyperparameterTuningJobs.list",
          + "aiplatform.indexEndpoints.list",
          + "aiplatform.indexes.list",
          + "aiplatform.locations.list",
          + "aiplatform.metadataSchemas.list",
          + "aiplatform.metadataStores.list",
          + "aiplatform.modelDeploymentMonitoringJobs.list",
          + "aiplatform.modelEvaluationSlices.list",
          + "aiplatform.modelEvaluations.list",
          + "aiplatform.models.list",
          + "aiplatform.nasJobs.list",
          + "aiplatform.operations.list",
          + "aiplatform.pipelineJobs.list",
          + "aiplatform.specialistPools.list",
          + "aiplatform.studies.list",
          + "aiplatform.tensorboardExperiments.list",
          + "aiplatform.tensorboardRuns.list",
          + "aiplatform.tensorboardTimeSeries.list",
          + "aiplatform.tensorboards.list",
          + "aiplatform.trainingPipelines.list",
          + "aiplatform.trials.list",
          + "apigateway.apiconfigs.getIamPolicy",
          + "apigateway.apiconfigs.list",
          + "apigateway.apis.getIamPolicy",
          + "apigateway.apis.list",
          + "apigateway.gateways.getIamPolicy",
          + "apigateway.gateways.list",
          + "apigateway.locations.list",
          + "apigateway.operations.list",
          + "apigee.apiproductattributes.list",
          + "apigee.apiproducts.list",
          + "apigee.apps.list",
          + "apigee.archivedeployments.list",
          + "apigee.caches.list",
          + "apigee.datacollectors.list",
          + "apigee.datastores.list",
          + "apigee.deployments.list",
          + "apigee.developerappattributes.list",
          + "apigee.developerapps.list",
          + "apigee.developerattributes.list",
          + "apigee.developers.list",
          + "apigee.developersubscriptions.list",
          + "apigee.envgroupattachments.list",
          + "apigee.envgroups.list",
          + "apigee.environments.getIamPolicy",
          + "apigee.environments.list",
          + "apigee.exports.list",
          + "apigee.flowhooks.list",
          + "apigee.hostqueries.list",
          + "apigee.hostsecurityreports.list",
          + "apigee.instanceattachments.list",
          + "apigee.instances.list",
          + "apigee.keystorealiases.list",
          + "apigee.keystores.list",
          + "apigee.keyvaluemaps.list",
          + "apigee.operations.list",
          + "apigee.organizations.list",
          + "apigee.portals.list",
          + "apigee.proxies.list",
          + "apigee.proxyrevisions.list",
          + "apigee.queries.list",
          + "apigee.rateplans.list",
          + "apigee.references.list",
          + "apigee.reports.list",
          + "apigee.resourcefiles.list",
          + "apigee.securityreports.list",
          + "apigee.sharedflowrevisions.list",
          + "apigee.sharedflows.list",
          + "apigee.targetservers.list",
          + "apigee.tracesessions.list",
          + "apigeeconnect.connections.list",
          + "apikeys.keys.list",
          + "appengine.instances.list",
          + "appengine.memcache.list",
          + "appengine.operations.list",
          + "appengine.services.list",
          + "appengine.versions.list",
          + "artifactregistry.files.list",
          + "artifactregistry.packages.list",
          + "artifactregistry.repositories.getIamPolicy",
          + "artifactregistry.repositories.list",
          + "artifactregistry.tags.list",
          + "artifactregistry.versions.list",
          + "assuredworkloads.operations.list",
          + "assuredworkloads.workload.list",
          + "automl.annotationSpecs.list",
          + "automl.annotations.list",
          + "automl.columnSpecs.list",
          + "automl.datasets.getIamPolicy",
          + "automl.datasets.list",
          + "automl.examples.list",
          + "automl.humanAnnotationTasks.list",
          + "automl.locations.getIamPolicy",
          + "automl.locations.list",
          + "automl.modelEvaluations.list",
          + "automl.models.getIamPolicy",
          + "automl.models.list",
          + "automl.operations.list",
          + "automl.tableSpecs.list",
          + "automlrecommendations.apiKeys.list",
          + "automlrecommendations.catalogItems.list",
          + "automlrecommendations.catalogs.list",
          + "automlrecommendations.events.list",
          + "automlrecommendations.placements.list",
          + "automlrecommendations.recommendations.list",
          + "autoscaling.sites.getIamPolicy",
          + "baremetalsolution.instances.list",
          + "bigquery.capacityCommitments.list",
          + "bigquery.connections.getIamPolicy",
          + "bigquery.connections.list",
          + "bigquery.datasets.getIamPolicy",
          + "bigquery.jobs.list",
          + "bigquery.models.list",
          + "bigquery.reservationAssignments.list",
          + "bigquery.reservations.list",
          + "bigquery.routines.list",
          + "bigquery.rowAccessPolicies.getIamPolicy",
          + "bigquery.rowAccessPolicies.list",
          + "bigquery.savedqueries.list",
          + "bigquery.tables.getIamPolicy",
          + "bigquery.tables.list",
          + "bigtable.appProfiles.list",
          + "bigtable.backups.getIamPolicy",
          + "bigtable.backups.list",
          + "bigtable.clusters.list",
          + "bigtable.instances.getIamPolicy",
          + "bigtable.instances.list",
          + "bigtable.keyvisualizer.list",
          + "bigtable.locations.list",
          + "bigtable.tables.getIamPolicy",
          + "bigtable.tables.list",
          + "billing.accounts.getIamPolicy",
          + "billing.accounts.list",
          + "billing.budgets.list",
          + "billing.credits.list",
          + "billing.resourceAssociations.list",
          + "billing.subscriptions.list",
          + "binaryauthorization.attestors.getIamPolicy",
          + "binaryauthorization.attestors.list",
          + "binaryauthorization.continuousValidationConfig.getIamPolicy",
          + "binaryauthorization.policy.getIamPolicy",
          + "clientauthconfig.brands.list",
          + "clientauthconfig.clients.list",
          + "cloudasset.feeds.list",
          + "cloudbuild.builds.list",
          + "cloudbuild.workerpools.list",
          + "clouddebugger.breakpoints.list",
          + "clouddebugger.debuggees.list",
          + "clouddeploy.deliveryPipelines.getIamPolicy",
          + "clouddeploy.deliveryPipelines.list",
          + "clouddeploy.locations.list",
          + "clouddeploy.operations.list",
          + "clouddeploy.releases.list",
          + "clouddeploy.rollouts.list",
          + "clouddeploy.targets.getIamPolicy",
          + "clouddeploy.targets.list",
          + "cloudfunctions.functions.getIamPolicy",
          + "cloudfunctions.functions.list",
          + "cloudfunctions.locations.list",
          + "cloudfunctions.operations.list",
          + "cloudiot.devices.list",
          + "cloudiot.registries.getIamPolicy",
          + "cloudiot.registries.list",
          + "cloudjobdiscovery.companies.list",
          + "cloudkms.cryptoKeyVersions.list",
          + "cloudkms.cryptoKeys.getIamPolicy",
          + "cloudkms.cryptoKeys.list",
          + "cloudkms.importJobs.getIamPolicy",
          + "cloudkms.importJobs.list",
          + "cloudkms.keyRings.getIamPolicy",
          + "cloudkms.keyRings.list",
          + "cloudkms.locations.list",
          + "cloudnotifications.activities.list",
          + "cloudprivatecatalogproducer.associations.list",
          + "cloudprivatecatalogproducer.catalogAssociations.list",
          + "cloudprivatecatalogproducer.catalogs.getIamPolicy",
          + "cloudprivatecatalogproducer.catalogs.list",
          + "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
          + "cloudprivatecatalogproducer.producerCatalogs.list",
          + "cloudprivatecatalogproducer.products.getIamPolicy",
          + "cloudprivatecatalogproducer.products.list",
          + "cloudprofiler.profiles.list",
          + "cloudscheduler.jobs.list",
          + "cloudscheduler.locations.list",
          + "cloudsecurityscanner.crawledurls.list",
          + "cloudsecurityscanner.results.list",
          + "cloudsecurityscanner.scanruns.list",
          + "cloudsecurityscanner.scans.list",
          + "cloudsql.backupRuns.list",
          + "cloudsql.databases.list",
          + "cloudsql.instances.list",
          + "cloudsql.sslCerts.list",
          + "cloudsql.users.list",
          + "cloudsupport.accounts.getIamPolicy",
          + "cloudsupport.accounts.list",
          + "cloudsupport.techCases.list",
          + "cloudtasks.locations.list",
          + "cloudtasks.queues.getIamPolicy",
          + "cloudtasks.queues.list",
          + "cloudtasks.tasks.list",
          + "cloudtoolresults.executions.list",
          + "cloudtoolresults.histories.list",
          + "cloudtoolresults.steps.list",
          + "cloudtrace.insights.list",
          + "cloudtrace.tasks.list",
          + "cloudtrace.traces.list",
          + "cloudtranslate.glossaries.list",
          + "cloudtranslate.locations.list",
          + "cloudtranslate.operations.list",
          + "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
          + "cloudvolumesgcp-api.netapp.com/ipRanges.list",
          + "cloudvolumesgcp-api.netapp.com/jobs.list",
          + "cloudvolumesgcp-api.netapp.com/regions.list",
          + "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
          + "cloudvolumesgcp-api.netapp.com/snapshots.list",
          + "cloudvolumesgcp-api.netapp.com/volumes.list",
          + "commerceprice.privateoffers.list",
          + "composer.environments.list",
          + "composer.imageversions.list",
          + "composer.operations.list",
          + "compute.acceleratorTypes.list",
          + "compute.addresses.list",
          + "compute.autoscalers.list",
          + "compute.backendBuckets.list",
          + "compute.backendServices.getIamPolicy",
          + "compute.backendServices.list",
          + "compute.commitments.list",
          + "compute.diskTypes.list",
          + "compute.disks.getIamPolicy",
          + "compute.disks.list",
          + "compute.externalVpnGateways.list",
          + "compute.firewallPolicies.getIamPolicy",
          + "compute.firewallPolicies.list",
          + "compute.firewalls.list",
          + "compute.forwardingRules.list",
          + "compute.globalAddresses.list",
          + "compute.globalForwardingRules.list",
          + "compute.globalNetworkEndpointGroups.list",
          + "compute.globalOperations.getIamPolicy",
          + "compute.globalOperations.list",
          + "compute.globalPublicDelegatedPrefixes.list",
          + "compute.healthChecks.list",
          + "compute.httpHealthChecks.list",
          + "compute.httpsHealthChecks.list",
          + "compute.images.getIamPolicy",
          + "compute.images.list",
          + "compute.instanceGroupManagers.list",
          + "compute.instanceGroups.list",
          + "compute.instanceTemplates.getIamPolicy",
          + "compute.instanceTemplates.list",
          + "compute.instances.getIamPolicy",
          + "compute.instances.list",
          + "compute.interconnectAttachments.list",
          + "compute.interconnectLocations.list",
          + "compute.interconnects.list",
          + "compute.licenseCodes.getIamPolicy",
          + "compute.licenseCodes.list",
          + "compute.licenses.getIamPolicy",
          + "compute.licenses.list",
          + "compute.machineImages.getIamPolicy",
          + "compute.machineImages.list",
          + "compute.machineTypes.list",
          + "compute.maintenancePolicies.getIamPolicy",
          + "compute.maintenancePolicies.list",
          + "compute.networkEndpointGroups.getIamPolicy",
          + "compute.networkEndpointGroups.list",
          + "compute.networks.list",
          + "compute.nodeGroups.getIamPolicy",
          + "compute.nodeGroups.list",
          + "compute.nodeTemplates.getIamPolicy",
          + "compute.nodeTemplates.list",
          + "compute.nodeTypes.list",
          + "compute.publicAdvertisedPrefixes.list",
          + "compute.publicDelegatedPrefixes.list",
          + "compute.regionBackendServices.getIamPolicy",
          + "compute.regionBackendServices.list",
          + "compute.regionHealthCheckServices.list",
          + "compute.regionHealthChecks.list",
          + "compute.regionNetworkEndpointGroups.list",
          + "compute.regionNotificationEndpoints.list",
          + "compute.regionOperations.getIamPolicy",
          + "compute.regionOperations.list",
          + "compute.regionSslCertificates.list",
          + "compute.regionTargetHttpProxies.list",
          + "compute.regionTargetHttpsProxies.list",
          + "compute.regionUrlMaps.list",
          + "compute.regions.list",
          + "compute.reservations.list",
          + "compute.resourcePolicies.list",
          + "compute.routers.list",
          + "compute.routes.list",
          + "compute.securityPolicies.getIamPolicy",
          + "compute.securityPolicies.list",
          + "compute.serviceAttachments.list",
          + "compute.snapshots.getIamPolicy",
          + "compute.snapshots.list",
          + "compute.sslCertificates.list",
          + "compute.sslPolicies.list",
          + "compute.subnetworks.getIamPolicy",
          + "compute.subnetworks.list",
          + "compute.targetGrpcProxies.list",
          + "compute.targetHttpProxies.list",
          + "compute.targetHttpsProxies.list",
          + "compute.targetInstances.list",
          + "compute.targetPools.list",
          + "compute.targetSslProxies.list",
          + "compute.targetTcpProxies.list",
          + "compute.targetVpnGateways.list",
          + "compute.urlMaps.list",
          + "compute.vpnGateways.list",
          + "compute.vpnTunnels.list",
          + "compute.zoneOperations.getIamPolicy",
          + "compute.zoneOperations.list",
          + "compute.zones.list",
          + "connectors.connections.getIamPolicy",
          + "connectors.connections.list",
          + "connectors.connectors.list",
          + "connectors.locations.list",
          + "connectors.operations.list",
          + "connectors.providers.list",
          + "connectors.versions.list",
          + "consumerprocurement.accounts.list",
          + "consumerprocurement.entitlements.list",
          + "consumerprocurement.freeTrials.list",
          + "consumerprocurement.orders.list",
          + "contactcenterinsights.analyses.list",
          + "contactcenterinsights.conversations.list",
          + "contactcenterinsights.issueModels.list",
          + "contactcenterinsights.issues.list",
          + "contactcenterinsights.operations.list",
          + "contactcenterinsights.phraseMatchers.list",
          + "container.apiServices.list",
          + "container.auditSinks.list",
          + "container.backendConfigs.list",
          + "container.bindings.list",
          + "container.certificateSigningRequests.list",
          + "container.clusterRoleBindings.list",
          + "container.clusterRoles.list",
          + "container.clusters.list",
          + "container.componentStatuses.list",
          + "container.configMaps.list",
          + "container.controllerRevisions.list",
          + "container.cronJobs.list",
          + "container.csiDrivers.list",
          + "container.csiNodeInfos.list",
          + "container.csiNodes.list",
          + "container.customResourceDefinitions.list",
          + "container.daemonSets.list",
          + "container.deployments.list",
          + "container.endpointSlices.list",
          + "container.endpoints.list",
          + "container.events.list",
          + "container.frontendConfigs.list",
          + "container.horizontalPodAutoscalers.list",
          + "container.ingresses.list",
          + "container.initializerConfigurations.list",
          + "container.jobs.list",
          + "container.leases.list",
          + "container.limitRanges.list",
          + "container.localSubjectAccessReviews.list",
          + "container.managedCertificates.list",
          + "container.mutatingWebhookConfigurations.list",
          + "container.namespaces.list",
          + "container.networkPolicies.list",
          + "container.nodes.list",
          + "container.operations.list",
          + "container.persistentVolumeClaims.list",
          + "container.persistentVolumes.list",
          + "container.petSets.list",
          + "container.podDisruptionBudgets.list",
          + "container.podPresets.list",
          + "container.podSecurityPolicies.list",
          + "container.podTemplates.list",
          + "container.pods.list",
          + "container.priorityClasses.list",
          + "container.replicaSets.list",
          + "container.replicationControllers.list",
          + "container.resourceQuotas.list",
          + "container.roleBindings.list",
          + "container.roles.list",
          + "container.runtimeClasses.list",
          + "container.scheduledJobs.list",
          + "container.selfSubjectAccessReviews.list",
          + "container.serviceAccounts.list",
          + "container.services.list",
          + "container.statefulSets.list",
          + "container.storageClasses.list",
          + "container.storageStates.list",
          + "container.storageVersionMigrations.list",
          + "container.subjectAccessReviews.list",
          + "container.thirdPartyObjects.list",
          + "container.thirdPartyResources.list",
          + "container.updateInfos.list",
          + "container.validatingWebhookConfigurations.list",
          + "container.volumeAttachments.list",
          + "container.volumeSnapshotClasses.list",
          + "container.volumeSnapshotContents.list",
          + "container.volumeSnapshots.list",
          + "containeranalysis.notes.getIamPolicy",
          + "containeranalysis.notes.list",
          + "containeranalysis.occurrences.getIamPolicy",
          + "containeranalysis.occurrences.list",
          + "datacatalog.categories.getIamPolicy",
          + "datacatalog.entries.getIamPolicy",
          + "datacatalog.entries.list",
          + "datacatalog.entryGroups.getIamPolicy",
          + "datacatalog.entryGroups.list",
          + "datacatalog.tagTemplates.getIamPolicy",
          + "datacatalog.taxonomies.getIamPolicy",
          + "datacatalog.taxonomies.list",
          + "dataflow.jobs.list",
          + "dataflow.messages.list",
          + "dataflow.snapshots.list",
          + "datafusion.instances.getIamPolicy",
          + "datafusion.instances.list",
          + "datafusion.locations.list",
          + "datafusion.operations.list",
          + "datalabeling.annotateddatasets.list",
          + "datalabeling.annotationspecsets.list",
          + "datalabeling.dataitems.list",
          + "datalabeling.datasets.list",
          + "datalabeling.examples.list",
          + "datalabeling.instructions.list",
          + "datalabeling.operations.list",
          + "datamigration.connectionprofiles.getIamPolicy",
          + "datamigration.connectionprofiles.list",
          + "datamigration.locations.list",
          + "datamigration.migrationjobs.getIamPolicy",
          + "datamigration.migrationjobs.list",
          + "datamigration.operations.list",
          + "datapipelines.pipelines.list",
          + "dataproc.agents.list",
          + "dataproc.autoscalingPolicies.getIamPolicy",
          + "dataproc.autoscalingPolicies.list",
          + "dataproc.clusters.getIamPolicy",
          + "dataproc.clusters.list",
          + "dataproc.jobs.getIamPolicy",
          + "dataproc.jobs.list",
          + "dataproc.operations.getIamPolicy",
          + "dataproc.operations.list",
          + "dataproc.workflowTemplates.getIamPolicy",
          + "dataproc.workflowTemplates.list",
          + "dataprocessing.datasources.list",
          + "dataprocessing.featurecontrols.list",
          + "dataprocessing.groupcontrols.list",
          + "datastore.entities.list",
          + "datastore.indexes.list",
          + "datastore.locations.list",
          + "datastore.namespaces.list",
          + "datastore.operations.list",
          + "datastore.statistics.list",
          + "datastream.connectionProfiles.getIamPolicy",
          + "datastream.connectionProfiles.list",
          + "datastream.locations.list",
          + "datastream.operations.list",
          + "datastream.privateConnections.getIamPolicy",
          + "datastream.privateConnections.list",
          + "datastream.routes.getIamPolicy",
          + "datastream.routes.list",
          + "datastream.streams.getIamPolicy",
          + "datastream.streams.list",
          + "deploymentmanager.compositeTypes.list",
          + "deploymentmanager.deployments.getIamPolicy",
          + "deploymentmanager.deployments.list",
          + "deploymentmanager.manifests.list",
          + "deploymentmanager.operations.list",
          + "deploymentmanager.resources.list",
          + "deploymentmanager.typeProviders.list",
          + "deploymentmanager.types.list",
          + "dialogflow.agents.list",
          + "dialogflow.answerrecords.list",
          + "dialogflow.callMatchers.list",
          + "dialogflow.changelogs.list",
          + "dialogflow.contexts.list",
          + "dialogflow.conversationDatasets.list",
          + "dialogflow.conversationModels.list",
          + "dialogflow.conversationProfiles.list",
          + "dialogflow.conversations.list",
          + "dialogflow.documents.list",
          + "dialogflow.entityTypes.list",
          + "dialogflow.environments.list",
          + "dialogflow.flows.list",
          + "dialogflow.intents.list",
          + "dialogflow.knowledgeBases.list",
          + "dialogflow.messages.list",
          + "dialogflow.modelEvaluations.list",
          + "dialogflow.pages.list",
          + "dialogflow.participants.list",
          + "dialogflow.phoneNumberOrders.list",
          + "dialogflow.phoneNumbers.list",
          + "dialogflow.securitySettings.list",
          + "dialogflow.sessionEntityTypes.list",
          + "dialogflow.smartMessagingEntries.list",
          + "dialogflow.transitionRouteGroups.list",
          + "dialogflow.versions.list",
          + "dialogflow.webhooks.list",
          + "dlp.analyzeRiskTemplates.list",
          + "dlp.columnDataProfiles.list",
          + "dlp.deidentifyTemplates.list",
          + "dlp.estimates.list",
          + "dlp.inspectFindings.list",
          + "dlp.inspectTemplates.list",
          + "dlp.jobTriggers.list",
          + "dlp.jobs.list",
          + "dlp.projectDataProfiles.list",
          + "dlp.storedInfoTypes.list",
          + "dlp.tableDataProfiles.list",
          + "dns.changes.list",
          + "dns.dnsKeys.list",
          + "dns.managedZoneOperations.list",
          + "dns.managedZones.list",
          + "dns.policies.getIamPolicy",
          + "dns.policies.list",
          + "dns.resourceRecordSets.list",
          + "dns.responsePolicies.list",
          + "dns.responsePolicyRules.list",
          + "documentai.evaluations.list",
          + "documentai.labelerPools.list",
          + "documentai.locations.list",
          + "documentai.processorTypes.list",
          + "documentai.processorVersions.list",
          + "documentai.processors.list",
          + "domains.locations.list",
          + "domains.operations.list",
          + "earlyaccesscenter.campaigns.list",
          + "earlyaccesscenter.customerAllowlists.list",
          + "earthengine.assets.getIamPolicy",
          + "earthengine.assets.list",
          + "earthengine.operations.list",
          + "errorreporting.applications.list",
          + "errorreporting.errorEvents.list",
          + "errorreporting.groups.list",
          + "essentialcontacts.contacts.list",
          + "eventarc.locations.list",
          + "eventarc.operations.list",
          + "eventarc.triggers.getIamPolicy",
          + "eventarc.triggers.list",
          + "fcmdata.deliverydata.list",
          + "file.backups.list",
          + "file.instances.list",
          + "file.locations.list",
          + "file.operations.list",
          + "file.snapshots.list",
          + "firebase.clients.list",
          + "firebase.links.list",
          + "firebase.playLinks.list",
          + "firebaseabt.experiments.list",
          + "firebaseappdistro.groups.list",
          + "firebaseappdistro.releases.list",
          + "firebaseappdistro.testers.list",
          + "firebasecrashlytics.issues.list",
          + "firebasedatabase.instances.list",
          + "firebasedynamiclinks.destinations.list",
          + "firebasedynamiclinks.domains.list",
          + "firebasedynamiclinks.links.list",
          + "firebaseextensions.configs.list",
          + "firebasehosting.sites.list",
          + "firebaseinappmessaging.campaigns.list",
          + "firebaseml.compressionjobs.list",
          + "firebaseml.models.list",
          + "firebaseml.modelversions.list",
          + "firebasenotifications.messages.list",
          + "firebasepredictions.predictions.list",
          + "firebaserules.releases.list",
          + "firebaserules.rulesets.list",
          + "firebasestorage.buckets.list",
          + "fleetengine.vehicles.list",
          + "gameservices.gameServerClusters.list",
          + "gameservices.gameServerConfigs.list",
          + "gameservices.gameServerDeployments.list",
          + "gameservices.locations.list",
          + "gameservices.operations.list",
          + "gameservices.realms.list",
          + "genomics.datasets.getIamPolicy",
          + "genomics.datasets.list",
          + "genomics.operations.list",
          + "gkehub.gateway.getIamPolicy",
          + "gkehub.locations.list",
          + "gkehub.memberships.getIamPolicy",
          + "gkehub.memberships.list",
          + "gkehub.operations.list",
          + "gkemulticloud.awsClusters.list",
          + "gkemulticloud.awsNodePools.list",
          + "gkemulticloud.azureClients.list",
          + "gkemulticloud.azureClusters.list",
          + "gkemulticloud.azureNodePools.list",
          + "gkemulticloud.operations.list",
          + "gsuiteaddons.deployments.list",
          + "healthcare.annotationStores.getIamPolicy",
          + "healthcare.annotationStores.list",
          + "healthcare.annotations.list",
          + "healthcare.attributeDefinitions.list",
          + "healthcare.consentArtifacts.list",
          + "healthcare.consentStores.getIamPolicy",
          + "healthcare.consentStores.list",
          + "healthcare.consents.list",
          + "healthcare.datasets.getIamPolicy",
          + "healthcare.datasets.list",
          + "healthcare.dicomStores.getIamPolicy",
          + "healthcare.dicomStores.list",
          + "healthcare.fhirStores.getIamPolicy",
          + "healthcare.fhirStores.list",
          + "healthcare.hl7V2Messages.list",
          + "healthcare.hl7V2Stores.getIamPolicy",
          + "healthcare.hl7V2Stores.list",
          + "healthcare.locations.list",
          + "healthcare.operations.list",
          + "healthcare.userDataMappings.list",
          + "iam.googleapis.com/workloadIdentityPoolProviders.list",
          + "iam.googleapis.com/workloadIdentityPools.list",
          + "iam.roles.get",
          + "iam.roles.list",
          + "iam.serviceAccountKeys.list",
          + "iam.serviceAccounts.get",
          + "iam.serviceAccounts.getIamPolicy",
          + "iam.serviceAccounts.list",
          + "iap.tunnel.getIamPolicy",
          + "iap.tunnelInstances.getIamPolicy",
          + "iap.tunnelZones.getIamPolicy",
          + "iap.web.getIamPolicy",
          + "iap.webServiceVersions.getIamPolicy",
          + "iap.webServices.getIamPolicy",
          + "iap.webTypes.getIamPolicy",
          + "integrations.apigeeAuthConfigs.list",
          + "integrations.apigeeCertificates.list",
          + "integrations.apigeeExecutions.list",
          + "integrations.apigeeIntegrationVers.list",
          + "integrations.apigeeIntegrations.list",
          + "integrations.apigeeSfdcChannels.list",
          + "integrations.apigeeSfdcInstances.list",
          + "integrations.apigeeSuspensions.list",
          + "integrations.securityAuthConfigs.list",
          + "integrations.securityExecutions.list",
          + "integrations.securityIntegTempVers.list",
          + "integrations.securityIntegrationVers.list",
          + "integrations.securityIntegrations.list",
          + "lifesciences.operations.list",
          + "livestream.channels.list",
          + "livestream.events.list",
          + "livestream.inputs.list",
          + "livestream.locations.list",
          + "livestream.operations.list",
          + "logging.buckets.list",
          + "logging.exclusions.list",
          + "logging.locations.list",
          + "logging.logEntries.list",
          + "logging.logMetrics.list",
          + "logging.logServiceIndexes.list",
          + "logging.logServices.list",
          + "logging.logs.list",
          + "logging.notificationRules.list",
          + "logging.operations.list",
          + "logging.privateLogEntries.list",
          + "logging.queries.list",
          + "logging.sinks.list",
          + "logging.views.list",
          + "managedidentities.domains.getIamPolicy",
          + "managedidentities.domains.list",
          + "managedidentities.locations.list",
          + "managedidentities.operations.list",
          + "managedidentities.peerings.getIamPolicy",
          + "managedidentities.peerings.list",
          + "managedidentities.sqlintegrations.list",
          + "memcache.instances.list",
          + "memcache.locations.list",
          + "memcache.operations.list",
          + "metastore.backups.list",
          + "metastore.imports.list",
          + "metastore.locations.list",
          + "metastore.operations.list",
          + "metastore.services.getIamPolicy",
          + "metastore.services.list",
          + "ml.jobs.getIamPolicy",
          + "ml.jobs.list",
          + "ml.locations.list",
          + "ml.models.getIamPolicy",
          + "ml.models.list",
          + "ml.operations.list",
          + "ml.studies.getIamPolicy",
          + "ml.studies.list",
          + "ml.trials.list",
          + "ml.versions.list",
          + "monitoring.alertPolicies.list",
          + "monitoring.dashboards.list",
          + "monitoring.groups.list",
          + "monitoring.metricDescriptors.list",
          + "monitoring.monitoredResourceDescriptors.list",
          + "monitoring.notificationChannelDescriptors.list",
          + "monitoring.notificationChannels.list",
          + "monitoring.publicWidgets.list",
          + "monitoring.services.list",
          + "monitoring.slos.list",
          + "monitoring.timeSeries.list",
          + "monitoring.uptimeCheckConfigs.list",
          + "networkconnectivity.hubs.getIamPolicy",
          + "networkconnectivity.hubs.list",
          + "networkconnectivity.locations.list",
          + "networkconnectivity.operations.list",
          + "networkconnectivity.spokes.getIamPolicy",
          + "networkconnectivity.spokes.list",
          + "networkmanagement.connectivitytests.getIamPolicy",
          + "networkmanagement.connectivitytests.list",
          + "networkmanagement.locations.list",
          + "networkmanagement.operations.list",
          + "networksecurity.authorizationPolicies.getIamPolicy",
          + "networksecurity.authorizationPolicies.list",
          + "networksecurity.clientTlsPolicies.getIamPolicy",
          + "networksecurity.clientTlsPolicies.list",
          + "networksecurity.locations.list",
          + "networksecurity.operations.list",
          + "networksecurity.serverTlsPolicies.getIamPolicy",
          + "networksecurity.serverTlsPolicies.list",
          + "networkservices.endpointConfigSelectors.getIamPolicy",
          + "networkservices.endpointConfigSelectors.list",
          + "networkservices.endpointPolicies.getIamPolicy",
          + "networkservices.endpointPolicies.list",
          + "networkservices.httpFilters.getIamPolicy",
          + "networkservices.httpFilters.list",
          + "networkservices.httpfilters.getIamPolicy",
          + "networkservices.httpfilters.list",
          + "networkservices.locations.list",
          + "networkservices.operations.list",
          + "notebooks.environments.getIamPolicy",
          + "notebooks.environments.list",
          + "notebooks.executions.getIamPolicy",
          + "notebooks.executions.list",
          + "notebooks.instances.getIamPolicy",
          + "notebooks.instances.list",
          + "notebooks.locations.list",
          + "notebooks.operations.list",
          + "notebooks.runtimes.getIamPolicy",
          + "notebooks.runtimes.list",
          + "notebooks.schedules.getIamPolicy",
          + "notebooks.schedules.list",
          + "ondemandscanning.operations.list",
          + "opsconfigmonitoring.resourceMetadata.list",
          + "orgpolicy.constraints.list",
          + "orgpolicy.policies.list",
          + "osconfig.guestPolicies.list",
          + "osconfig.instanceOSPoliciesCompliances.list",
          + "osconfig.inventories.list",
          + "osconfig.osPolicyAssignmentReports.list",
          + "osconfig.osPolicyAssignments.list",
          + "osconfig.patchDeployments.list",
          + "osconfig.patchJobs.list",
          + "osconfig.vulnerabilityReports.list",
          + "paymentsresellersubscription.products.list",
          + "paymentsresellersubscription.promotions.list",
          + "policysimulator.replayResults.list",
          + "policysimulator.replays.list",
          + "privateca.caPools.getIamPolicy",
          + "privateca.caPools.list",
          + "privateca.certificateAuthorities.getIamPolicy",
          + "privateca.certificateAuthorities.list",
          + "privateca.certificateRevocationLists.getIamPolicy",
          + "privateca.certificateRevocationLists.list",
          + "privateca.certificateTemplates.getIamPolicy",
          + "privateca.certificateTemplates.list",
          + "privateca.certificates.getIamPolicy",
          + "privateca.certificates.list",
          + "privateca.locations.list",
          + "privateca.operations.list",
          + "privateca.reusableConfigs.getIamPolicy",
          + "privateca.reusableConfigs.list",
          + "proximitybeacon.attachments.list",
          + "proximitybeacon.beacons.getIamPolicy",
          + "proximitybeacon.beacons.list",
          + "proximitybeacon.namespaces.getIamPolicy",
          + "proximitybeacon.namespaces.list",
          + "pubsub.schemas.getIamPolicy",
          + "pubsub.schemas.list",
          + "pubsub.snapshots.getIamPolicy",
          + "pubsub.snapshots.list",
          + "pubsub.subscriptions.getIamPolicy",
          + "pubsub.subscriptions.list",
          + "pubsub.topics.getIamPolicy",
          + "pubsub.topics.list",
          + "pubsublite.operations.list",
          + "pubsublite.reservations.list",
          + "pubsublite.subscriptions.list",
          + "pubsublite.topics.list",
          + "recaptchaenterprise.keys.list",
          + "recaptchaenterprise.relatedaccountgroupmemberships.list",
          + "recaptchaenterprise.relatedaccountgroups.list",
          + "recommender.bigqueryCapacityCommitmentsInsights.list",
          + "recommender.bigqueryCapacityCommitmentsRecommendations.list",
          + "recommender.cloudAssetInsights.list",
          + "recommender.cloudsqlIdleInstanceRecommendations.list",
          + "recommender.cloudsqlInstanceActivityInsights.list",
          + "recommender.cloudsqlInstanceCpuUsageInsights.list",
          + "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
          + "recommender.cloudsqlInstanceMemoryUsageInsights.list",
          + "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
          + "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
          + "recommender.commitmentUtilizationInsights.list",
          + "recommender.computeAddressIdleResourceInsights.list",
          + "recommender.computeAddressIdleResourceRecommendations.list",
          + "recommender.computeDiskIdleResourceInsights.list",
          + "recommender.computeDiskIdleResourceRecommendations.list",
          + "recommender.computeFirewallInsights.list",
          + "recommender.computeImageIdleResourceInsights.list",
          + "recommender.computeImageIdleResourceRecommendations.list",
          + "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
          + "recommender.computeInstanceIdleResourceRecommendations.list",
          + "recommender.computeInstanceMachineTypeRecommendations.list",
          + "recommender.iamPolicyInsights.list",
          + "recommender.iamPolicyLateralMovementInsights.list",
          + "recommender.iamPolicyRecommendations.list",
          + "recommender.iamServiceAccountInsights.list",
          + "recommender.locations.list",
          + "recommender.loggingProductSuggestionContainerInsights.list",
          + "recommender.loggingProductSuggestionContainerRecommendations.list",
          + "recommender.monitoringProductSuggestionComputeInsights.list",
          + "recommender.monitoringProductSuggestionComputeRecommendations.list",
          + "recommender.resourcemanagerProjectUtilizationInsights.list",
          + "recommender.resourcemanagerProjectUtilizationRecommendations.list",
          + "recommender.usageCommitmentRecommendations.list",
          + "redis.instances.list",
          + "redis.locations.list",
          + "redis.operations.list",
          + "remotebuildexecution.instances.list",
          + "remotebuildexecution.workerpools.list",
          + "resourcemanager.folders.getIamPolicy",
          + "resourcemanager.folders.list",
          + "resourcemanager.hierarchyNodes.listTagBindings",
          + "resourcemanager.organizations.get",
          + "resourcemanager.organizations.getIamPolicy",
          + "resourcemanager.projects.getIamPolicy",
          + "resourcemanager.projects.list",
          + "resourcemanager.tagKeys.getIamPolicy",
          + "resourcemanager.tagKeys.list",
          + "resourcemanager.tagValues.getIamPolicy",
          + "resourcemanager.tagValues.list",
          + "resourcesettings.settings.list",
          + "retail.catalogs.list",
          + "retail.operations.list",
          + "retail.products.list",
          + "riskmanager.operations.list",
          + "riskmanager.policies.list",
          + "riskmanager.reports.list",
          + "run.configurations.list",
          + "run.locations.list",
          + "run.revisions.list",
          + "run.routes.list",
          + "run.services.getIamPolicy",
          + "run.services.list",
          + "runtimeconfig.configs.getIamPolicy",
          + "runtimeconfig.configs.list",
          + "runtimeconfig.operations.list",
          + "runtimeconfig.variables.getIamPolicy",
          + "runtimeconfig.variables.list",
          + "runtimeconfig.waiters.getIamPolicy",
          + "runtimeconfig.waiters.list",
          + "secretmanager.locations.list",
          + "secretmanager.secrets.getIamPolicy",
          + "secretmanager.secrets.list",
          + "secretmanager.versions.list",
          + "securitycenter.assets.list",
          + "securitycenter.findings.list",
          + "securitycenter.notificationconfig.list",
          + "securitycenter.sources.getIamPolicy",
          + "securitycenter.sources.list",
          + "servicebroker.bindingoperations.list",
          + "servicebroker.bindings.getIamPolicy",
          + "servicebroker.bindings.list",
          + "servicebroker.catalogs.getIamPolicy",
          + "servicebroker.catalogs.list",
          + "servicebroker.instanceoperations.list",
          + "servicebroker.instances.getIamPolicy",
          + "servicebroker.instances.list",
          + "serviceconsumermanagement.tenancyu.list",
          + "servicedirectory.endpoints.getIamPolicy",
          + "servicedirectory.endpoints.list",
          + "servicedirectory.locations.list",
          + "servicedirectory.namespaces.getIamPolicy",
          + "servicedirectory.namespaces.list",
          + "servicedirectory.services.getIamPolicy",
          + "servicedirectory.services.list",
          + "servicemanagement.services.getIamPolicy",
          + "servicemanagement.services.list",
          + "servicenetworking.operations.list",
          + "serviceusage.operations.list",
          + "serviceusage.services.list",
          + "source.repos.getIamPolicy",
          + "source.repos.list",
          + "spanner.backupOperations.list",
          + "spanner.backups.getIamPolicy",
          + "spanner.backups.list",
          + "spanner.databaseOperations.list",
          + "spanner.databases.getIamPolicy",
          + "spanner.databases.list",
          + "spanner.instanceConfigs.list",
          + "spanner.instanceOperations.list",
          + "spanner.instances.getIamPolicy",
          + "spanner.instances.list",
          + "spanner.sessions.list",
          + "speech.customClasses.list",
          + "speech.phraseSets.list",
          + "storage.buckets.getIamPolicy",
          + "storage.buckets.list",
          + "storage.hmacKeys.list",
          + "storage.multipartUploads.list",
          + "storage.objects.getIamPolicy",
          + "storage.objects.list",
          + "storagetransfer.agentpools.list",
          + "storagetransfer.jobs.list",
          + "storagetransfer.operations.list",
          + "tpu.acceleratortypes.list",
          + "tpu.locations.list",
          + "tpu.nodes.list",
          + "tpu.operations.list",
          + "tpu.tensorflowversions.list",
          + "transcoder.jobTemplates.list",
          + "transcoder.jobs.list",
          + "translationhub.portals.list",
          + "visualinspection.annotationSets.list",
          + "visualinspection.annotationSpecs.list",
          + "visualinspection.annotations.list",
          + "visualinspection.datasets.list",
          + "visualinspection.images.list",
          + "visualinspection.locations.list",
          + "visualinspection.modelEvaluations.list",
          + "visualinspection.models.list",
          + "visualinspection.modules.list",
          + "visualinspection.operations.list",
          + "visualinspection.solutionArtifacts.list",
          + "visualinspection.solutions.list",
          + "vmmigration.cloneJobs.list",
          + "vmmigration.cutoverJobs.list",
          + "vmmigration.datacenterConnectors.list",
          + "vmmigration.deployments.list",
          + "vmmigration.groups.list",
          + "vmmigration.locations.list",
          + "vmmigration.migratingVms.list",
          + "vmmigration.operations.list",
          + "vmmigration.sources.list",
          + "vmmigration.targets.list",
          + "vmmigration.utilizationReports.list",
          + "vpcaccess.connectors.list",
          + "vpcaccess.locations.list",
          + "vpcaccess.operations.list",
          + "workflows.executions.list",
          + "workflows.locations.list",
          + "workflows.operations.list",
          + "workflows.workflows.getIamPolicy",
          + "workflows.workflows.list",
        ]
*/

/*##################################
  Custom Role IAM Poweruser
*/##################################

/* permission for iam poweruser 

permissions = [
          + "accessapproval.requests.list",
          + "accesscontextmanager.accessLevels.list",
          + "accesscontextmanager.accessPolicies.getIamPolicy",
          + "accesscontextmanager.accessPolicies.list",
          + "accesscontextmanager.accessZones.list",
          + "accesscontextmanager.gcpUserAccessBindings.list",
          + "accesscontextmanager.policies.getIamPolicy",
          + "accesscontextmanager.policies.list",
          + "accesscontextmanager.servicePerimeters.list",
          + "actions.agentVersions.list",
          + "aiplatform.annotationSpecs.list",
          + "aiplatform.annotations.list",
          + "aiplatform.artifacts.list",
          + "aiplatform.batchPredictionJobs.list",
          + "aiplatform.contexts.list",
          + "aiplatform.customJobs.list",
          + "aiplatform.dataItems.list",
          + "aiplatform.dataLabelingJobs.list",
          + "aiplatform.datasets.list",
          + "aiplatform.edgeDeploymentJobs.list",
          + "aiplatform.edgeDevices.list",
          + "aiplatform.endpoints.list",
          + "aiplatform.entityTypes.list",
          + "aiplatform.executions.list",
          + "aiplatform.features.list",
          + "aiplatform.featurestores.list",
          + "aiplatform.humanInTheLoops.list",
          + "aiplatform.hyperparameterTuningJobs.list",
          + "aiplatform.indexEndpoints.list",
          + "aiplatform.indexes.list",
          + "aiplatform.locations.list",
          + "aiplatform.metadataSchemas.list",
          + "aiplatform.metadataStores.list",
          + "aiplatform.modelDeploymentMonitoringJobs.list",
          + "aiplatform.modelEvaluationSlices.list",
          + "aiplatform.modelEvaluations.list",
          + "aiplatform.models.list",
          + "aiplatform.nasJobs.list",
          + "aiplatform.operations.list",
          + "aiplatform.pipelineJobs.list",
          + "aiplatform.specialistPools.list",
          + "aiplatform.studies.list",
          + "aiplatform.tensorboardExperiments.list",
          + "aiplatform.tensorboardRuns.list",
          + "aiplatform.tensorboardTimeSeries.list",
          + "aiplatform.tensorboards.list",
          + "aiplatform.trainingPipelines.list",
          + "aiplatform.trials.list",
          + "apigateway.apiconfigs.getIamPolicy",
          + "apigateway.apiconfigs.list",
          + "apigateway.apis.getIamPolicy",
          + "apigateway.apis.list",
          + "apigateway.gateways.getIamPolicy",
          + "apigateway.gateways.list",
          + "apigateway.locations.list",
          + "apigateway.operations.list",
          + "apigee.apiproductattributes.list",
          + "apigee.apiproducts.list",
          + "apigee.apps.list",
          + "apigee.archivedeployments.list",
          + "apigee.caches.list",
          + "apigee.datacollectors.list",
          + "apigee.datastores.list",
          + "apigee.deployments.list",
          + "apigee.developerappattributes.list",
          + "apigee.developerapps.list",
          + "apigee.developerattributes.list",
          + "apigee.developers.list",
          + "apigee.developersubscriptions.list",
          + "apigee.envgroupattachments.list",
          + "apigee.envgroups.list",
          + "apigee.environments.getIamPolicy",
          + "apigee.environments.list",
          + "apigee.exports.list",
          + "apigee.flowhooks.list",
          + "apigee.hostqueries.list",
          + "apigee.hostsecurityreports.list",
          + "apigee.instanceattachments.list",
          + "apigee.instances.list",
          + "apigee.keystorealiases.list",
          + "apigee.keystores.list",
          + "apigee.keyvaluemaps.list",
          + "apigee.operations.list",
          + "apigee.organizations.list",
          + "apigee.portals.list",
          + "apigee.proxies.list",
          + "apigee.proxyrevisions.list",
          + "apigee.queries.list",
          + "apigee.rateplans.list",
          + "apigee.references.list",
          + "apigee.reports.list",
          + "apigee.resourcefiles.list",
          + "apigee.securityreports.list",
          + "apigee.sharedflowrevisions.list",
          + "apigee.sharedflows.list",
          + "apigee.targetservers.list",
          + "apigee.tracesessions.list",
          + "apigeeconnect.connections.list",
          + "apikeys.keys.list",
          + "appengine.instances.list",
          + "appengine.memcache.list",
          + "appengine.operations.list",
          + "appengine.services.list",
          + "appengine.versions.list",
          + "artifactregistry.files.list",
          + "artifactregistry.packages.list",
          + "artifactregistry.repositories.getIamPolicy",
          + "artifactregistry.repositories.list",
          + "artifactregistry.tags.list",
          + "artifactregistry.versions.list",
          + "assuredworkloads.operations.list",
          + "assuredworkloads.workload.list",
          + "automl.annotationSpecs.list",
          + "automl.annotations.list",
          + "automl.columnSpecs.list",
          + "automl.datasets.getIamPolicy",
          + "automl.datasets.list",
          + "automl.examples.list",
          + "automl.humanAnnotationTasks.list",
          + "automl.locations.getIamPolicy",
          + "automl.locations.list",
          + "automl.modelEvaluations.list",
          + "automl.models.getIamPolicy",
          + "automl.models.list",
          + "automl.operations.list",
          + "automl.tableSpecs.list",
          + "automlrecommendations.apiKeys.list",
          + "automlrecommendations.catalogItems.list",
          + "automlrecommendations.catalogs.list",
          + "automlrecommendations.events.list",
          + "automlrecommendations.placements.list",
          + "automlrecommendations.recommendations.list",
          + "autoscaling.sites.getIamPolicy",
          + "baremetalsolution.instances.list",
          + "bigquery.capacityCommitments.list",
          + "bigquery.connections.getIamPolicy",
          + "bigquery.connections.list",
          + "bigquery.datasets.getIamPolicy",
          + "bigquery.jobs.list",
          + "bigquery.models.list",
          + "bigquery.reservationAssignments.list",
          + "bigquery.reservations.list",
          + "bigquery.routines.list",
          + "bigquery.rowAccessPolicies.getIamPolicy",
          + "bigquery.rowAccessPolicies.list",
          + "bigquery.savedqueries.list",
          + "bigquery.tables.getIamPolicy",
          + "bigquery.tables.list",
          + "bigtable.appProfiles.list",
          + "bigtable.backups.getIamPolicy",
          + "bigtable.backups.list",
          + "bigtable.clusters.list",
          + "bigtable.instances.getIamPolicy",
          + "bigtable.instances.list",
          + "bigtable.keyvisualizer.list",
          + "bigtable.locations.list",
          + "bigtable.tables.getIamPolicy",
          + "bigtable.tables.list",
          + "billing.accounts.getIamPolicy",
          + "billing.accounts.list",
          + "billing.budgets.list",
          + "billing.credits.list",
          + "billing.resourceAssociations.list",
          + "billing.subscriptions.list",
          + "binaryauthorization.attestors.getIamPolicy",
          + "binaryauthorization.attestors.list",
          + "binaryauthorization.continuousValidationConfig.getIamPolicy",
          + "binaryauthorization.policy.getIamPolicy",
          + "clientauthconfig.brands.list",
          + "clientauthconfig.clients.list",
          + "cloudasset.feeds.list",
          + "cloudbuild.builds.list",
          + "cloudbuild.workerpools.list",
          + "clouddebugger.breakpoints.list",
          + "clouddebugger.debuggees.list",
          + "clouddeploy.deliveryPipelines.getIamPolicy",
          + "clouddeploy.deliveryPipelines.list",
          + "clouddeploy.locations.list",
          + "clouddeploy.operations.list",
          + "clouddeploy.releases.list",
          + "clouddeploy.rollouts.list",
          + "clouddeploy.targets.getIamPolicy",
          + "clouddeploy.targets.list",
          + "cloudfunctions.functions.getIamPolicy",
          + "cloudfunctions.functions.list",
          + "cloudfunctions.locations.list",
          + "cloudfunctions.operations.list",
          + "cloudiot.devices.list",
          + "cloudiot.registries.getIamPolicy",
          + "cloudiot.registries.list",
          + "cloudjobdiscovery.companies.list",
          + "cloudkms.cryptoKeyVersions.list",
          + "cloudkms.cryptoKeys.getIamPolicy",
          + "cloudkms.cryptoKeys.list",
          + "cloudkms.importJobs.getIamPolicy",
          + "cloudkms.importJobs.list",
          + "cloudkms.keyRings.getIamPolicy",
          + "cloudkms.keyRings.list",
          + "cloudkms.locations.list",
          + "cloudnotifications.activities.list",
          + "cloudprivatecatalogproducer.associations.list",
          + "cloudprivatecatalogproducer.catalogAssociations.list",
          + "cloudprivatecatalogproducer.catalogs.getIamPolicy",
          + "cloudprivatecatalogproducer.catalogs.list",
          + "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
          + "cloudprivatecatalogproducer.producerCatalogs.list",
          + "cloudprivatecatalogproducer.products.getIamPolicy",
          + "cloudprivatecatalogproducer.products.list",
          + "cloudprofiler.profiles.list",
          + "cloudscheduler.jobs.list",
          + "cloudscheduler.locations.list",
          + "cloudsecurityscanner.crawledurls.list",
          + "cloudsecurityscanner.results.list",
          + "cloudsecurityscanner.scanruns.list",
          + "cloudsecurityscanner.scans.list",
          + "cloudsql.backupRuns.list",
          + "cloudsql.databases.list",
          + "cloudsql.instances.list",
          + "cloudsql.sslCerts.list",
          + "cloudsql.users.list",
          + "cloudsupport.accounts.getIamPolicy",
          + "cloudsupport.accounts.list",
          + "cloudsupport.techCases.list",
          + "cloudtasks.locations.list",
          + "cloudtasks.queues.getIamPolicy",
          + "cloudtasks.queues.list",
          + "cloudtasks.tasks.list",
          + "cloudtoolresults.executions.list",
          + "cloudtoolresults.histories.list",
          + "cloudtoolresults.steps.list",
          + "cloudtrace.insights.list",
          + "cloudtrace.tasks.list",
          + "cloudtrace.traces.list",
          + "cloudtranslate.glossaries.list",
          + "cloudtranslate.locations.list",
          + "cloudtranslate.operations.list",
          + "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
          + "cloudvolumesgcp-api.netapp.com/ipRanges.list",
          + "cloudvolumesgcp-api.netapp.com/jobs.list",
          + "cloudvolumesgcp-api.netapp.com/regions.list",
          + "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
          + "cloudvolumesgcp-api.netapp.com/snapshots.list",
          + "cloudvolumesgcp-api.netapp.com/volumes.list",
          + "commerceprice.privateoffers.list",
          + "composer.environments.list",
          + "composer.imageversions.list",
          + "composer.operations.list",
          + "compute.acceleratorTypes.list",
          + "compute.addresses.list",
          + "compute.autoscalers.list",
          + "compute.backendBuckets.list",
          + "compute.backendServices.getIamPolicy",
          + "compute.backendServices.list",
          + "compute.commitments.list",
          + "compute.diskTypes.list",
          + "compute.disks.getIamPolicy",
          + "compute.disks.list",
          + "compute.externalVpnGateways.list",
          + "compute.firewallPolicies.getIamPolicy",
          + "compute.firewallPolicies.list",
          + "compute.firewalls.list",
          + "compute.forwardingRules.list",
          + "compute.globalAddresses.list",
          + "compute.globalForwardingRules.list",
          + "compute.globalNetworkEndpointGroups.list",
          + "compute.globalOperations.getIamPolicy",
          + "compute.globalOperations.list",
          + "compute.globalPublicDelegatedPrefixes.list",
          + "compute.healthChecks.list",
          + "compute.httpHealthChecks.list",
          + "compute.httpsHealthChecks.list",
          + "compute.images.getIamPolicy",
          + "compute.images.list",
          + "compute.instanceGroupManagers.list",
          + "compute.instanceGroups.list",
          + "compute.instanceTemplates.getIamPolicy",
          + "compute.instanceTemplates.list",
          + "compute.instances.getIamPolicy",
          + "compute.instances.list",
          + "compute.interconnectAttachments.list",
          + "compute.interconnectLocations.list",
          + "compute.interconnects.list",
          + "compute.licenseCodes.getIamPolicy",
          + "compute.licenseCodes.list",
          + "compute.licenses.getIamPolicy",
          + "compute.licenses.list",
          + "compute.machineImages.getIamPolicy",
          + "compute.machineImages.list",
          + "compute.machineTypes.list",
          + "compute.maintenancePolicies.getIamPolicy",
          + "compute.maintenancePolicies.list",
          + "compute.networkEndpointGroups.getIamPolicy",
          + "compute.networkEndpointGroups.list",
          + "compute.networks.list",
          + "compute.nodeGroups.getIamPolicy",
          + "compute.nodeGroups.list",
          + "compute.nodeTemplates.getIamPolicy",
          + "compute.nodeTemplates.list",
          + "compute.nodeTypes.list",
          + "compute.publicAdvertisedPrefixes.list",
          + "compute.publicDelegatedPrefixes.list",
          + "compute.regionBackendServices.getIamPolicy",
          + "compute.regionBackendServices.list",
          + "compute.regionHealthCheckServices.list",
          + "compute.regionHealthChecks.list",
          + "compute.regionNetworkEndpointGroups.list",
          + "compute.regionNotificationEndpoints.list",
          + "compute.regionOperations.getIamPolicy",
          + "compute.regionOperations.list",
          + "compute.regionSslCertificates.list",
          + "compute.regionTargetHttpProxies.list",
          + "compute.regionTargetHttpsProxies.list",
          + "compute.regionUrlMaps.list",
          + "compute.regions.list",
          + "compute.reservations.list",
          + "compute.resourcePolicies.list",
          + "compute.routers.list",
          + "compute.routes.list",
          + "compute.securityPolicies.getIamPolicy",
          + "compute.securityPolicies.list",
          + "compute.serviceAttachments.list",
          + "compute.snapshots.getIamPolicy",
          + "compute.snapshots.list",
          + "compute.sslCertificates.list",
          + "compute.sslPolicies.list",
          + "compute.subnetworks.getIamPolicy",
          + "compute.subnetworks.list",
          + "compute.targetGrpcProxies.list",
          + "compute.targetHttpProxies.list",
          + "compute.targetHttpsProxies.list",
          + "compute.targetInstances.list",
          + "compute.targetPools.list",
          + "compute.targetSslProxies.list",
          + "compute.targetTcpProxies.list",
          + "compute.targetVpnGateways.list",
          + "compute.urlMaps.list",
          + "compute.vpnGateways.list",
          + "compute.vpnTunnels.list",
          + "compute.zoneOperations.getIamPolicy",
          + "compute.zoneOperations.list",
          + "compute.zones.list",
          + "connectors.connections.getIamPolicy",
          + "connectors.connections.list",
          + "connectors.connectors.list",
          + "connectors.locations.list",
          + "connectors.operations.list",
          + "connectors.providers.list",
          + "connectors.versions.list",
          + "consumerprocurement.accounts.list",
          + "consumerprocurement.entitlements.list",
          + "consumerprocurement.freeTrials.list",
          + "consumerprocurement.orders.list",
          + "contactcenterinsights.analyses.list",
          + "contactcenterinsights.conversations.list",
          + "contactcenterinsights.issueModels.list",
          + "contactcenterinsights.issues.list",
          + "contactcenterinsights.operations.list",
          + "contactcenterinsights.phraseMatchers.list",
          + "container.apiServices.list",
          + "container.auditSinks.list",
          + "container.backendConfigs.list",
          + "container.bindings.list",
          + "container.certificateSigningRequests.list",
          + "container.clusterRoleBindings.list",
          + "container.clusterRoles.list",
          + "container.clusters.list",
          + "container.componentStatuses.list",
          + "container.configMaps.list",
          + "container.controllerRevisions.list",
          + "container.cronJobs.list",
          + "container.csiDrivers.list",
          + "container.csiNodeInfos.list",
          + "container.csiNodes.list",
          + "container.customResourceDefinitions.list",
          + "container.daemonSets.list",
          + "container.deployments.list",
          + "container.endpointSlices.list",
          + "container.endpoints.list",
          + "container.events.list",
          + "container.frontendConfigs.list",
          + "container.horizontalPodAutoscalers.list",
          + "container.ingresses.list",
          + "container.initializerConfigurations.list",
          + "container.jobs.list",
          + "container.leases.list",
          + "container.limitRanges.list",
          + "container.localSubjectAccessReviews.list",
          + "container.managedCertificates.list",
          + "container.mutatingWebhookConfigurations.list",
          + "container.namespaces.list",
          + "container.networkPolicies.list",
          + "container.nodes.list",
          + "container.operations.list",
          + "container.persistentVolumeClaims.list",
          + "container.persistentVolumes.list",
          + "container.petSets.list",
          + "container.podDisruptionBudgets.list",
          + "container.podPresets.list",
          + "container.podSecurityPolicies.list",
          + "container.podTemplates.list",
          + "container.pods.list",
          + "container.priorityClasses.list",
          + "container.replicaSets.list",
          + "container.replicationControllers.list",
          + "container.resourceQuotas.list",
          + "container.roleBindings.list",
          + "container.roles.list",
          + "container.runtimeClasses.list",
          + "container.scheduledJobs.list",
          + "container.selfSubjectAccessReviews.list",
          + "container.serviceAccounts.list",
          + "container.services.list",
          + "container.statefulSets.list",
          + "container.storageClasses.list",
          + "container.storageStates.list",
          + "container.storageVersionMigrations.list",
          + "container.subjectAccessReviews.list",
          + "container.thirdPartyObjects.list",
          + "container.thirdPartyResources.list",
          + "container.updateInfos.list",
          + "container.validatingWebhookConfigurations.list",
          + "container.volumeAttachments.list",
          + "container.volumeSnapshotClasses.list",
          + "container.volumeSnapshotContents.list",
          + "container.volumeSnapshots.list",
          + "containeranalysis.notes.getIamPolicy",
          + "containeranalysis.notes.list",
          + "containeranalysis.occurrences.getIamPolicy",
          + "containeranalysis.occurrences.list",
          + "datacatalog.categories.getIamPolicy",
          + "datacatalog.entries.getIamPolicy",
          + "datacatalog.entries.list",
          + "datacatalog.entryGroups.getIamPolicy",
          + "datacatalog.entryGroups.list",
          + "datacatalog.tagTemplates.getIamPolicy",
          + "datacatalog.taxonomies.getIamPolicy",
          + "datacatalog.taxonomies.list",
          + "dataflow.jobs.list",
          + "dataflow.messages.list",
          + "dataflow.snapshots.list",
          + "datafusion.instances.getIamPolicy",
          + "datafusion.instances.list",
          + "datafusion.locations.list",
          + "datafusion.operations.list",
          + "datalabeling.annotateddatasets.list",
          + "datalabeling.annotationspecsets.list",
          + "datalabeling.dataitems.list",
          + "datalabeling.datasets.list",
          + "datalabeling.examples.list",
          + "datalabeling.instructions.list",
          + "datalabeling.operations.list",
          + "datamigration.connectionprofiles.getIamPolicy",
          + "datamigration.connectionprofiles.list",
          + "datamigration.locations.list",
          + "datamigration.migrationjobs.getIamPolicy",
          + "datamigration.migrationjobs.list",
          + "datamigration.operations.list",
          + "datapipelines.pipelines.list",
          + "dataproc.agents.list",
          + "dataproc.autoscalingPolicies.getIamPolicy",
          + "dataproc.autoscalingPolicies.list",
          + "dataproc.clusters.getIamPolicy",
          + "dataproc.clusters.list",
          + "dataproc.jobs.getIamPolicy",
          + "dataproc.jobs.list",
          + "dataproc.operations.getIamPolicy",
          + "dataproc.operations.list",
          + "dataproc.workflowTemplates.getIamPolicy",
          + "dataproc.workflowTemplates.list",
          + "dataprocessing.datasources.list",
          + "dataprocessing.featurecontrols.list",
          + "dataprocessing.groupcontrols.list",
          + "datastore.entities.list",
          + "datastore.indexes.list",
          + "datastore.locations.list",
          + "datastore.namespaces.list",
          + "datastore.operations.list",
          + "datastore.statistics.list",
          + "datastream.connectionProfiles.getIamPolicy",
          + "datastream.connectionProfiles.list",
          + "datastream.locations.list",
          + "datastream.operations.list",
          + "datastream.privateConnections.getIamPolicy",
          + "datastream.privateConnections.list",
          + "datastream.routes.getIamPolicy",
          + "datastream.routes.list",
          + "datastream.streams.getIamPolicy",
          + "datastream.streams.list",
          + "deploymentmanager.compositeTypes.list",
          + "deploymentmanager.deployments.getIamPolicy",
          + "deploymentmanager.deployments.list",
          + "deploymentmanager.manifests.list",
          + "deploymentmanager.operations.list",
          + "deploymentmanager.resources.list",
          + "deploymentmanager.typeProviders.list",
          + "deploymentmanager.types.list",
          + "dialogflow.agents.list",
          + "dialogflow.answerrecords.list",
          + "dialogflow.callMatchers.list",
          + "dialogflow.changelogs.list",
          + "dialogflow.contexts.list",
          + "dialogflow.conversationDatasets.list",
          + "dialogflow.conversationModels.list",
          + "dialogflow.conversationProfiles.list",
          + "dialogflow.conversations.list",
          + "dialogflow.documents.list",
          + "dialogflow.entityTypes.list",
          + "dialogflow.environments.list",
          + "dialogflow.flows.list",
          + "dialogflow.intents.list",
          + "dialogflow.knowledgeBases.list",
          + "dialogflow.messages.list",
          + "dialogflow.modelEvaluations.list",
          + "dialogflow.pages.list",
          + "dialogflow.participants.list",
          + "dialogflow.phoneNumberOrders.list",
          + "dialogflow.phoneNumbers.list",
          + "dialogflow.securitySettings.list",
          + "dialogflow.sessionEntityTypes.list",
          + "dialogflow.smartMessagingEntries.list",
          + "dialogflow.transitionRouteGroups.list",
          + "dialogflow.versions.list",
          + "dialogflow.webhooks.list",
          + "dlp.analyzeRiskTemplates.list",
          + "dlp.columnDataProfiles.list",
          + "dlp.deidentifyTemplates.list",
          + "dlp.estimates.list",
          + "dlp.inspectFindings.list",
          + "dlp.inspectTemplates.list",
          + "dlp.jobTriggers.list",
          + "dlp.jobs.list",
          + "dlp.projectDataProfiles.list",
          + "dlp.storedInfoTypes.list",
          + "dlp.tableDataProfiles.list",
          + "dns.changes.list",
          + "dns.dnsKeys.list",
          + "dns.managedZoneOperations.list",
          + "dns.managedZones.list",
          + "dns.policies.getIamPolicy",
          + "dns.policies.list",
          + "dns.resourceRecordSets.list",
          + "dns.responsePolicies.list",
          + "dns.responsePolicyRules.list",
          + "documentai.evaluations.list",
          + "documentai.labelerPools.list",
          + "documentai.locations.list",
          + "documentai.processorTypes.list",
          + "documentai.processorVersions.list",
          + "documentai.processors.list",
          + "domains.locations.list",
          + "domains.operations.list",
          + "earlyaccesscenter.campaigns.list",
          + "earlyaccesscenter.customerAllowlists.list",
          + "earthengine.assets.getIamPolicy",
          + "earthengine.assets.list",
          + "earthengine.operations.list",
          + "errorreporting.applications.list",
          + "errorreporting.errorEvents.list",
          + "errorreporting.groups.list",
          + "essentialcontacts.contacts.list",
          + "eventarc.locations.list",
          + "eventarc.operations.list",
          + "eventarc.triggers.getIamPolicy",
          + "eventarc.triggers.list",
          + "fcmdata.deliverydata.list",
          + "file.backups.list",
          + "file.instances.list",
          + "file.locations.list",
          + "file.operations.list",
          + "file.snapshots.list",
          + "firebase.clients.list",
          + "firebase.links.list",
          + "firebase.playLinks.list",
          + "firebaseabt.experiments.list",
          + "firebaseappdistro.groups.list",
          + "firebaseappdistro.releases.list",
          + "firebaseappdistro.testers.list",
          + "firebasecrashlytics.issues.list",
          + "firebasedatabase.instances.list",
          + "firebasedynamiclinks.destinations.list",
          + "firebasedynamiclinks.domains.list",
          + "firebasedynamiclinks.links.list",
          + "firebaseextensions.configs.list",
          + "firebasehosting.sites.list",
          + "firebaseinappmessaging.campaigns.list",
          + "firebaseml.compressionjobs.list",
          + "firebaseml.models.list",
          + "firebaseml.modelversions.list",
          + "firebasenotifications.messages.list",
          + "firebasepredictions.predictions.list",
          + "firebaserules.releases.list",
          + "firebaserules.rulesets.list",
          + "firebasestorage.buckets.list",
          + "fleetengine.vehicles.list",
          + "gameservices.gameServerClusters.list",
          + "gameservices.gameServerConfigs.list",
          + "gameservices.gameServerDeployments.list",
          + "gameservices.locations.list",
          + "gameservices.operations.list",
          + "gameservices.realms.list",
          + "genomics.datasets.getIamPolicy",
          + "genomics.datasets.list",
          + "genomics.operations.list",
          + "gkehub.gateway.getIamPolicy",
          + "gkehub.locations.list",
          + "gkehub.memberships.getIamPolicy",
          + "gkehub.memberships.list",
          + "gkehub.operations.list",
          + "gkemulticloud.awsClusters.list",
          + "gkemulticloud.awsNodePools.list",
          + "gkemulticloud.azureClients.list",
          + "gkemulticloud.azureClusters.list",
          + "gkemulticloud.azureNodePools.list",
          + "gkemulticloud.operations.list",
          + "gsuiteaddons.deployments.list",
          + "healthcare.annotationStores.getIamPolicy",
          + "healthcare.annotationStores.list",
          + "healthcare.annotations.list",
          + "healthcare.attributeDefinitions.list",
          + "healthcare.consentArtifacts.list",
          + "healthcare.consentStores.getIamPolicy",
          + "healthcare.consentStores.list",
          + "healthcare.consents.list",
          + "healthcare.datasets.getIamPolicy",
          + "healthcare.datasets.list",
          + "healthcare.dicomStores.getIamPolicy",
          + "healthcare.dicomStores.list",
          + "healthcare.fhirStores.getIamPolicy",
          + "healthcare.fhirStores.list",
          + "healthcare.hl7V2Messages.list",
          + "healthcare.hl7V2Stores.getIamPolicy",
          + "healthcare.hl7V2Stores.list",
          + "healthcare.locations.list",
          + "healthcare.operations.list",
          + "healthcare.userDataMappings.list",
          + "iam.googleapis.com/workloadIdentityPoolProviders.get",
          + "iam.googleapis.com/workloadIdentityPoolProviders.list",
          + "iam.googleapis.com/workloadIdentityPools.get",
          + "iam.googleapis.com/workloadIdentityPools.list",
          + "iam.roles.get",
          + "iam.roles.list",
          + "iam.serviceAccountKeys.list",
          + "iam.serviceAccounts.get",
          + "iam.serviceAccounts.getIamPolicy",
          + "iam.serviceAccounts.list",
          + "iap.tunnel.getIamPolicy",
          + "iap.tunnelInstances.getIamPolicy",
          + "iap.tunnelZones.getIamPolicy",
          + "iap.web.getIamPolicy",
          + "iap.webServiceVersions.getIamPolicy",
          + "iap.webServices.getIamPolicy",
          + "iap.webTypes.getIamPolicy",
          + "integrations.apigeeAuthConfigs.list",
          + "integrations.apigeeCertificates.list",
          + "integrations.apigeeExecutions.list",
          + "integrations.apigeeIntegrationVers.list",
          + "integrations.apigeeIntegrations.list",
          + "integrations.apigeeSfdcChannels.list",
          + "integrations.apigeeSfdcInstances.list",
          + "integrations.apigeeSuspensions.list",
          + "integrations.securityAuthConfigs.list",
          + "integrations.securityExecutions.list",
          + "integrations.securityIntegTempVers.list",
          + "integrations.securityIntegrationVers.list",
          + "integrations.securityIntegrations.list",
          + "lifesciences.operations.list",
          + "livestream.channels.list",
          + "livestream.events.list",
          + "livestream.inputs.list",
          + "livestream.locations.list",
          + "livestream.operations.list",
          + "logging.buckets.list",
          + "logging.exclusions.list",
          + "logging.locations.list",
          + "logging.logEntries.list",
          + "logging.logMetrics.list",
          + "logging.logServiceIndexes.list",
          + "logging.logServices.list",
          + "logging.logs.list",
          + "logging.notificationRules.list",
          + "logging.operations.list",
          + "logging.privateLogEntries.list",
          + "logging.queries.list",
          + "logging.sinks.list",
          + "logging.views.list",
          + "managedidentities.domains.getIamPolicy",
          + "managedidentities.domains.list",
          + "managedidentities.locations.list",
          + "managedidentities.operations.list",
          + "managedidentities.peerings.getIamPolicy",
          + "managedidentities.peerings.list",
          + "managedidentities.sqlintegrations.list",
          + "memcache.instances.list",
          + "memcache.locations.list",
          + "memcache.operations.list",
          + "metastore.backups.list",
          + "metastore.imports.list",
          + "metastore.locations.list",
          + "metastore.operations.list",
          + "metastore.services.getIamPolicy",
          + "metastore.services.list",
          + "ml.jobs.getIamPolicy",
          + "ml.jobs.list",
          + "ml.locations.list",
          + "ml.models.getIamPolicy",
          + "ml.models.list",
          + "ml.operations.list",
          + "ml.studies.getIamPolicy",
          + "ml.studies.list",
          + "ml.trials.list",
          + "ml.versions.list",
          + "monitoring.alertPolicies.list",
          + "monitoring.dashboards.list",
          + "monitoring.groups.list",
          + "monitoring.metricDescriptors.list",
          + "monitoring.monitoredResourceDescriptors.list",
          + "monitoring.notificationChannelDescriptors.list",
          + "monitoring.notificationChannels.list",
          + "monitoring.publicWidgets.list",
          + "monitoring.services.list",
          + "monitoring.slos.list",
          + "monitoring.timeSeries.list",
          + "monitoring.uptimeCheckConfigs.list",
          + "networkconnectivity.hubs.getIamPolicy",
          + "networkconnectivity.hubs.list",
          + "networkconnectivity.locations.list",
          + "networkconnectivity.operations.list",
          + "networkconnectivity.spokes.getIamPolicy",
          + "networkconnectivity.spokes.list",
          + "networkmanagement.connectivitytests.getIamPolicy",
          + "networkmanagement.connectivitytests.list",
          + "networkmanagement.locations.list",
          + "networkmanagement.operations.list",
          + "networksecurity.authorizationPolicies.getIamPolicy",
          + "networksecurity.authorizationPolicies.list",
          + "networksecurity.clientTlsPolicies.getIamPolicy",
          + "networksecurity.clientTlsPolicies.list",
          + "networksecurity.locations.list",
          + "networksecurity.operations.list",
          + "networksecurity.serverTlsPolicies.getIamPolicy",
          + "networksecurity.serverTlsPolicies.list",
          + "networkservices.endpointConfigSelectors.getIamPolicy",
          + "networkservices.endpointConfigSelectors.list",
          + "networkservices.endpointPolicies.getIamPolicy",
          + "networkservices.endpointPolicies.list",
          + "networkservices.httpFilters.getIamPolicy",
          + "networkservices.httpFilters.list",
          + "networkservices.httpfilters.getIamPolicy",
          + "networkservices.httpfilters.list",
          + "networkservices.locations.list",
          + "networkservices.operations.list",
          + "notebooks.environments.getIamPolicy",
          + "notebooks.environments.list",
          + "notebooks.executions.getIamPolicy",
          + "notebooks.executions.list",
          + "notebooks.instances.getIamPolicy",
          + "notebooks.instances.list",
          + "notebooks.locations.list",
          + "notebooks.operations.list",
          + "notebooks.runtimes.getIamPolicy",
          + "notebooks.runtimes.list",
          + "notebooks.schedules.getIamPolicy",
          + "notebooks.schedules.list",
          + "ondemandscanning.operations.list",
          + "opsconfigmonitoring.resourceMetadata.list",
          + "orgpolicy.constraints.list",
          + "orgpolicy.policies.list",
          + "osconfig.guestPolicies.list",
          + "osconfig.instanceOSPoliciesCompliances.list",
          + "osconfig.inventories.list",
          + "osconfig.osPolicyAssignmentReports.list",
          + "osconfig.osPolicyAssignments.list",
          + "osconfig.patchDeployments.list",
          + "osconfig.patchJobs.list",
          + "osconfig.vulnerabilityReports.list",
          + "paymentsresellersubscription.products.list",
          + "paymentsresellersubscription.promotions.list",
          + "policysimulator.replayResults.list",
          + "policysimulator.replays.list",
          + "privateca.caPools.getIamPolicy",
          + "privateca.caPools.list",
          + "privateca.certificateAuthorities.getIamPolicy",
          + "privateca.certificateAuthorities.list",
          + "privateca.certificateRevocationLists.getIamPolicy",
          + "privateca.certificateRevocationLists.list",
          + "privateca.certificateTemplates.getIamPolicy",
          + "privateca.certificateTemplates.list",
          + "privateca.certificates.getIamPolicy",
          + "privateca.certificates.list",
          + "privateca.locations.list",
          + "privateca.operations.list",
          + "privateca.reusableConfigs.getIamPolicy",
          + "privateca.reusableConfigs.list",
          + "proximitybeacon.attachments.list",
          + "proximitybeacon.beacons.getIamPolicy",
          + "proximitybeacon.beacons.list",
          + "proximitybeacon.namespaces.getIamPolicy",
          + "proximitybeacon.namespaces.list",
          + "pubsub.schemas.getIamPolicy",
          + "pubsub.schemas.list",
          + "pubsub.snapshots.getIamPolicy",
          + "pubsub.snapshots.list",
          + "pubsub.subscriptions.getIamPolicy",
          + "pubsub.subscriptions.list",
          + "pubsub.topics.getIamPolicy",
          + "pubsub.topics.list",
          + "pubsublite.operations.list",
          + "pubsublite.reservations.list",
          + "pubsublite.subscriptions.list",
          + "pubsublite.topics.list",
          + "recaptchaenterprise.keys.list",
          + "recaptchaenterprise.relatedaccountgroupmemberships.list",
          + "recaptchaenterprise.relatedaccountgroups.list",
          + "recommender.bigqueryCapacityCommitmentsInsights.list",
          + "recommender.bigqueryCapacityCommitmentsRecommendations.list",
          + "recommender.cloudAssetInsights.list",
          + "recommender.cloudsqlIdleInstanceRecommendations.list",
          + "recommender.cloudsqlInstanceActivityInsights.list",
          + "recommender.cloudsqlInstanceCpuUsageInsights.list",
          + "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
          + "recommender.cloudsqlInstanceMemoryUsageInsights.list",
          + "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
          + "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
          + "recommender.commitmentUtilizationInsights.list",
          + "recommender.computeAddressIdleResourceInsights.list",
          + "recommender.computeAddressIdleResourceRecommendations.list",
          + "recommender.computeDiskIdleResourceInsights.list",
          + "recommender.computeDiskIdleResourceRecommendations.list",
          + "recommender.computeFirewallInsights.list",
          + "recommender.computeImageIdleResourceInsights.list",
          + "recommender.computeImageIdleResourceRecommendations.list",
          + "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
          + "recommender.computeInstanceIdleResourceRecommendations.list",
          + "recommender.computeInstanceMachineTypeRecommendations.list",
          + "recommender.iamPolicyInsights.list",
          + "recommender.iamPolicyLateralMovementInsights.list",
          + "recommender.iamPolicyRecommendations.list",
          + "recommender.iamServiceAccountInsights.list",
          + "recommender.locations.list",
          + "recommender.loggingProductSuggestionContainerInsights.list",
          + "recommender.loggingProductSuggestionContainerRecommendations.list",
          + "recommender.monitoringProductSuggestionComputeInsights.list",
          + "recommender.monitoringProductSuggestionComputeRecommendations.list",
          + "recommender.resourcemanagerProjectUtilizationInsights.list",
          + "recommender.resourcemanagerProjectUtilizationRecommendations.list",
          + "recommender.usageCommitmentRecommendations.list",
          + "redis.instances.list",
          + "redis.locations.list",
          + "redis.operations.list",
          + "remotebuildexecution.instances.list",
          + "remotebuildexecution.workerpools.list",
          + "resourcemanager.folders.getIamPolicy",
          + "resourcemanager.folders.list",
          + "resourcemanager.hierarchyNodes.listTagBindings",
          + "resourcemanager.organizations.get",
          + "resourcemanager.organizations.getIamPolicy",
          + "resourcemanager.projects.get",
          + "resourcemanager.projects.getIamPolicy",
          + "resourcemanager.projects.list",
          + "resourcemanager.tagKeys.getIamPolicy",
          + "resourcemanager.tagKeys.list",
          + "resourcemanager.tagValues.getIamPolicy",
          + "resourcemanager.tagValues.list",
          + "resourcesettings.settings.list",
          + "retail.catalogs.list",
          + "retail.operations.list",
          + "retail.products.list",
          + "riskmanager.operations.list",
          + "riskmanager.policies.list",
          + "riskmanager.reports.list",
          + "run.configurations.list",
          + "run.locations.list",
          + "run.revisions.list",
          + "run.routes.list",
          + "run.services.getIamPolicy",
          + "run.services.list",
          + "runtimeconfig.configs.getIamPolicy",
          + "runtimeconfig.configs.list",
          + "runtimeconfig.operations.list",
          + "runtimeconfig.variables.getIamPolicy",
          + "runtimeconfig.variables.list",
          + "runtimeconfig.waiters.getIamPolicy",
          + "runtimeconfig.waiters.list",
          + "secretmanager.locations.list",
          + "secretmanager.secrets.getIamPolicy",
          + "secretmanager.secrets.list",
          + "secretmanager.versions.list",
          + "securitycenter.assets.list",
          + "securitycenter.findings.list",
          + "securitycenter.notificationconfig.list",
          + "securitycenter.sources.getIamPolicy",
          + "securitycenter.sources.list",
          + "servicebroker.bindingoperations.list",
          + "servicebroker.bindings.getIamPolicy",
          + "servicebroker.bindings.list",
          + "servicebroker.catalogs.getIamPolicy",
          + "servicebroker.catalogs.list",
          + "servicebroker.instanceoperations.list",
          + "servicebroker.instances.getIamPolicy",
          + "servicebroker.instances.list",
          + "serviceconsumermanagement.tenancyu.list",
          + "servicedirectory.endpoints.getIamPolicy",
          + "servicedirectory.endpoints.list",
          + "servicedirectory.locations.list",
          + "servicedirectory.namespaces.getIamPolicy",
          + "servicedirectory.namespaces.list",
          + "servicedirectory.services.getIamPolicy",
          + "servicedirectory.services.list",
          + "servicemanagement.services.getIamPolicy",
          + "servicemanagement.services.list",
          + "servicenetworking.operations.list",
          + "serviceusage.operations.list",
          + "serviceusage.services.list",
          + "source.repos.getIamPolicy",
          + "source.repos.list",
          + "spanner.backupOperations.list",
          + "spanner.backups.getIamPolicy",
          + "spanner.backups.list",
          + "spanner.databaseOperations.list",
          + "spanner.databases.getIamPolicy",
          + "spanner.databases.list",
          + "spanner.instanceConfigs.list",
          + "spanner.instanceOperations.list",
          + "spanner.instances.getIamPolicy",
          + "spanner.instances.list",
          + "spanner.sessions.list",
          + "speech.customClasses.list",
          + "speech.phraseSets.list",
          + "storage.buckets.getIamPolicy",
          + "storage.buckets.list",
          + "storage.hmacKeys.list",
          + "storage.multipartUploads.list",
          + "storage.objects.getIamPolicy",
          + "storage.objects.list",
          + "storagetransfer.agentpools.list",
          + "storagetransfer.jobs.list",
          + "storagetransfer.operations.list",
          + "tpu.acceleratortypes.list",
          + "tpu.locations.list",
          + "tpu.nodes.list",
          + "tpu.operations.list",
          + "tpu.tensorflowversions.list",
          + "transcoder.jobTemplates.list",
          + "transcoder.jobs.list",
          + "translationhub.portals.list",
          + "visualinspection.annotationSets.list",
          + "visualinspection.annotationSpecs.list",
          + "visualinspection.annotations.list",
          + "visualinspection.datasets.list",
          + "visualinspection.images.list",
          + "visualinspection.locations.list",
          + "visualinspection.modelEvaluations.list",
          + "visualinspection.models.list",
          + "visualinspection.modules.list",
          + "visualinspection.operations.list",
          + "visualinspection.solutionArtifacts.list",
          + "visualinspection.solutions.list",
          + "vmmigration.cloneJobs.list",
          + "vmmigration.cutoverJobs.list",
          + "vmmigration.datacenterConnectors.list",
          + "vmmigration.deployments.list",
          + "vmmigration.groups.list",
          + "vmmigration.locations.list",
          + "vmmigration.migratingVms.list",
          + "vmmigration.operations.list",
          + "vmmigration.sources.list",
          + "vmmigration.targets.list",
          + "vmmigration.utilizationReports.list",
          + "vpcaccess.connectors.list",
          + "vpcaccess.locations.list",
          + "vpcaccess.operations.list",
          + "workflows.executions.list",
          + "workflows.locations.list",
          + "workflows.operations.list",
          + "workflows.workflows.getIamPolicy",
          + "workflows.workflows.list",
        ]

*/


/*##########################################
  Custom Role Network Security Eng poweruser
*/##########################################

/* permission for network security eng poweruser

permissions = [
          + "accesscontextmanager.accessLevels.get",
          + "accesscontextmanager.accessLevels.list",
          + "accesscontextmanager.accessPolicies.get",
          + "accesscontextmanager.accessPolicies.getIamPolicy",
          + "accesscontextmanager.accessPolicies.list",
          + "accesscontextmanager.accessZones.get",
          + "accesscontextmanager.accessZones.list",
          + "accesscontextmanager.policies.get",
          + "accesscontextmanager.policies.getIamPolicy",
          + "accesscontextmanager.policies.list",
          + "accesscontextmanager.servicePerimeters.get",
          + "accesscontextmanager.servicePerimeters.list",
          + "compute.firewallPolicies.cloneRules",
          + "compute.firewallPolicies.create",
          + "compute.firewallPolicies.delete",
          + "compute.firewallPolicies.get",
          + "compute.firewallPolicies.getIamPolicy",
          + "compute.firewallPolicies.list",
          + "compute.firewallPolicies.move",
          + "compute.firewallPolicies.setIamPolicy",
          + "compute.firewallPolicies.update",
          + "compute.firewallPolicies.use",
          + "compute.globalOperations.get",
          + "compute.globalOperations.getIamPolicy",
          + "compute.globalOperations.list",
          + "compute.globalOperations.setIamPolicy",
          + "compute.projects.get",
          + "compute.regionOperations.get",
          + "compute.regionOperations.getIamPolicy",
          + "compute.regionOperations.list",
          + "compute.regionOperations.setIamPolicy",
          + "resourcemanager.organizations.get",
          + "resourcemanager.projects.get",
          + "resourcemanager.projects.list",
          + "serviceusage.quotas.get",
          + "serviceusage.services.get",
          + "serviceusage.services.list",
        ]

*/

/*##################################
  Custom Role SIEM Poweruser
*/##################################

/*permission for siem poweruser 

permissions = [
          + "cloudnotifications.activities.list",
          + "logging.buckets.get",
          + "logging.buckets.list",
          + "logging.exclusions.get",
          + "logging.exclusions.list",
          + "logging.locations.get",
          + "logging.locations.list",
          + "logging.logEntries.list",
          + "logging.logMetrics.get",
          + "logging.logMetrics.list",
          + "logging.logServiceIndexes.list",
          + "logging.logServices.list",
          + "logging.logs.list",
          + "logging.operations.get",
          + "logging.operations.list",
          + "logging.queries.create",
          + "logging.queries.delete",
          + "logging.queries.get",
          + "logging.queries.list",
          + "logging.queries.listShared",
          + "logging.queries.update",
          + "logging.sinks.get",
          + "logging.sinks.list",
          + "logging.usage.get",
          + "logging.views.get",
          + "logging.views.list",
          + "monitoring.alertPolicies.get",
          + "monitoring.alertPolicies.list",
          + "monitoring.dashboards.get",
          + "monitoring.dashboards.list",
          + "monitoring.groups.get",
          + "monitoring.groups.list",
          + "monitoring.metricDescriptors.get",
          + "monitoring.metricDescriptors.list",
          + "monitoring.monitoredResourceDescriptors.get",
          + "monitoring.monitoredResourceDescriptors.list",
          + "monitoring.notificationChannelDescriptors.get",
          + "monitoring.notificationChannelDescriptors.list",
          + "monitoring.notificationChannels.get",
          + "monitoring.notificationChannels.list",
          + "monitoring.publicWidgets.get",
          + "monitoring.publicWidgets.list",
          + "monitoring.services.get",
          + "monitoring.services.list",
          + "monitoring.slos.get",
          + "monitoring.slos.list",
          + "monitoring.timeSeries.list",
          + "monitoring.uptimeCheckConfigs.get",
          + "monitoring.uptimeCheckConfigs.list",
          + "opsconfigmonitoring.resourceMetadata.list",
          + "resourcemanager.projects.get",
          + "resourcemanager.projects.list",
          + "stackdriver.projects.get",
        ]
*/

/*##################################
  Custom Role IR Poweruser
*/##################################

/*permission for ir poweruser 

permissions = [
          + "cloudsecurityscanner.crawledurls.list",
          + "cloudsecurityscanner.results.get",
          + "cloudsecurityscanner.results.list",
          + "cloudsecurityscanner.scanruns.get",
          + "cloudsecurityscanner.scanruns.getSummary",
          + "cloudsecurityscanner.scanruns.list",
          + "cloudsecurityscanner.scans.get",
          + "cloudsecurityscanner.scans.list",
          + "resourcemanager.folders.get",
          + "resourcemanager.organizations.get",
          + "resourcemanager.projects.get",
          + "securitycenter.assets.group",
          + "securitycenter.assets.list",
          + "securitycenter.assets.listAssetPropertyNames",
          + "securitycenter.containerthreatdetectionsettings.calculate",
          + "securitycenter.containerthreatdetectionsettings.get",
          + "securitycenter.eventthreatdetectionsettings.calculate",
          + "securitycenter.eventthreatdetectionsettings.get",
          + "securitycenter.findings.group",
          + "securitycenter.findings.list",
          + "securitycenter.findings.listFindingPropertyNames",
          + "securitycenter.notificationconfig.get",
          + "securitycenter.notificationconfig.list",
          + "securitycenter.organizationsettings.get",
          + "securitycenter.securitycentersettings.get",
          + "securitycenter.securityhealthanalyticssettings.calculate",
          + "securitycenter.securityhealthanalyticssettings.get",
          + "securitycenter.sources.get",
          + "securitycenter.sources.list",
          + "securitycenter.subscription.get",
          + "securitycenter.userinterfacemetadata.get",
          + "securitycenter.websecurityscannersettings.calculate",
          + "securitycenter.websecurityscannersettings.get",
          + "serviceusage.quotas.get",
          + "serviceusage.services.get",
          + "serviceusage.services.list",
        ]
*/


/*##################################
  Custom Role DDI poweruser
*/##################################

/*permission for ddi poweruser

  permissions = [
          + "compute.networks.get",
          + "dns.changes.get",
          + "dns.changes.list",
          + "dns.dnsKeys.get",
          + "dns.dnsKeys.list",
          + "dns.managedZoneOperations.get",
          + "dns.managedZoneOperations.list",
          + "dns.managedZones.get",
          + "dns.managedZones.list",
          + "dns.policies.get",
          + "dns.policies.list",
          + "dns.projects.get",
          + "dns.resourceRecordSets.get",
          + "dns.resourceRecordSets.list",
          + "dns.responsePolicies.get",
          + "dns.responsePolicies.list",
          + "dns.responsePolicyRules.get",
          + "dns.responsePolicyRules.list",
          + "resourcemanager.projects.get",
          + "resourcemanager.projects.list",
        ]
*/

/*##################################
  Custom Role Billing Poweruser
*/##################################

/* permission for billing poweruser 

permissions = [
          + "billing.accounts.get",
          + "billing.accounts.getIamPolicy",
          + "billing.accounts.getPaymentInfo",
          + "billing.accounts.getPricing",
          + "billing.accounts.getSpendingInformation",
          + "billing.accounts.getUsageExportSpec",
          + "billing.accounts.list",
          + "billing.budgets.get",
          + "billing.budgets.list",
          + "billing.credits.list",
          + "billing.resourceAssociations.list",
          + "billing.subscriptions.get",
          + "billing.subscriptions.list",
          + "commerceoffercatalog.offers.get",
          + "consumerprocurement.accounts.get",
          + "consumerprocurement.accounts.list",
          + "consumerprocurement.orders.get",
          + "consumerprocurement.orders.list",
          + "dataprocessing.datasources.get",
          + "dataprocessing.datasources.list",
          + "dataprocessing.groupcontrols.get",
          + "dataprocessing.groupcontrols.list",
          + "recommender.commitmentUtilizationInsights.get",
          + "recommender.commitmentUtilizationInsights.list",
          + "recommender.usageCommitmentRecommendations.get",
          + "recommender.usageCommitmentRecommendations.list",
          + "resourcemanager.organizations.get",
        ]
*/


/*##################################
  Custom Role Network Poweruser
*/##################################

/* permission for network poweruser 

permissions = [
          + "compute.acceleratorTypes.get",
          + "compute.acceleratorTypes.list",
          + "compute.addresses.get",
          + "compute.addresses.list",
          + "compute.autoscalers.get",
          + "compute.autoscalers.list",
          + "compute.backendBuckets.get",
          + "compute.backendBuckets.list",
          + "compute.backendServices.get",
          + "compute.backendServices.list",
          + "compute.externalVpnGateways.get",
          + "compute.externalVpnGateways.list",
          + "compute.firewalls.get",
          + "compute.firewalls.list",
          + "compute.forwardingRules.get",
          + "compute.forwardingRules.list",
          + "compute.globalAddresses.get",
          + "compute.globalAddresses.list",
          + "compute.globalForwardingRules.get",
          + "compute.globalForwardingRules.list",
          + "compute.globalForwardingRules.pscGet",
          + "compute.healthChecks.get",
          + "compute.healthChecks.list",
          + "compute.httpHealthChecks.get",
          + "compute.httpHealthChecks.list",
          + "compute.httpsHealthChecks.get",
          + "compute.httpsHealthChecks.list",
          + "compute.instanceGroupManagers.get",
          + "compute.instanceGroupManagers.list",
          + "compute.instanceGroups.get",
          + "compute.instanceGroups.list",
          + "compute.instances.get",
          + "compute.instances.getGuestAttributes",
          + "compute.instances.getScreenshot",
          + "compute.instances.getSerialPortOutput",
          + "compute.instances.list",
          + "compute.instances.listReferrers",
          + "compute.interconnectAttachments.get",
          + "compute.interconnectAttachments.list",
          + "compute.interconnectLocations.get",
          + "compute.interconnectLocations.list",
          + "compute.interconnects.get",
          + "compute.interconnects.list",
          + "compute.machineTypes.get",
          + "compute.machineTypes.list",
          + "compute.networks.get",
          + "compute.networks.getEffectiveFirewalls",
          + "compute.networks.list",
          + "compute.networks.listPeeringRoutes",
          + "compute.projects.get",
          + "compute.regionBackendServices.get",
          + "compute.regionBackendServices.list",
          + "compute.regionHealthCheckServices.get",
          + "compute.regionHealthCheckServices.list",
          + "compute.regionHealthChecks.get",
          + "compute.regionHealthChecks.list",
          + "compute.regionNotificationEndpoints.get",
          + "compute.regionNotificationEndpoints.list",
          + "compute.regionSslCertificates.get",
          + "compute.regionSslCertificates.list",
          + "compute.regionTargetHttpProxies.get",
          + "compute.regionTargetHttpProxies.list",
          + "compute.regionTargetHttpsProxies.get",
          + "compute.regionTargetHttpsProxies.list",
          + "compute.regionUrlMaps.get",
          + "compute.regionUrlMaps.list",
          + "compute.regions.get",
          + "compute.regions.list",
          + "compute.routers.get",
          + "compute.routers.list",
          + "compute.routes.get",
          + "compute.routes.list",
          + "compute.serviceAttachments.get",
          + "compute.serviceAttachments.list",
          + "compute.sslCertificates.get",
          + "compute.sslCertificates.list",
          + "compute.sslPolicies.get",
          + "compute.sslPolicies.list",
          + "compute.sslPolicies.listAvailableFeatures",
          + "compute.subnetworks.get",
          + "compute.subnetworks.list",
          + "compute.targetGrpcProxies.get",
          + "compute.targetGrpcProxies.list",
          + "compute.targetHttpProxies.get",
          + "compute.targetHttpProxies.list",
          + "compute.targetHttpsProxies.get",
          + "compute.targetHttpsProxies.list",
          + "compute.targetInstances.get",
          + "compute.targetInstances.list",
          + "compute.targetPools.get",
          + "compute.targetPools.list",
          + "compute.targetSslProxies.get",
          + "compute.targetSslProxies.list",
          + "compute.targetTcpProxies.get",
          + "compute.targetTcpProxies.list",
          + "compute.targetVpnGateways.get",
          + "compute.targetVpnGateways.list",
          + "compute.urlMaps.get",
          + "compute.urlMaps.list",
          + "compute.vpnGateways.get",
          + "compute.vpnGateways.list",
          + "compute.vpnTunnels.get",
          + "compute.vpnTunnels.list",
          + "compute.zones.get",
          + "compute.zones.list",
          + "networkconnectivity.locations.get",
          + "networkconnectivity.locations.list",
          + "networkconnectivity.operations.get",
          + "networkconnectivity.operations.list",
          + "networksecurity.authorizationPolicies.get",
          + "networksecurity.authorizationPolicies.list",
          + "networksecurity.clientTlsPolicies.get",
          + "networksecurity.clientTlsPolicies.list",
          + "networksecurity.locations.get",
          + "networksecurity.locations.list",
          + "networksecurity.operations.get",
          + "networksecurity.operations.list",
          + "networksecurity.serverTlsPolicies.get",
          + "networksecurity.serverTlsPolicies.list",
          + "networkservices.endpointConfigSelectors.get",
          + "networkservices.endpointConfigSelectors.list",
          + "networkservices.endpointPolicies.get",
          + "networkservices.endpointPolicies.list",
          + "networkservices.httpFilters.get",
          + "networkservices.httpFilters.list",
          + "networkservices.httpfilters.get",
          + "networkservices.httpfilters.list",
          + "networkservices.locations.get",
          + "networkservices.locations.list",
          + "networkservices.operations.get",
          + "networkservices.operations.list",
          + "orgpolicy.constraints.list",
          + "orgpolicy.policies.list",
          + "orgpolicy.policy.get",
          + "resourcemanager.folders.get",
          + "resourcemanager.folders.list",
          + "resourcemanager.projects.get",
          + "resourcemanager.projects.list",
          + "servicenetworking.services.get",
          + "serviceusage.quotas.get",
          + "serviceusage.services.get",
          + "serviceusage.services.list",
          + "trafficdirector.networks.getConfigs",
          + "trafficdirector.networks.reportMetrics",
        ]

*/


/*##################################
  Custom Role Product Poweruser
*/##################################

/* permission for product poweruser 

permissions = [
          + "cloudasset.assets.analyzeIamPolicy",
          + "cloudasset.assets.analyzeMove",
          + "cloudasset.assets.exportAccessLevel",
          + "cloudasset.assets.exportAccessPolicy",
          + "cloudasset.assets.exportAllAccessPolicy",
          + "cloudasset.assets.exportAppengineApplications",
          + "cloudasset.assets.exportAppengineServices",
          + "cloudasset.assets.exportAppengineVersions",
          + "cloudasset.assets.exportBigqueryDatasets",
          + "cloudasset.assets.exportBigqueryTables",
          + "cloudasset.assets.exportBigtableCluster",
          + "cloudasset.assets.exportBigtableInstance",
          + "cloudasset.assets.exportBigtableTable",
          + "cloudasset.assets.exportCloudbillingBillingAccounts",
          + "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
          + "cloudasset.assets.exportCloudkmsCryptoKeys",
          + "cloudasset.assets.exportCloudkmsImportJobs",
          + "cloudasset.assets.exportCloudkmsKeyRings",
          + "cloudasset.assets.exportCloudresourcemanagerFolders",
          + "cloudasset.assets.exportCloudresourcemanagerOrganizations",
          + "cloudasset.assets.exportCloudresourcemanagerProjects",
          + "cloudasset.assets.exportComputeAddress",
          + "cloudasset.assets.exportComputeAutoscalers",
          + "cloudasset.assets.exportComputeBackendBuckets",
          + "cloudasset.assets.exportComputeBackendServices",
          + "cloudasset.assets.exportComputeDisks",
          + "cloudasset.assets.exportComputeFirewalls",
          + "cloudasset.assets.exportComputeForwardingRules",
          + "cloudasset.assets.exportComputeGlobalAddress",
          + "cloudasset.assets.exportComputeGlobalForwardingRules",
          + "cloudasset.assets.exportComputeHealthChecks",
          + "cloudasset.assets.exportComputeHttpHealthChecks",
          + "cloudasset.assets.exportComputeHttpsHealthChecks",
          + "cloudasset.assets.exportComputeImages",
          + "cloudasset.assets.exportComputeInstanceGroupManagers",
          + "cloudasset.assets.exportComputeInstanceGroups",
          + "cloudasset.assets.exportComputeInstanceTemplates",
          + "cloudasset.assets.exportComputeInstances",
          + "cloudasset.assets.exportComputeInterconnect",
          + "cloudasset.assets.exportComputeInterconnectAttachment",
          + "cloudasset.assets.exportComputeLicenses",
          + "cloudasset.assets.exportComputeNetworks",
          + "cloudasset.assets.exportComputeProjects",
          + "cloudasset.assets.exportComputeRegionAutoscaler",
          + "cloudasset.assets.exportComputeRegionBackendServices",
          + "cloudasset.assets.exportComputeRegionDisk",
          + "cloudasset.assets.exportComputeRegionInstanceGroup",
          + "cloudasset.assets.exportComputeRegionInstanceGroupManager",
          + "cloudasset.assets.exportComputeRouters",
          + "cloudasset.assets.exportComputeRoutes",
          + "cloudasset.assets.exportComputeSecurityPolicy",
          + "cloudasset.assets.exportComputeSnapshots",
          + "cloudasset.assets.exportComputeSslCertificates",
          + "cloudasset.assets.exportComputeSubnetworks",
          + "cloudasset.assets.exportComputeTargetHttpProxies",
          + "cloudasset.assets.exportComputeTargetHttpsProxies",
          + "cloudasset.assets.exportComputeTargetInstances",
          + "cloudasset.assets.exportComputeTargetPools",
          + "cloudasset.assets.exportComputeTargetSslProxies",
          + "cloudasset.assets.exportComputeTargetTcpProxies",
          + "cloudasset.assets.exportComputeTargetVpnGateways",
          + "cloudasset.assets.exportComputeUrlMaps",
          + "cloudasset.assets.exportComputeVpnTunnels",
          + "cloudasset.assets.exportContainerClusterrole",
          + "cloudasset.assets.exportContainerClusterrolebinding",
          + "cloudasset.assets.exportContainerClusters",
          + "cloudasset.assets.exportContainerNamespace",
          + "cloudasset.assets.exportContainerNode",
          + "cloudasset.assets.exportContainerNodepool",
          + "cloudasset.assets.exportContainerPod",
          + "cloudasset.assets.exportContainerRole",
          + "cloudasset.assets.exportContainerRolebinding",
          + "cloudasset.assets.exportContainerregistryImage",
          + "cloudasset.assets.exportDatafusionInstance",
          + "cloudasset.assets.exportDataprocClusters",
          + "cloudasset.assets.exportDataprocJobs",
          + "cloudasset.assets.exportDnsManagedZones",
          + "cloudasset.assets.exportDnsPolicies",
          + "cloudasset.assets.exportIamPolicy",
          + "cloudasset.assets.exportIamRoles",
          + "cloudasset.assets.exportIamServiceAccountKeys",
          + "cloudasset.assets.exportIamServiceAccounts",
          + "cloudasset.assets.exportManagedidentitiesDomain",
          + "cloudasset.assets.exportOrgPolicy",
          + "cloudasset.assets.exportPubsubSubscriptions",
          + "cloudasset.assets.exportPubsubTopics",
          + "cloudasset.assets.exportResource",
          + "cloudasset.assets.exportServicePerimeter",
          + "cloudasset.assets.exportServicemanagementServices",
          + "cloudasset.assets.exportSpannerDatabases",
          + "cloudasset.assets.exportSpannerInstances",
          + "cloudasset.assets.exportSqladminInstances",
          + "cloudasset.assets.exportStorageBuckets",
          + "cloudasset.assets.listAccessPolicy",
          + "cloudasset.assets.listCloudkmsCryptoKeys",
          + "cloudasset.assets.listIamPolicy",
          + "cloudasset.assets.listOSInventories",
          + "cloudasset.assets.listOrgPolicy",
          + "cloudasset.assets.listResource",
          + "cloudasset.assets.searchAllIamPolicies",
          + "cloudasset.assets.searchAllResources",
          + "recommender.cloudAssetInsights.get",
          + "recommender.cloudAssetInsights.list",
          + "recommender.locations.get",
          + "recommender.locations.list",
        ]
*/


/*##################################
  Custom Role Crypto Poweruser
*/##################################

/* permission for crypto poweruser 

permissions = [
          + "cloudkms.cryptoKeyVersions.create",
          + "cloudkms.cryptoKeyVersions.destroy",
          + "cloudkms.cryptoKeyVersions.get",
          + "cloudkms.cryptoKeyVersions.list",
          + "cloudkms.cryptoKeyVersions.restore",
          + "cloudkms.cryptoKeyVersions.update",
          + "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation",
          + "cloudkms.cryptoKeyVersions.useToEncryptViaDelegation",
          + "cloudkms.cryptoKeys.create",
          + "cloudkms.cryptoKeys.get",
          + "cloudkms.cryptoKeys.getIamPolicy",
          + "cloudkms.cryptoKeys.list",
          + "cloudkms.cryptoKeys.setIamPolicy",
          + "cloudkms.cryptoKeys.update",
          + "cloudkms.importJobs.create",
          + "cloudkms.importJobs.get",
          + "cloudkms.importJobs.getIamPolicy",
          + "cloudkms.importJobs.list",
          + "cloudkms.importJobs.setIamPolicy",
          + "cloudkms.importJobs.useToImport",
          + "cloudkms.keyRings.create",
          + "cloudkms.keyRings.createTagBinding",
          + "cloudkms.keyRings.deleteTagBinding",
          + "cloudkms.keyRings.get",
          + "cloudkms.keyRings.getIamPolicy",
          + "cloudkms.keyRings.list",
          + "cloudkms.keyRings.listTagBindings",
          + "cloudkms.keyRings.setIamPolicy",
          + "cloudkms.locations.get",
          + "cloudkms.locations.list",
          + "resourcemanager.projects.get",
        ]
*/


/*##################################
  Custom Role CloudEng Admin
*/##################################

/* permission for cloudeng admin 

   permissions = [
          + "compute.images.create",
          + "compute.images.delete",
          + "compute.images.deprecate",
          + "compute.images.get",
          + "compute.images.getFromFamily",
          + "compute.images.getIamPolicy",
          + "compute.images.list",
          + "compute.images.setIamPolicy",
          + "compute.images.setLabels",
          + "compute.images.update",
          + "compute.images.useReadOnly",
          + "compute.instanceGroupManagers.create",
          + "compute.instanceGroupManagers.delete",
          + "compute.instanceGroupManagers.get",
          + "compute.instanceGroupManagers.list",
          + "compute.instanceGroupManagers.update",
          + "compute.instanceGroupManagers.use",
          + "compute.instanceGroups.create",
          + "compute.instanceGroups.delete",
          + "compute.instanceGroups.get",
          + "compute.instanceGroups.list",
          + "compute.instanceGroups.update",
          + "compute.instanceGroups.use",
          + "compute.instanceTemplates.create",
          + "compute.instanceTemplates.delete",
          + "compute.instanceTemplates.get",
          + "compute.instanceTemplates.getIamPolicy",
          + "compute.instanceTemplates.list",
          + "compute.instanceTemplates.setIamPolicy",
          + "compute.instanceTemplates.useReadOnly",
          + "compute.instances.addAccessConfig",
          + "compute.instances.addMaintenancePolicies",
          + "compute.instances.addResourcePolicies",
          + "compute.instances.attachDisk",
          + "compute.instances.create",
          + "compute.instances.delete",
          + "compute.instances.deleteAccessConfig",
          + "compute.instances.detachDisk",
          + "compute.instances.get",
          + "compute.instances.getEffectiveFirewalls",
          + "compute.instances.getGuestAttributes",
          + "compute.instances.getIamPolicy",
          + "compute.instances.getScreenshot",
          + "compute.instances.getSerialPortOutput",
          + "compute.instances.getShieldedInstanceIdentity",
          + "compute.instances.getShieldedVmIdentity",
          + "compute.instances.list",
          + "compute.instances.listReferrers",
          + "compute.instances.osAdminLogin",
          + "compute.instances.osLogin",
          + "compute.instances.removeMaintenancePolicies",
          + "compute.instances.removeResourcePolicies",
          + "compute.instances.reset",
          + "compute.instances.resume",
          + "compute.instances.sendDiagnosticInterrupt",
          + "compute.instances.setDeletionProtection",
          + "compute.instances.setDiskAutoDelete",
          + "compute.instances.setIamPolicy",
          + "compute.instances.setLabels",
          + "compute.instances.setMachineResources",
          + "compute.instances.setMachineType",
          + "compute.instances.setMetadata",
          + "compute.instances.setMinCpuPlatform",
          + "compute.instances.setScheduling",
          + "compute.instances.setServiceAccount",
          + "compute.instances.setShieldedInstanceIntegrityPolicy",
          + "compute.instances.setShieldedVmIntegrityPolicy",
          + "compute.instances.setTags",
          + "compute.instances.start",
          + "compute.instances.startWithEncryptionKey",
          + "compute.instances.stop",
          + "compute.instances.suspend",
          + "compute.instances.update",
          + "compute.instances.updateAccessConfig",
          + "compute.instances.updateDisplayDevice",
          + "compute.instances.updateNetworkInterface",
          + "compute.instances.updateSecurity",
          + "compute.instances.updateShieldedInstanceConfig",
          + "compute.instances.updateShieldedVmConfig",
          + "compute.instances.use",
          + "compute.instances.useReadOnly",
          + "compute.interconnectAttachments.create",
          + "compute.interconnectAttachments.delete",
          + "compute.interconnectAttachments.get",
          + "compute.interconnectAttachments.list",
          + "compute.interconnectAttachments.setLabels",
          + "compute.interconnectAttachments.update",
          + "compute.interconnectAttachments.use",
          + "compute.interconnectLocations.get",
          + "compute.interconnectLocations.list",
          + "compute.interconnects.create",
          + "compute.interconnects.delete",
          + "compute.interconnects.get",
          + "compute.interconnects.list",
          + "compute.interconnects.setLabels",
          + "compute.interconnects.update",
          + "compute.interconnects.use",
          + "compute.licenseCodes.get",
          + "compute.licenseCodes.getIamPolicy",
          + "compute.licenseCodes.list",
          + "compute.licenseCodes.setIamPolicy",
          + "compute.licenseCodes.update",
          + "compute.licenseCodes.use",
          + "compute.licenses.create",
          + "compute.licenses.delete",
          + "compute.licenses.get",
          + "compute.licenses.getIamPolicy",
          + "compute.licenses.list",
          + "compute.licenses.setIamPolicy",
          + "compute.machineImages.create",
          + "compute.machineImages.delete",
          + "compute.machineImages.get",
          + "compute.machineImages.getIamPolicy",
          + "compute.machineImages.list",
          + "compute.machineImages.setIamPolicy",
          + "compute.machineImages.useReadOnly",
          + "compute.machineTypes.get",
          + "compute.machineTypes.list",
          + "compute.maintenancePolicies.create",
          + "compute.maintenancePolicies.delete",
          + "compute.maintenancePolicies.get",
          + "compute.maintenancePolicies.getIamPolicy",
          + "compute.maintenancePolicies.list",
          + "compute.maintenancePolicies.setIamPolicy",
          + "compute.maintenancePolicies.use",
          + "compute.networkEndpointGroups.attachNetworkEndpoints",
          + "compute.networkEndpointGroups.create",
          + "compute.networkEndpointGroups.delete",
          + "compute.networkEndpointGroups.detachNetworkEndpoints",
          + "compute.networkEndpointGroups.get",
          + "compute.networkEndpointGroups.getIamPolicy",
          + "compute.networkEndpointGroups.list",
          + "compute.networkEndpointGroups.setIamPolicy",
          + "compute.networkEndpointGroups.use",
          + "compute.networks.access",
          + "compute.networks.addPeering",
          + "compute.networks.create",
          + "compute.networks.delete",
          + "compute.networks.get",
          + "compute.networks.getEffectiveFirewalls",
          + "compute.networks.list",
          + "compute.networks.listPeeringRoutes",
          + "compute.networks.mirror",
          + "compute.networks.removePeering",
          + "compute.networks.switchToCustomMode",
          + "compute.networks.update",
          + "compute.networks.updatePeering",
          + "compute.networks.updatePolicy",
          + "compute.networks.use",
          + "compute.networks.useExternalIp",
          + "compute.nodeGroups.addNodes",
          + "compute.nodeGroups.create",
          + "compute.nodeGroups.delete",
          + "compute.nodeGroups.deleteNodes",
          + "compute.nodeGroups.get",
          + "compute.nodeGroups.getIamPolicy",
          + "compute.nodeGroups.list",
          + "compute.nodeGroups.setIamPolicy",
          + "compute.nodeGroups.setNodeTemplate",
          + "compute.nodeGroups.update",
          + "compute.nodeTemplates.create",
          + "compute.nodeTemplates.delete",
          + "compute.nodeTemplates.get",
          + "compute.nodeTemplates.getIamPolicy",
          + "compute.nodeTemplates.list",
          + "compute.nodeTemplates.setIamPolicy",
          + "compute.nodeTypes.get",
          + "compute.nodeTypes.list",
          + "compute.organizations.disableXpnHost",
          + "compute.organizations.disableXpnResource",
          + "compute.organizations.enableXpnHost",
          + "compute.organizations.enableXpnResource",
          + "compute.organizations.listAssociations",
          + "compute.organizations.setFirewallPolicy",
          + "compute.organizations.setSecurityPolicy",
          + "compute.oslogin.updateExternalUser",
          + "compute.packetMirrorings.update",
          + "compute.projects.get",
          + "compute.projects.setCommonInstanceMetadata",
          + "compute.projects.setDefaultNetworkTier",
          + "compute.projects.setDefaultServiceAccount",
          + "compute.projects.setUsageExportBucket",
          + "compute.publicAdvertisedPrefixes.create",
          + "compute.publicAdvertisedPrefixes.delete",
          + "compute.publicAdvertisedPrefixes.get",
          + "compute.publicAdvertisedPrefixes.list",
          + "compute.publicAdvertisedPrefixes.update",
          + "compute.publicAdvertisedPrefixes.updatePolicy",
          + "compute.publicAdvertisedPrefixes.use",
          + "compute.publicDelegatedPrefixes.create",
          + "compute.publicDelegatedPrefixes.delete",
          + "compute.publicDelegatedPrefixes.get",
          + "compute.publicDelegatedPrefixes.list",
          + "compute.publicDelegatedPrefixes.update",
          + "compute.publicDelegatedPrefixes.updatePolicy",
          + "compute.publicDelegatedPrefixes.use",
          + "compute.regionBackendServices.create",
          + "compute.regionBackendServices.delete",
          + "compute.regionBackendServices.get",
          + "compute.regionBackendServices.getIamPolicy",
          + "compute.regionBackendServices.list",
          + "compute.regionBackendServices.setIamPolicy",
          + "compute.regionBackendServices.setSecurityPolicy",
          + "compute.regionBackendServices.update",
          + "compute.regionBackendServices.use",
          + "compute.regionHealthCheckServices.create",
          + "compute.regionHealthCheckServices.delete",
          + "compute.regionHealthCheckServices.get",
          + "compute.regionHealthCheckServices.list",
          + "compute.regionHealthCheckServices.update",
          + "compute.regionHealthCheckServices.use",
          + "compute.regionHealthChecks.create",
          + "compute.regionHealthChecks.delete",
          + "compute.regionHealthChecks.get",
          + "compute.regionHealthChecks.list",
          + "compute.regionHealthChecks.update",
          + "compute.regionHealthChecks.use",
          + "compute.regionHealthChecks.useReadOnly",
          + "compute.regionNetworkEndpointGroups.create",
          + "compute.regionNetworkEndpointGroups.delete",
          + "compute.regionNetworkEndpointGroups.get",
          + "compute.regionNetworkEndpointGroups.list",
          + "compute.regionNetworkEndpointGroups.use",
          + "compute.regionNotificationEndpoints.create",
          + "compute.regionNotificationEndpoints.delete",
          + "compute.regionNotificationEndpoints.get",
          + "compute.regionNotificationEndpoints.list",
          + "compute.regionNotificationEndpoints.update",
          + "compute.regionNotificationEndpoints.use",
          + "compute.regionOperations.delete",
          + "compute.regionOperations.get",
          + "compute.regionOperations.getIamPolicy",
          + "compute.regionOperations.list",
          + "compute.regionOperations.setIamPolicy",
          + "compute.regionSslCertificates.create",
          + "compute.regionSslCertificates.delete",
          + "compute.regionSslCertificates.get",
          + "compute.regionSslCertificates.list",
          + "compute.regionTargetHttpProxies.create",
          + "compute.regionTargetHttpProxies.delete",
          + "compute.regionTargetHttpProxies.get",
          + "compute.regionTargetHttpProxies.list",
          + "compute.regionTargetHttpProxies.setUrlMap",
          + "compute.regionTargetHttpProxies.use",
          + "compute.regionTargetHttpsProxies.create",
          + "compute.regionTargetHttpsProxies.delete",
          + "compute.regionTargetHttpsProxies.get",
          + "compute.regionTargetHttpsProxies.list",
          + "compute.regionTargetHttpsProxies.setSslCertificates",
          + "compute.regionTargetHttpsProxies.setUrlMap",
          + "compute.regionTargetHttpsProxies.use",
          + "compute.regionUrlMaps.create",
          + "compute.regionUrlMaps.delete",
          + "compute.regionUrlMaps.get",
          + "compute.regionUrlMaps.invalidateCache",
          + "compute.regionUrlMaps.list",
          + "compute.regionUrlMaps.update",
          + "compute.regionUrlMaps.use",
          + "compute.regionUrlMaps.validate",
          + "compute.regions.get",
          + "compute.regions.list",
          + "compute.reservations.create",
          + "compute.reservations.delete",
          + "compute.reservations.get",
          + "compute.reservations.list",
          + "compute.reservations.resize",
          + "compute.reservations.update",
          + "compute.resourcePolicies.create",
          + "compute.resourcePolicies.delete",
          + "compute.resourcePolicies.get",
          + "compute.resourcePolicies.list",
          + "compute.resourcePolicies.use",
          + "compute.routers.create",
          + "compute.routers.delete",
          + "compute.routers.get",
          + "compute.routers.list",
          + "compute.routers.update",
          + "compute.routers.use",
          + "compute.routes.create",
          + "compute.routes.delete",
          + "compute.routes.get",
          + "compute.routes.list",
          + "compute.securityPolicies.addAssociation",
          + "compute.securityPolicies.copyRules",
          + "compute.securityPolicies.create",
          + "compute.securityPolicies.delete",
          + "compute.securityPolicies.get",
          + "compute.securityPolicies.getIamPolicy",
          + "compute.securityPolicies.list",
          + "compute.securityPolicies.move",
          + "compute.securityPolicies.removeAssociation",
          + "compute.securityPolicies.setIamPolicy",
          + "compute.securityPolicies.update",
          + "compute.securityPolicies.use",
          + "compute.serviceAttachments.create",
          + "compute.serviceAttachments.delete",
          + "compute.serviceAttachments.get",
          + "compute.serviceAttachments.list",
          + "compute.serviceAttachments.update",
          + "compute.snapshots.create",
          + "compute.snapshots.delete",
          + "compute.snapshots.get",
          + "compute.snapshots.getIamPolicy",
          + "compute.snapshots.list",
          + "compute.snapshots.setIamPolicy",
          + "compute.snapshots.setLabels",
          + "compute.snapshots.useReadOnly",
          + "compute.sslCertificates.create",
          + "compute.sslCertificates.delete",
          + "compute.sslCertificates.get",
          + "compute.sslCertificates.list",
          + "compute.sslPolicies.create",
          + "compute.sslPolicies.delete",
          + "compute.sslPolicies.get",
          + "compute.sslPolicies.list",
          + "compute.sslPolicies.listAvailableFeatures",
          + "compute.sslPolicies.update",
          + "compute.sslPolicies.use",
          + "compute.subnetworks.create",
          + "compute.subnetworks.delete",
          + "compute.subnetworks.expandIpCidrRange",
          + "compute.subnetworks.get",
          + "compute.subnetworks.getIamPolicy",
          + "compute.subnetworks.list",
          + "compute.subnetworks.mirror",
          + "compute.subnetworks.setIamPolicy",
          + "compute.subnetworks.setPrivateIpGoogleAccess",
          + "compute.subnetworks.update",
          + "compute.subnetworks.use",
          + "compute.subnetworks.useExternalIp",
          + "compute.targetGrpcProxies.create",
          + "compute.targetGrpcProxies.delete",
          + "compute.targetGrpcProxies.get",
          + "compute.targetGrpcProxies.list",
          + "compute.targetGrpcProxies.update",
          + "compute.targetGrpcProxies.use",
          + "compute.targetHttpProxies.create",
          + "compute.targetHttpProxies.delete",
          + "compute.targetHttpProxies.get",
          + "compute.targetHttpProxies.list",
          + "compute.targetHttpProxies.setUrlMap",
          + "compute.targetHttpProxies.use",
          + "compute.targetHttpsProxies.create",
          + "compute.targetHttpsProxies.delete",
          + "compute.targetHttpsProxies.get",
          + "compute.targetHttpsProxies.list",
          + "compute.targetHttpsProxies.setSslCertificates",
          + "compute.targetHttpsProxies.setSslPolicy",
          + "compute.targetHttpsProxies.setUrlMap",
          + "compute.targetHttpsProxies.use",
          + "compute.targetInstances.create",
          + "compute.targetInstances.delete",
          + "compute.targetInstances.get",
          + "compute.targetInstances.list",
          + "compute.targetInstances.use",
          + "compute.targetPools.addHealthCheck",
          + "compute.targetPools.addInstance",
          + "compute.targetPools.create",
          + "compute.targetPools.delete",
          + "compute.targetPools.get",
          + "compute.targetPools.list",
          + "compute.targetPools.removeHealthCheck",
          + "compute.targetPools.removeInstance",
          + "compute.targetPools.update",
          + "compute.targetPools.use",
          + "compute.targetSslProxies.create",
          + "compute.targetSslProxies.delete",
          + "compute.targetSslProxies.get",
          + "compute.targetSslProxies.list",
          + "compute.targetSslProxies.setBackendService",
          + "compute.targetSslProxies.setProxyHeader",
          + "compute.targetSslProxies.setSslCertificates",
          + "compute.targetSslProxies.use",
          + "compute.targetTcpProxies.create",
          + "compute.targetTcpProxies.delete",
          + "compute.targetTcpProxies.get",
          + "compute.targetTcpProxies.list",
          + "compute.targetTcpProxies.update",
          + "compute.targetTcpProxies.use",
          + "compute.targetVpnGateways.create",
          + "compute.targetVpnGateways.delete",
          + "compute.targetVpnGateways.get",
          + "compute.targetVpnGateways.list",
          + "compute.targetVpnGateways.setLabels",
          + "compute.targetVpnGateways.use",
          + "compute.urlMaps.create",
          + "compute.urlMaps.delete",
          + "compute.urlMaps.get",
          + "compute.urlMaps.invalidateCache",
          + "compute.urlMaps.list",
          + "compute.urlMaps.update",
          + "compute.urlMaps.use",
          + "compute.urlMaps.validate",
          + "compute.vpnGateways.create",
          + "compute.vpnGateways.delete",
          + "compute.vpnGateways.get",
          + "compute.vpnGateways.list",
          + "compute.vpnGateways.setLabels",
          + "compute.vpnGateways.use",
          + "compute.vpnTunnels.create",
          + "compute.vpnTunnels.delete",
          + "compute.vpnTunnels.get",
          + "compute.vpnTunnels.list",
          + "compute.vpnTunnels.setLabels",
          + "compute.zoneOperations.delete",
          + "compute.zoneOperations.get",
          + "compute.zoneOperations.getIamPolicy",
          + "compute.zoneOperations.list",
          + "compute.zoneOperations.setIamPolicy",
          + "compute.zones.get",
          + "compute.zones.list",
          + "consumerprocurement.accounts.get",
          + "consumerprocurement.accounts.list",
          + "consumerprocurement.orders.get",
          + "consumerprocurement.orders.list",
          + "container.apiServices.create",
          + "container.apiServices.delete",
          + "container.apiServices.get",
          + "container.apiServices.getStatus",
          + "container.apiServices.list",
          + "container.apiServices.update",
          + "container.apiServices.updateStatus",
          + "container.auditSinks.create",
          + "container.auditSinks.delete",
          + "container.auditSinks.get",
          + "container.auditSinks.list",
          + "container.auditSinks.update",
          + "container.backendConfigs.create",
          + "container.backendConfigs.delete",
          + "container.backendConfigs.get",
          + "container.backendConfigs.list",
          + "container.backendConfigs.update",
          + "container.bindings.create",
          + "container.bindings.delete",
          + "container.bindings.get",
          + "container.bindings.list",
          + "container.bindings.update",
          + "container.certificateSigningRequests.approve",
          + "container.certificateSigningRequests.create",
          + "container.certificateSigningRequests.delete",
          + "container.certificateSigningRequests.get",
          + "container.certificateSigningRequests.getStatus",
          + "container.certificateSigningRequests.list",
          + "container.certificateSigningRequests.update",
          + "container.certificateSigningRequests.updateStatus",
          + "container.clusterRoleBindings.create",
          + "container.clusterRoleBindings.delete",
          + "container.clusterRoleBindings.get",
          + "container.clusterRoleBindings.list",
          + "container.clusterRoleBindings.update",
          + "container.clusterRoles.bind",
          + "container.clusterRoles.create",
          + "container.clusterRoles.delete",
          + "container.clusterRoles.escalate",
          + "container.clusterRoles.get",
          + "container.clusterRoles.list",
          + "container.clusterRoles.update",
          + "container.clusters.create",
          + "container.clusters.delete",
          + "container.clusters.get",
          + "container.clusters.getCredentials",
          + "container.clusters.list",
          + "container.clusters.update",
          + "container.componentStatuses.get",
          + "container.componentStatuses.list",
          + "container.configMaps.create",
          + "container.configMaps.delete",
          + "container.configMaps.get",
          + "container.configMaps.list",
          + "container.configMaps.update",
          + "container.controllerRevisions.create",
          + "container.controllerRevisions.delete",
          + "container.controllerRevisions.get",
          + "container.controllerRevisions.list",
          + "container.controllerRevisions.update",
          + "container.cronJobs.create",
          + "container.cronJobs.delete",
          + "container.cronJobs.get",
          + "container.cronJobs.getStatus",
          + "container.cronJobs.list",
          + "container.cronJobs.update",
          + "container.cronJobs.updateStatus",
          + "container.csiDrivers.create",
          + "container.csiDrivers.delete",
          + "container.csiDrivers.get",
          + "container.csiDrivers.list",
          + "container.csiDrivers.update",
          + "container.csiNodeInfos.create",
          + "container.csiNodeInfos.delete",
          + "container.csiNodeInfos.get",
          + "container.csiNodeInfos.list",
          + "container.csiNodeInfos.update",
          + "container.csiNodes.create",
          + "container.csiNodes.delete",
          + "container.csiNodes.get",
          + "container.csiNodes.list",
          + "container.csiNodes.update",
          + "container.customResourceDefinitions.create",
          + "container.customResourceDefinitions.delete",
          + "container.customResourceDefinitions.get",
          + "container.customResourceDefinitions.getStatus",
          + "container.customResourceDefinitions.list",
          + "container.customResourceDefinitions.update",
          + "container.customResourceDefinitions.updateStatus",
          + "container.daemonSets.create",
          + "container.daemonSets.delete",
          + "container.daemonSets.get",
          + "container.daemonSets.getStatus",
          + "container.daemonSets.list",
          + "container.daemonSets.update",
          + "container.daemonSets.updateStatus",
          + "container.deployments.create",
          + "container.deployments.delete",
          + "container.deployments.get",
          + "container.deployments.getScale",
          + "container.deployments.getStatus",
          + "container.deployments.list",
          + "container.deployments.rollback",
          + "container.deployments.update",
          + "container.deployments.updateScale",
          + "container.deployments.updateStatus",
          + "container.endpointSlices.create",
          + "container.endpointSlices.delete",
          + "container.endpointSlices.get",
          + "container.endpointSlices.list",
          + "container.endpointSlices.update",
          + "container.endpoints.create",
          + "container.endpoints.delete",
          + "container.endpoints.get",
          + "container.endpoints.list",
          + "container.endpoints.update",
          + "container.events.create",
          + "container.events.delete",
          + "container.events.get",
          + "container.events.list",
          + "container.events.update",
          + "container.frontendConfigs.create",
          + "container.frontendConfigs.delete",
          + "container.frontendConfigs.get",
          + "container.frontendConfigs.list",
          + "container.frontendConfigs.update",
          + "container.horizontalPodAutoscalers.create",
          + "container.horizontalPodAutoscalers.delete",
          + "container.horizontalPodAutoscalers.get",
          + "container.horizontalPodAutoscalers.getStatus",
          + "container.horizontalPodAutoscalers.list",
          + "container.horizontalPodAutoscalers.update",
          + "container.horizontalPodAutoscalers.updateStatus",
          + "container.hostServiceAgent.use",
          + "container.ingresses.create",
          + "container.ingresses.delete",
          + "container.ingresses.get",
          + "container.ingresses.getStatus",
          + "container.ingresses.list",
          + "container.ingresses.update",
          + "container.ingresses.updateStatus",
          + "container.initializerConfigurations.create",
          + "container.initializerConfigurations.delete",
          + "container.initializerConfigurations.get",
          + "container.initializerConfigurations.list",
          + "container.initializerConfigurations.update",
          + "container.jobs.create",
          + "container.jobs.delete",
          + "container.jobs.get",
          + "container.jobs.getStatus",
          + "container.jobs.list",
          + "container.jobs.update",
          + "container.jobs.updateStatus",
          + "container.leases.create",
          + "container.leases.delete",
          + "container.leases.get",
          + "container.leases.list",
          + "container.leases.update",
          + "container.limitRanges.create",
          + "container.limitRanges.delete",
          + "container.limitRanges.get",
          + "container.limitRanges.list",
          + "container.limitRanges.update",
          + "container.localSubjectAccessReviews.create",
          + "container.localSubjectAccessReviews.list",
          + "container.managedCertificates.create",
          + "container.managedCertificates.delete",
          + "container.managedCertificates.get",
          + "container.managedCertificates.list",
          + "container.managedCertificates.update",
          + "container.mutatingWebhookConfigurations.create",
          + "container.mutatingWebhookConfigurations.delete",
          + "container.mutatingWebhookConfigurations.get",
          + "container.mutatingWebhookConfigurations.list",
          + "container.mutatingWebhookConfigurations.update",
          + "container.namespaces.create",
          + "container.namespaces.delete",
          + "container.namespaces.finalize",
          + "container.namespaces.get",
          + "container.namespaces.getStatus",
          + "container.namespaces.list",
          + "container.namespaces.update",
          + "container.namespaces.updateStatus",
          + "container.networkPolicies.create",
          + "container.networkPolicies.delete",
          + "container.networkPolicies.get",
          + "container.networkPolicies.list",
          + "container.networkPolicies.update",
          + "container.nodes.create",
          + "container.nodes.delete",
          + "container.nodes.get",
          + "container.nodes.getStatus",
          + "container.nodes.list",
          + "container.nodes.proxy",
          + "container.nodes.update",
          + "container.nodes.updateStatus",
          + "container.operations.get",
          + "container.operations.list",
          + "container.persistentVolumeClaims.create",
          + "container.persistentVolumeClaims.delete",
          + "container.persistentVolumeClaims.get",
          + "container.persistentVolumeClaims.getStatus",
          + "container.persistentVolumeClaims.list",
          + "container.persistentVolumeClaims.update",
          + "container.persistentVolumeClaims.updateStatus",
          + "container.persistentVolumes.create",
          + "container.persistentVolumes.delete",
          + "container.persistentVolumes.get",
          + "container.persistentVolumes.getStatus",
          + "container.persistentVolumes.list",
          + "container.persistentVolumes.update",
          + "container.persistentVolumes.updateStatus",
          + "container.petSets.create",
          + "container.petSets.delete",
          + "container.petSets.get",
          + "container.petSets.list",
          + "container.petSets.update",
          + "container.petSets.updateStatus",
          + "container.podDisruptionBudgets.create",
          + "container.podDisruptionBudgets.delete",
          + "container.podDisruptionBudgets.get",
          + "container.podDisruptionBudgets.getStatus",
          + "container.podDisruptionBudgets.list",
          + "container.podDisruptionBudgets.update",
          + "container.podDisruptionBudgets.updateStatus",
          + "container.podPresets.create",
          + "container.podPresets.delete",
          + "container.podPresets.get",
          + "container.podPresets.list",
          + "container.podPresets.update",
          + "container.podSecurityPolicies.create",
          + "container.podSecurityPolicies.delete",
          + "container.podSecurityPolicies.get",
          + "container.podSecurityPolicies.list",
          + "container.podSecurityPolicies.update",
          + "container.podSecurityPolicies.use",
          + "container.podTemplates.create",
          + "container.podTemplates.delete",
          + "container.podTemplates.get",
          + "container.podTemplates.list",
          + "container.podTemplates.update",
          + "container.pods.attach",
          + "container.pods.create",
          + "container.pods.delete",
          + "container.pods.evict",
          + "container.pods.exec",
          + "container.pods.get",
          + "container.pods.getLogs",
          + "container.pods.getStatus",
          + "container.pods.initialize",
          + "container.pods.list",
          + "container.pods.portForward",
          + "container.pods.proxy",
          + "container.pods.update",
          + "container.pods.updateStatus",
          + "container.priorityClasses.create",
          + "container.priorityClasses.delete",
          + "container.priorityClasses.get",
          + "container.priorityClasses.list",
          + "container.priorityClasses.update",
          + "container.replicaSets.create",
          + "container.replicaSets.delete",
          + "container.replicaSets.get",
          + "container.replicaSets.getScale",
          + "container.replicaSets.getStatus",
          + "container.replicaSets.list",
          + "container.replicaSets.update",
          + "container.replicaSets.updateScale",
          + "container.replicaSets.updateStatus",
          + "container.replicationControllers.create",
          + "container.replicationControllers.delete",
          + "container.replicationControllers.get",
          + "container.replicationControllers.getScale",
          + "container.replicationControllers.getStatus",
          + "container.replicationControllers.list",
          + "container.replicationControllers.update",
          + "container.replicationControllers.updateScale",
          + "container.replicationControllers.updateStatus",
          + "container.resourceQuotas.create",
          + "container.resourceQuotas.delete",
          + "container.resourceQuotas.get",
          + "container.resourceQuotas.getStatus",
          + "container.resourceQuotas.list",
          + "container.resourceQuotas.update",
          + "container.resourceQuotas.updateStatus",
          + "container.roleBindings.create",
          + "container.roleBindings.delete",
          + "container.roleBindings.get",
          + "container.roleBindings.list",
          + "container.roleBindings.update",
          + "container.roles.bind",
          + "container.roles.create",
          + "container.roles.delete",
          + "container.roles.escalate",
          + "container.roles.get",
          + "container.roles.list",
          + "container.roles.update",
          + "container.runtimeClasses.create",
          + "container.runtimeClasses.delete",
          + "container.runtimeClasses.get",
          + "container.runtimeClasses.list",
          + "container.runtimeClasses.update",
          + "container.scheduledJobs.create",
          + "container.scheduledJobs.delete",
          + "container.scheduledJobs.get",
          + "container.scheduledJobs.list",
          + "container.scheduledJobs.update",
          + "container.scheduledJobs.updateStatus",
          + "container.secrets.create",
          + "container.secrets.delete",
          + "container.secrets.get",
          + "container.secrets.list",
          + "container.secrets.update",
          + "container.selfSubjectAccessReviews.create",
          + "container.selfSubjectAccessReviews.list",
          + "container.selfSubjectRulesReviews.create",
          + "container.serviceAccounts.create",
          + "container.serviceAccounts.createToken",
          + "container.serviceAccounts.delete",
          + "container.serviceAccounts.get",
          + "container.serviceAccounts.list",
          + "container.serviceAccounts.update",
          + "container.services.create",
          + "container.services.delete",
          + "container.services.get",
          + "container.services.getStatus",
          + "container.services.list",
          + "container.services.proxy",
          + "container.services.update",
          + "container.services.updateStatus",
          + "container.statefulSets.create",
          + "container.statefulSets.delete",
          + "container.statefulSets.get",
          + "container.statefulSets.getScale",
          + "container.statefulSets.getStatus",
          + "container.statefulSets.list",
          + "container.statefulSets.update",
          + "container.statefulSets.updateScale",
          + "container.statefulSets.updateStatus",
          + "container.storageClasses.create",
          + "container.storageClasses.delete",
          + "container.storageClasses.get",
          + "container.storageClasses.list",
          + "container.storageClasses.update",
          + "container.storageStates.create",
          + "container.storageStates.delete",
          + "container.storageStates.get",
          + "container.storageStates.getStatus",
          + "container.storageStates.list",
          + "container.storageStates.update",
          + "container.storageStates.updateStatus",
          + "container.storageVersionMigrations.create",
          + "container.storageVersionMigrations.delete",
          + "container.storageVersionMigrations.get",
          + "container.storageVersionMigrations.getStatus",
          + "container.storageVersionMigrations.list",
          + "container.storageVersionMigrations.update",
          + "container.storageVersionMigrations.updateStatus",
          + "container.subjectAccessReviews.create",
          + "container.subjectAccessReviews.list",
          + "container.thirdPartyObjects.create",
          + "container.thirdPartyObjects.delete",
          + "container.thirdPartyObjects.get",
          + "container.thirdPartyObjects.list",
          + "container.thirdPartyObjects.update",
          + "container.thirdPartyResources.create",
          + "container.thirdPartyResources.delete",
          + "container.thirdPartyResources.get",
          + "container.thirdPartyResources.list",
          + "container.thirdPartyResources.update",
          + "container.tokenReviews.create",
          + "container.updateInfos.create",
          + "container.updateInfos.delete",
          + "container.updateInfos.get",
          + "container.updateInfos.list",
          + "container.updateInfos.update",
          + "container.validatingWebhookConfigurations.create",
          + "container.validatingWebhookConfigurations.delete",
          + "container.validatingWebhookConfigurations.get",
          + "container.validatingWebhookConfigurations.list",
          + "container.validatingWebhookConfigurations.update",
          + "container.volumeAttachments.create",
          + "container.volumeAttachments.delete",
          + "container.volumeAttachments.get",
          + "container.volumeAttachments.getStatus",
          + "container.volumeAttachments.list",
          + "container.volumeAttachments.update",
          + "container.volumeAttachments.updateStatus",
          + "container.volumeSnapshotClasses.create",
          + "container.volumeSnapshotClasses.delete",
          + "container.volumeSnapshotClasses.get",
          + "container.volumeSnapshotClasses.list",
          + "container.volumeSnapshotClasses.update",
          + "container.volumeSnapshotContents.create",
          + "container.volumeSnapshotContents.delete",
          + "container.volumeSnapshotContents.get",
          + "container.volumeSnapshotContents.getStatus",
          + "container.volumeSnapshotContents.list",
          + "container.volumeSnapshotContents.update",
          + "container.volumeSnapshotContents.updateStatus",
          + "container.volumeSnapshots.create",
          + "container.volumeSnapshots.delete",
          + "container.volumeSnapshots.get",
          + "container.volumeSnapshots.getStatus",
          + "container.volumeSnapshots.list",
          + "container.volumeSnapshots.update",
          + "container.volumeSnapshots.updateStatus",
          + "dataprocessing.datasources.get",
          + "dataprocessing.datasources.list",
          + "dataprocessing.groupcontrols.get",
          + "dataprocessing.groupcontrols.list",
          + "iam.roles.get",
          + "iam.roles.list",
          + "iam.serviceAccounts.actAs",
          + "iam.serviceAccounts.get",
          + "iam.serviceAccounts.list",
          + "logging.buckets.copyLogEntries",
          + "logging.buckets.create",
          + "logging.buckets.delete",
          + "logging.buckets.get",
          + "logging.buckets.list",
          + "logging.buckets.undelete",
          + "logging.buckets.update",
          + "logging.cmekSettings.get",
          + "logging.cmekSettings.update",
          + "logging.exclusions.create",
          + "logging.exclusions.delete",
          + "logging.exclusions.get",
          + "logging.exclusions.list",
          + "logging.exclusions.update",
          + "logging.fields.access",
          + "logging.locations.get",
          + "logging.locations.list",
          + "logging.logEntries.create",
          + "logging.logEntries.download",
          + "logging.logEntries.list",
          + "logging.logMetrics.create",
          + "logging.logMetrics.delete",
          + "logging.logMetrics.get",
          + "logging.logMetrics.list",
          + "logging.logMetrics.update",
          + "logging.logServiceIndexes.list",
          + "logging.logServices.list",
          + "logging.logs.delete",
          + "logging.logs.list",
          + "logging.notificationRules.create",
          + "logging.notificationRules.delete",
          + "logging.notificationRules.get",
          + "logging.notificationRules.list",
          + "logging.notificationRules.update",
          + "logging.operations.cancel",
          + "logging.operations.get",
          + "logging.operations.list",
          + "logging.privateLogEntries.list",
          + "logging.queries.create",
          + "logging.queries.delete",
          + "logging.queries.get",
          + "logging.queries.list",
          + "logging.queries.listShared",
          + "logging.queries.share",
          + "logging.queries.update",
          + "logging.queries.updateShared",
          + "logging.sinks.create",
          + "logging.sinks.delete",
          + "logging.sinks.get",
          + "logging.sinks.list",
          + "logging.sinks.update",
          + "logging.usage.get",
          + "logging.views.access",
          + "logging.views.create",
          + "logging.views.delete",
          + "logging.views.get",
          + "logging.views.list",
          + "logging.views.listLogs",
          + "logging.views.listResourceKeys",
          + "logging.views.listResourceValues",
          + "logging.views.update",
          + "monitoring.alertPolicies.create",
          + "monitoring.alertPolicies.delete",
          + "monitoring.alertPolicies.get",
          + "monitoring.alertPolicies.list",
          + "monitoring.alertPolicies.update",
          + "monitoring.dashboards.create",
          + "monitoring.dashboards.delete",
          + "monitoring.dashboards.get",
          + "monitoring.dashboards.list",
          + "monitoring.dashboards.update",
          + "monitoring.groups.create",
          + "monitoring.groups.delete",
          + "monitoring.groups.get",
          + "monitoring.groups.list",
          + "monitoring.groups.update",
          + "monitoring.metricDescriptors.create",
          + "monitoring.metricDescriptors.delete",
          + "monitoring.metricDescriptors.get",
          + "monitoring.metricDescriptors.list",
          + "monitoring.metricsScopes.link",
          + "monitoring.monitoredResourceDescriptors.get",
          + "monitoring.monitoredResourceDescriptors.list",
          + "monitoring.notificationChannelDescriptors.get",
          + "monitoring.notificationChannelDescriptors.list",
          + "monitoring.notificationChannels.create",
          + "monitoring.notificationChannels.delete",
          + "monitoring.notificationChannels.get",
          + "monitoring.notificationChannels.getVerificationCode",
          + "monitoring.notificationChannels.list",
          + "monitoring.notificationChannels.sendVerificationCode",
          + "monitoring.notificationChannels.update",
          + "monitoring.notificationChannels.verify",
          + "monitoring.publicWidgets.create",
          + "monitoring.publicWidgets.delete",
          + "monitoring.publicWidgets.get",
          + "monitoring.publicWidgets.list",
          + "monitoring.publicWidgets.update",
          + "monitoring.services.create",
          + "monitoring.services.delete",
          + "monitoring.services.get",
          + "monitoring.services.list",
          + "monitoring.services.update",
          + "monitoring.slos.create",
          + "monitoring.slos.delete",
          + "monitoring.slos.get",
          + "monitoring.slos.list",
          + "monitoring.slos.update",
          + "monitoring.timeSeries.create",
          + "monitoring.timeSeries.list",
          + "monitoring.uptimeCheckConfigs.create",
          + "monitoring.uptimeCheckConfigs.delete",
          + "monitoring.uptimeCheckConfigs.get",
          + "monitoring.uptimeCheckConfigs.list",
          + "monitoring.uptimeCheckConfigs.update",
          + "opsconfigmonitoring.resourceMetadata.list",
          + "opsconfigmonitoring.resourceMetadata.write",
          + "orgpolicy.constraints.list",
          + "orgpolicy.policies.list",
          + "orgpolicy.policy.get",
          + "recommender.commitmentUtilizationInsights.get",
          + "recommender.commitmentUtilizationInsights.list",
          + "recommender.usageCommitmentRecommendations.get",
          + "recommender.usageCommitmentRecommendations.list",
          + "resourcemanager.folders.create",
          + "resourcemanager.folders.delete",
          + "resourcemanager.folders.get",
          + "resourcemanager.folders.getIamPolicy",
          + "resourcemanager.folders.list",
          + "resourcemanager.folders.move",
          + "resourcemanager.folders.setIamPolicy",
          + "resourcemanager.folders.undelete",
          + "resourcemanager.folders.update",
          + "resourcemanager.organizations.get",
          + "resourcemanager.organizations.getIamPolicy",
          + "resourcemanager.organizations.setIamPolicy",
          + "resourcemanager.projects.create",
          + "resourcemanager.projects.get",
          + "resourcemanager.projects.getIamPolicy",
          + "resourcemanager.projects.list",
          + "resourcemanager.projects.move",
          + "resourcemanager.projects.setIamPolicy",
          + "serviceusage.quotas.get",
          + "serviceusage.services.enable",
          + "serviceusage.services.get",
          + "serviceusage.services.list",
          + "stackdriver.projects.edit",
          + "stackdriver.projects.get",
          + "stackdriver.resourceMetadata.write",
        ]
*/


/*##################################
  Custom Role CloudEng Poweruser
*/##################################

/* persmission for cloudeng poweruser 

permissions = [
          + "billing.accounts.get",
          + "billing.accounts.getIamPolicy",
          + "billing.accounts.getPaymentInfo",
          + "billing.accounts.getPricing",
          + "billing.accounts.getSpendingInformation",
          + "billing.accounts.getUsageExportSpec",
          + "billing.accounts.list",
          + "billing.budgets.get",
          + "billing.budgets.list",
          + "billing.credits.list",
          + "billing.resourceAssociations.list",
          + "billing.subscriptions.get",
          + "billing.subscriptions.list",
          + "cloudnotifications.activities.list",
          + "cloudsupport.properties.get",
          + "cloudsupport.techCases.get",
          + "cloudsupport.techCases.list",
          + "commerceoffercatalog.offers.get",
          + "compute.acceleratorTypes.get",
          + "compute.acceleratorTypes.list",
          + "compute.addresses.get",
          + "compute.addresses.list",
          + "compute.autoscalers.get",
          + "compute.autoscalers.list",
          + "compute.backendBuckets.get",
          + "compute.backendBuckets.list",
          + "compute.backendServices.get",
          + "compute.backendServices.getIamPolicy",
          + "compute.backendServices.list",
          + "compute.commitments.get",
          + "compute.commitments.list",
          + "compute.diskTypes.get",
          + "compute.diskTypes.list",
          + "compute.disks.get",
          + "compute.disks.getIamPolicy",
          + "compute.disks.list",
          + "compute.externalVpnGateways.get",
          + "compute.externalVpnGateways.list",
          + "compute.firewallPolicies.get",
          + "compute.firewallPolicies.getIamPolicy",
          + "compute.firewallPolicies.list",
          + "compute.firewalls.get",
          + "compute.firewalls.list",
          + "compute.forwardingRules.get",
          + "compute.forwardingRules.list",
          + "compute.globalAddresses.get",
          + "compute.globalAddresses.list",
          + "compute.globalForwardingRules.get",
          + "compute.globalForwardingRules.list",
          + "compute.globalForwardingRules.pscGet",
          + "compute.globalNetworkEndpointGroups.get",
          + "compute.globalNetworkEndpointGroups.list",
          + "compute.globalOperations.get",
          + "compute.globalOperations.getIamPolicy",
          + "compute.globalOperations.list",
          + "compute.globalPublicDelegatedPrefixes.get",
          + "compute.globalPublicDelegatedPrefixes.list",
          + "compute.healthChecks.get",
          + "compute.healthChecks.list",
          + "compute.httpHealthChecks.get",
          + "compute.httpHealthChecks.list",
          + "compute.httpsHealthChecks.get",
          + "compute.httpsHealthChecks.list",
          + "compute.images.get",
          + "compute.images.getFromFamily",
          + "compute.images.getIamPolicy",
          + "compute.images.list",
          + "compute.instanceGroupManagers.get",
          + "compute.instanceGroupManagers.list",
          + "compute.instanceGroups.get",
          + "compute.instanceGroups.list",
          + "compute.instanceTemplates.get",
          + "compute.instanceTemplates.getIamPolicy",
          + "compute.instanceTemplates.list",
          + "compute.instances.get",
          + "compute.instances.getEffectiveFirewalls",
          + "compute.instances.getGuestAttributes",
          + "compute.instances.getIamPolicy",
          + "compute.instances.getScreenshot",
          + "compute.instances.getSerialPortOutput",
          + "compute.instances.getShieldedInstanceIdentity",
          + "compute.instances.getShieldedVmIdentity",
          + "compute.instances.list",
          + "compute.instances.listReferrers",
          + "compute.interconnectAttachments.get",
          + "compute.interconnectAttachments.list",
          + "compute.interconnectLocations.get",
          + "compute.interconnectLocations.list",
          + "compute.interconnects.get",
          + "compute.interconnects.list",
          + "compute.licenseCodes.get",
          + "compute.licenseCodes.getIamPolicy",
          + "compute.licenseCodes.list",
          + "compute.licenses.get",
          + "compute.licenses.getIamPolicy",
          + "compute.licenses.list",
          + "compute.machineImages.get",
          + "compute.machineImages.getIamPolicy",
          + "compute.machineImages.list",
          + "compute.machineTypes.get",
          + "compute.machineTypes.list",
          + "compute.maintenancePolicies.get",
          + "compute.maintenancePolicies.getIamPolicy",
          + "compute.maintenancePolicies.list",
          + "compute.networkEndpointGroups.get",
          + "compute.networkEndpointGroups.getIamPolicy",
          + "compute.networkEndpointGroups.list",
          + "compute.networks.get",
          + "compute.networks.getEffectiveFirewalls",
          + "compute.networks.list",
          + "compute.networks.listPeeringRoutes",
          + "compute.nodeGroups.get",
          + "compute.nodeGroups.getIamPolicy",
          + "compute.nodeGroups.list",
          + "compute.nodeTemplates.get",
          + "compute.nodeTemplates.getIamPolicy",
          + "compute.nodeTemplates.list",
          + "compute.nodeTypes.get",
          + "compute.nodeTypes.list",
          + "compute.organizations.listAssociations",
          + "compute.projects.get",
          + "compute.publicAdvertisedPrefixes.get",
          + "compute.publicAdvertisedPrefixes.list",
          + "compute.publicDelegatedPrefixes.get",
          + "compute.publicDelegatedPrefixes.list",
          + "compute.regionBackendServices.get",
          + "compute.regionBackendServices.getIamPolicy",
          + "compute.regionBackendServices.list",
          + "compute.regionHealthCheckServices.get",
          + "compute.regionHealthCheckServices.list",
          + "compute.regionHealthChecks.get",
          + "compute.regionHealthChecks.list",
          + "compute.regionNetworkEndpointGroups.get",
          + "compute.regionNetworkEndpointGroups.list",
          + "compute.regionNotificationEndpoints.get",
          + "compute.regionNotificationEndpoints.list",
          + "compute.regionOperations.get",
          + "compute.regionOperations.getIamPolicy",
          + "compute.regionOperations.list",
          + "compute.regionSslCertificates.get",
          + "compute.regionSslCertificates.list",
          + "compute.regionTargetHttpProxies.get",
          + "compute.regionTargetHttpProxies.list",
          + "compute.regionTargetHttpsProxies.get",
          + "compute.regionTargetHttpsProxies.list",
          + "compute.regionUrlMaps.get",
          + "compute.regionUrlMaps.list",
          + "compute.regionUrlMaps.validate",
          + "compute.regions.get",
          + "compute.regions.list",
          + "compute.reservations.get",
          + "compute.reservations.list",
          + "compute.resourcePolicies.get",
          + "compute.resourcePolicies.list",
          + "compute.routers.get",
          + "compute.routers.list",
          + "compute.routes.get",
          + "compute.routes.list",
          + "compute.securityPolicies.get",
          + "compute.securityPolicies.getIamPolicy",
          + "compute.securityPolicies.list",
          + "compute.serviceAttachments.get",
          + "compute.serviceAttachments.list",
          + "compute.snapshots.get",
          + "compute.snapshots.getIamPolicy",
          + "compute.snapshots.list",
          + "compute.sslCertificates.get",
          + "compute.sslCertificates.list",
          + "compute.sslPolicies.get",
          + "compute.sslPolicies.list",
          + "compute.sslPolicies.listAvailableFeatures",
          + "compute.subnetworks.get",
          + "compute.subnetworks.getIamPolicy",
          + "compute.subnetworks.list",
          + "compute.targetGrpcProxies.get",
          + "compute.targetGrpcProxies.list",
          + "compute.targetHttpProxies.get",
          + "compute.targetHttpProxies.list",
          + "compute.targetHttpsProxies.get",
          + "compute.targetHttpsProxies.list",
          + "compute.targetInstances.get",
          + "compute.targetInstances.list",
          + "compute.targetPools.get",
          + "compute.targetPools.list",
          + "compute.targetSslProxies.get",
          + "compute.targetSslProxies.list",
          + "compute.targetTcpProxies.get",
          + "compute.targetTcpProxies.list",
          + "compute.targetVpnGateways.get",
          + "compute.targetVpnGateways.list",
          + "compute.urlMaps.get",
          + "compute.urlMaps.list",
          + "compute.urlMaps.validate",
          + "compute.vpnGateways.get",
          + "compute.vpnGateways.list",
          + "compute.vpnTunnels.get",
          + "compute.vpnTunnels.list",
          + "compute.zoneOperations.get",
          + "compute.zoneOperations.getIamPolicy",
          + "compute.zoneOperations.list",
          + "compute.zones.get",
          + "compute.zones.list",
          + "consumerprocurement.accounts.get",
          + "consumerprocurement.accounts.list",
          + "consumerprocurement.orders.get",
          + "consumerprocurement.orders.list",
          + "container.apiServices.get",
          + "container.apiServices.getStatus",
          + "container.apiServices.list",
          + "container.auditSinks.get",
          + "container.auditSinks.list",
          + "container.backendConfigs.get",
          + "container.backendConfigs.list",
          + "container.bindings.get",
          + "container.bindings.list",
          + "container.certificateSigningRequests.get",
          + "container.certificateSigningRequests.getStatus",
          + "container.certificateSigningRequests.list",
          + "container.clusterRoleBindings.get",
          + "container.clusterRoleBindings.list",
          + "container.clusterRoles.get",
          + "container.clusterRoles.list",
          + "container.clusters.get",
          + "container.clusters.list",
          + "container.componentStatuses.get",
          + "container.componentStatuses.list",
          + "container.configMaps.get",
          + "container.configMaps.list",
          + "container.controllerRevisions.get",
          + "container.controllerRevisions.list",
          + "container.cronJobs.get",
          + "container.cronJobs.getStatus",
          + "container.cronJobs.list",
          + "container.csiDrivers.get",
          + "container.csiDrivers.list",
          + "container.csiNodeInfos.get",
          + "container.csiNodeInfos.list",
          + "container.csiNodes.get",
          + "container.csiNodes.list",
          + "container.customResourceDefinitions.get",
          + "container.customResourceDefinitions.getStatus",
          + "container.customResourceDefinitions.list",
          + "container.daemonSets.get",
          + "container.daemonSets.getStatus",
          + "container.daemonSets.list",
          + "container.deployments.get",
          + "container.deployments.getScale",
          + "container.deployments.getStatus",
          + "container.deployments.list",
          + "container.endpointSlices.get",
          + "container.endpointSlices.list",
          + "container.endpoints.get",
          + "container.endpoints.list",
          + "container.events.get",
          + "container.events.list",
          + "container.frontendConfigs.get",
          + "container.frontendConfigs.list",
          + "container.horizontalPodAutoscalers.get",
          + "container.horizontalPodAutoscalers.getStatus",
          + "container.horizontalPodAutoscalers.list",
          + "container.ingresses.get",
          + "container.ingresses.getStatus",
          + "container.ingresses.list",
          + "container.initializerConfigurations.get",
          + "container.initializerConfigurations.list",
          + "container.jobs.get",
          + "container.jobs.getStatus",
          + "container.jobs.list",
          + "container.leases.get",
          + "container.leases.list",
          + "container.limitRanges.get",
          + "container.limitRanges.list",
          + "container.managedCertificates.get",
          + "container.managedCertificates.list",
          + "container.mutatingWebhookConfigurations.get",
          + "container.mutatingWebhookConfigurations.list",
          + "container.namespaces.get",
          + "container.namespaces.getStatus",
          + "container.namespaces.list",
          + "container.networkPolicies.get",
          + "container.networkPolicies.list",
          + "container.nodes.get",
          + "container.nodes.getStatus",
          + "container.nodes.list",
          + "container.operations.get",
          + "container.operations.list",
          + "container.persistentVolumeClaims.get",
          + "container.persistentVolumeClaims.getStatus",
          + "container.persistentVolumeClaims.list",
          + "container.persistentVolumes.get",
          + "container.persistentVolumes.getStatus",
          + "container.persistentVolumes.list",
          + "container.petSets.get",
          + "container.petSets.list",
          + "container.podDisruptionBudgets.get",
          + "container.podDisruptionBudgets.getStatus",
          + "container.podDisruptionBudgets.list",
          + "container.podPresets.get",
          + "container.podPresets.list",
          + "container.podSecurityPolicies.get",
          + "container.podSecurityPolicies.list",
          + "container.podTemplates.get",
          + "container.podTemplates.list",
          + "container.pods.get",
          + "container.pods.getStatus",
          + "container.pods.list",
          + "container.priorityClasses.get",
          + "container.priorityClasses.list",
          + "container.replicaSets.get",
          + "container.replicaSets.getScale",
          + "container.replicaSets.getStatus",
          + "container.replicaSets.list",
          + "container.replicationControllers.get",
          + "container.replicationControllers.getScale",
          + "container.replicationControllers.getStatus",
          + "container.replicationControllers.list",
          + "container.resourceQuotas.get",
          + "container.resourceQuotas.getStatus",
          + "container.resourceQuotas.list",
          + "container.roleBindings.get",
          + "container.roleBindings.list",
          + "container.roles.get",
          + "container.roles.list",
          + "container.runtimeClasses.get",
          + "container.runtimeClasses.list",
          + "container.scheduledJobs.get",
          + "container.scheduledJobs.list",
          + "container.serviceAccounts.get",
          + "container.serviceAccounts.list",
          + "container.services.get",
          + "container.services.getStatus",
          + "container.services.list",
          + "container.statefulSets.get",
          + "container.statefulSets.getScale",
          + "container.statefulSets.getStatus",
          + "container.statefulSets.list",
          + "container.storageClasses.get",
          + "container.storageClasses.list",
          + "container.storageStates.get",
          + "container.storageStates.getStatus",
          + "container.storageStates.list",
          + "container.storageVersionMigrations.get",
          + "container.storageVersionMigrations.getStatus",
          + "container.storageVersionMigrations.list",
          + "container.thirdPartyObjects.get",
          + "container.thirdPartyObjects.list",
          + "container.thirdPartyResources.get",
          + "container.thirdPartyResources.list",
          + "container.tokenReviews.create",
          + "container.updateInfos.get",
          + "container.updateInfos.list",
          + "container.validatingWebhookConfigurations.get",
          + "container.validatingWebhookConfigurations.list",
          + "container.volumeAttachments.get",
          + "container.volumeAttachments.getStatus",
          + "container.volumeAttachments.list",
          + "container.volumeSnapshotClasses.get",
          + "container.volumeSnapshotClasses.list",
          + "container.volumeSnapshotContents.get",
          + "container.volumeSnapshotContents.getStatus",
          + "container.volumeSnapshotContents.list",
          + "container.volumeSnapshots.get",
          + "container.volumeSnapshots.list",
          + "dataprocessing.datasources.get",
          + "dataprocessing.datasources.list",
          + "dataprocessing.groupcontrols.get",
          + "dataprocessing.groupcontrols.list",
          + "iam.roles.get",
          + "iam.roles.list",
          + "logging.buckets.get",
          + "logging.buckets.list",
          + "logging.exclusions.get",
          + "logging.exclusions.list",
          + "logging.locations.get",
          + "logging.locations.list",
          + "logging.logEntries.list",
          + "logging.logMetrics.get",
          + "logging.logMetrics.list",
          + "logging.logServiceIndexes.list",
          + "logging.logServices.list",
          + "logging.logs.list",
          + "logging.operations.get",
          + "logging.operations.list",
          + "logging.queries.create",
          + "logging.queries.delete",
          + "logging.queries.get",
          + "logging.queries.list",
          + "logging.queries.listShared",
          + "logging.queries.update",
          + "logging.sinks.get",
          + "logging.sinks.list",
          + "logging.usage.get",
          + "logging.views.get",
          + "logging.views.list",
          + "monitoring.alertPolicies.get",
          + "monitoring.alertPolicies.list",
          + "monitoring.dashboards.get",
          + "monitoring.dashboards.list",
          + "monitoring.groups.get",
          + "monitoring.groups.list",
          + "monitoring.metricDescriptors.get",
          + "monitoring.metricDescriptors.list",
          + "monitoring.monitoredResourceDescriptors.get",
          + "monitoring.monitoredResourceDescriptors.list",
          + "monitoring.notificationChannelDescriptors.get",
          + "monitoring.notificationChannelDescriptors.list",
          + "monitoring.notificationChannels.get",
          + "monitoring.notificationChannels.list",
          + "monitoring.publicWidgets.get",
          + "monitoring.publicWidgets.list",
          + "monitoring.services.get",
          + "monitoring.services.list",
          + "monitoring.slos.get",
          + "monitoring.slos.list",
          + "monitoring.timeSeries.list",
          + "monitoring.uptimeCheckConfigs.get",
          + "monitoring.uptimeCheckConfigs.list",
          + "opsconfigmonitoring.resourceMetadata.list",
          + "orgpolicy.constraints.list",
          + "orgpolicy.policies.list",
          + "orgpolicy.policy.get",
          + "recommender.commitmentUtilizationInsights.get",
          + "recommender.commitmentUtilizationInsights.list",
          + "recommender.usageCommitmentRecommendations.get",
          + "recommender.usageCommitmentRecommendations.list",
          + "resourcemanager.folders.get",
          + "resourcemanager.folders.list",
          + "resourcemanager.organizations.get",
          + "resourcemanager.organizations.getIamPolicy",
          + "resourcemanager.projects.get",
          + "resourcemanager.projects.getIamPolicy",
          + "resourcemanager.projects.list",
          + "serviceusage.quotas.get",
          + "serviceusage.services.get",
          + "serviceusage.services.list",
          + "stackdriver.projects.get",
        ]

*/

